_BASE_: "../Base-RetinaNet.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  PIXEL_STD: [47.49, 41.63, 51.28]
  MASK_ON: False
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res2", "res3", "res4", "res5"] 
  RETINANET:
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    NUM_CLASSES: 1
    SCORE_THRESH_TEST: 0.05
    NMS_THRESH_TEST: 0.5
    TOPK_CANDIDATES_TEST: 1500
  FPN:
    IN_FEATURES: ["res2", "res3", "res4"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [2, 4, 6, 8]]"]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
INPUT:
  MIN_SIZE_TRAIN: (250,)
  MAX_SIZE_TRAIN: 250
  MAX_SIZE_TEST: 250
  MIN_SIZE_TEST: 250
  CROP:
    ENABLED: False

DATASETS:
  TRAIN: ('voc_2007_trainval',)
  TEST: ('voc_2007_val',)
  POST_PROCESS:
    FINAL_NMS_THR: 0.1
    AXIS_THR: 5.0
    AREA_THR: 50.0
SOLVER:
  GAMMA: 0.96
  STEPS: (4000,7000,10000)  # 学习率衰减点调整到原来的 2 倍
  MAX_ITER: 12000  # 翻倍，保证总训练量一致
  WARMUP_ITERS: 200  # 可适当增加，避免过大的初始波动
  IMS_PER_BATCH: 32  # 单 GPU 训练，batch size 减半
  BASE_LR: 0.003  # 学习率减半，适配 batch size
  CHECKPOINT_PERIOD: 1000

TEST:
  EXPECTED_RESULTS: [['bbox', 'AP', 0, 100]]
  EVAL_PERIOD: 1000
  DETECTIONS_PER_IMAGE: 2000

OUTPUT_DIR: "/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_lowres/" #######################





