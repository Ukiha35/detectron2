[12/27 13:14:03] detectron2 INFO: Rank of current process: 0. World size: 1
[12/27 13:14:04] detectron2 INFO: Environment info:
-------------------------------  ------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/home/ps/ltc/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.7
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.1+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 2080 Ti (arch=7.5)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-11.7
Pillow                           10.4.0
torchvision                      0.15.2+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/27 13:14:04] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml', resume=True, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[], GPU='2')
[12/27 13:14:04] detectron2 INFO: Contents of args.config_file=/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RetinaNet.yaml[39m[38;5;186m"[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m47.49[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m41.63[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m51.28[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mp3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp5[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp6[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp7[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;81m!!python/object/apply:eval[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186m[[x,[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(1.0/3),[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(2.0/3)[39m[38;5;15m [39m[38;5;186m][39m[38;5;15m [39m[38;5;186mfor[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186min[39m[38;5;15m [39m[38;5;186m[8,[39m[38;5;15m [39m[38;5;186m16,[39m[38;5;15m [39m[38;5;186m24,[39m[38;5;15m [39m[38;5;186m32,[39m[38;5;15m [39m[38;5;186m48]][39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m0.5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1.0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m2.0[39m[38;5;15m][39m[38;5;15m][39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,240,230,220,210,200)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_trainval',)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_val',)[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(1500,2000,2500)[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáË°∞ÂáèÁÇπË∞ÉÊï¥Âà∞ÂéüÊù•ÁöÑ 2 ÂÄç[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m[38;5;15m  [39m[38;5;245m# ÁøªÂÄçÔºå‰øùËØÅÊÄªËÆ≠ÁªÉÈáè‰∏ÄËá¥[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m[38;5;15m  [39m[38;5;245m# ÂèØÈÄÇÂΩìÂ¢ûÂä†ÔºåÈÅøÂÖçËøáÂ§ßÁöÑÂàùÂßãÊ≥¢Âä®[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m[38;5;15m  [39m[38;5;245m# Âçï GPU ËÆ≠ÁªÉÔºåbatch size ÂáèÂçä[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáÂáèÂçäÔºåÈÄÇÈÖç batch size[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mbbox[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mAP[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m[38;5;186m"[39m[38;5;15m [39m[38;5;245m#######################[39m

[12/27 13:14:04] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCLUSTER_PARAMETER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mADJUST_PARAMETER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;204mTARGET_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mBORDER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mCANVAS_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mEXPAND[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNMM_THR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mSCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSTEP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_trainval[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m240[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m230[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m220[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m210[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.079368399158986[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12.699208415745595[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.15873679831797[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25.39841683149119[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.238105197476955[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m38.097625247236785[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m40.31747359663594[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m50.79683366298238[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m60.47621039495391[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m76.19525049447357[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_retinanet_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRetinaNet[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m47.49[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m41.63[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m51.28[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m
[38;5;204mSAVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./results[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mbbox[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mAP[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[12/27 13:14:04] detectron2 INFO: Full config saved to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/config.yaml
[12/27 13:14:04] d2.utils.env INFO: Using a generated random seed 6055490
[12/27 13:14:06] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[12/27 13:14:06] d2.data.build INFO: Removed 0 images with no usable annotations. 37 images left.
[12/27 13:14:06] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 24140        |
|            |              |[0m
[12/27 13:14:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(250, 240, 230, 220, 210, 200), max_size=250, sample_style='choice'), RandomFlip()]
[12/27 13:14:06] d2.data.build INFO: Using training sampler TrainingSampler
[12/27 13:14:06] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:14:06] d2.data.common INFO: Serializing 37 elements to byte tensors and concatenating them all ...
[12/27 13:14:06] d2.data.common INFO: Serialized dataset takes 1.26 MiB
[12/27 13:14:06] d2.data.build INFO: Making batched data loader with batch_size=16
[12/27 13:14:06] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:14:06] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:14:07] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[12/27 13:14:07] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up - Total num: 54
[12/27 13:14:07] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[12/27 13:14:07] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[12/27 13:14:07] d2.engine.train_loop INFO: Starting training from iteration 0
[12/27 13:14:17] d2.utils.events INFO:  eta: 0:16:05  iter: 19  total_loss: 3.895  loss_cls: 1.673  loss_box_reg: 2.212    time: 0.4720  last_time: 0.2823  data_time: 0.1950  last_data_time: 0.1463   lr: 0.00028772  max_mem: 1620M
[12/27 13:14:23] d2.utils.events INFO:  eta: 0:15:20  iter: 39  total_loss: 2.525  loss_cls: 1.177  loss_box_reg: 1.346    time: 0.3859  last_time: 0.3150  data_time: 0.1654  last_data_time: 0.1776   lr: 0.00058741  max_mem: 1620M
[12/27 13:14:29] d2.utils.events INFO:  eta: 0:15:11  iter: 59  total_loss: 2.106  loss_cls: 1.109  loss_box_reg: 0.9818    time: 0.3605  last_time: 0.2875  data_time: 0.1686  last_data_time: 0.1395   lr: 0.00088711  max_mem: 1620M
[12/27 13:14:36] d2.utils.events INFO:  eta: 0:14:52  iter: 79  total_loss: 1.912  loss_cls: 0.9651  loss_box_reg: 0.9228    time: 0.3487  last_time: 0.4608  data_time: 0.1687  last_data_time: 0.3139   lr: 0.0011868  max_mem: 1620M
[12/27 13:14:42] d2.utils.events INFO:  eta: 0:14:48  iter: 99  total_loss: 1.451  loss_cls: 0.5218  loss_box_reg: 0.9188    time: 0.3396  last_time: 0.2774  data_time: 0.1632  last_data_time: 0.1392   lr: 0.0014865  max_mem: 1622M
[12/27 13:14:48] d2.utils.events INFO:  eta: 0:14:52  iter: 119  total_loss: 1.337  loss_cls: 0.3513  loss_box_reg: 0.9917    time: 0.3375  last_time: 0.3525  data_time: 0.1839  last_data_time: 0.2043   lr: 0.0017862  max_mem: 1622M
[12/27 13:14:55] d2.utils.events INFO:  eta: 0:14:47  iter: 139  total_loss: 1.315  loss_cls: 0.363  loss_box_reg: 0.9491    time: 0.3345  last_time: 0.2990  data_time: 0.1722  last_data_time: 0.1522   lr: 0.0020859  max_mem: 1622M
[12/27 13:15:01] d2.utils.events INFO:  eta: 0:14:33  iter: 159  total_loss: 1.278  loss_cls: 0.3559  loss_box_reg: 0.9201    time: 0.3315  last_time: 0.2702  data_time: 0.1619  last_data_time: 0.1359   lr: 0.0023856  max_mem: 1622M
[12/27 13:15:07] d2.utils.events INFO:  eta: 0:14:24  iter: 179  total_loss: 1.261  loss_cls: 0.313  loss_box_reg: 0.9072    time: 0.3285  last_time: 0.2775  data_time: 0.1623  last_data_time: 0.1364   lr: 0.0026853  max_mem: 1622M
[12/27 13:15:13] d2.utils.events INFO:  eta: 0:14:18  iter: 199  total_loss: 2.096  loss_cls: 1.1  loss_box_reg: 0.979    time: 0.3268  last_time: 0.2969  data_time: 0.1704  last_data_time: 0.1602   lr: 0.002985  max_mem: 1622M
[12/27 13:15:15] d2.engine.hooks INFO: Overall training speed: 203 iterations in 0:01:06 (0.3271 s / it)
[12/27 13:15:15] d2.engine.hooks INFO: Total training time: 0:01:06 (0:00:00 on hooks)
[12/27 13:15:15] d2.utils.events INFO:  eta: 0:14:16  iter: 205  total_loss: 2.02  loss_cls: 1.081  loss_box_reg: 0.9234    time: 0.3266  last_time: 0.3231  data_time: 0.1677  last_data_time: 0.1838   lr: 0.003  max_mem: 1622M
[12/27 13:18:23] detectron2 INFO: Rank of current process: 0. World size: 1
[12/27 13:18:24] detectron2 INFO: Environment info:
-------------------------------  ------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/home/ps/ltc/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.7
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.1+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 2080 Ti (arch=7.5)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-11.7
Pillow                           10.4.0
torchvision                      0.15.2+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/27 13:18:24] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml', resume=True, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[], GPU='2')
[12/27 13:18:24] detectron2 INFO: Contents of args.config_file=/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RetinaNet.yaml[39m[38;5;186m"[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m47.49[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m41.63[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m51.28[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mp3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp5[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp6[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp7[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;81m!!python/object/apply:eval[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186m[[x,[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(1.0/3),[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(2.0/3)[39m[38;5;15m [39m[38;5;186m][39m[38;5;15m [39m[38;5;186mfor[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186min[39m[38;5;15m [39m[38;5;186m[8,[39m[38;5;15m [39m[38;5;186m16,[39m[38;5;15m [39m[38;5;186m24,[39m[38;5;15m [39m[38;5;186m32,[39m[38;5;15m [39m[38;5;186m48]][39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m0.5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1.0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m2.0[39m[38;5;15m][39m[38;5;15m][39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,240,230,220,210,200)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_trainval',)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_val',)[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(3000,4000,5000)[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáË°∞ÂáèÁÇπË∞ÉÊï¥Âà∞ÂéüÊù•ÁöÑ 2 ÂÄç[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m[38;5;15m  [39m[38;5;245m# ÁøªÂÄçÔºå‰øùËØÅÊÄªËÆ≠ÁªÉÈáè‰∏ÄËá¥[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m[38;5;15m  [39m[38;5;245m# ÂèØÈÄÇÂΩìÂ¢ûÂä†ÔºåÈÅøÂÖçËøáÂ§ßÁöÑÂàùÂßãÊ≥¢Âä®[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m[38;5;15m  [39m[38;5;245m# Âçï GPU ËÆ≠ÁªÉÔºåbatch size ÂáèÂçä[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáÂáèÂçäÔºåÈÄÇÈÖç batch size[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mbbox[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mAP[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m[38;5;186m"[39m[38;5;15m [39m[38;5;245m#######################[39m

[12/27 13:18:24] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCLUSTER_PARAMETER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mADJUST_PARAMETER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;204mTARGET_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mBORDER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mCANVAS_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mEXPAND[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNMM_THR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mSCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSTEP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_trainval[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m240[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m230[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m220[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m210[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.079368399158986[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12.699208415745595[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.15873679831797[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25.39841683149119[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.238105197476955[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m38.097625247236785[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m40.31747359663594[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m50.79683366298238[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m60.47621039495391[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m76.19525049447357[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_retinanet_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRetinaNet[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m47.49[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m41.63[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m51.28[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m
[38;5;204mSAVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./results[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mbbox[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mAP[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[12/27 13:18:24] detectron2 INFO: Full config saved to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/config.yaml
[12/27 13:18:24] d2.utils.env INFO: Using a generated random seed 25890168
[12/27 13:18:25] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[12/27 13:18:27] d2.data.build INFO: Removed 0 images with no usable annotations. 1813 images left.
[12/27 13:18:27] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 74656        |
|            |              |[0m
[12/27 13:18:27] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(250, 240, 230, 220, 210, 200), max_size=250, sample_style='choice'), RandomFlip()]
[12/27 13:18:27] d2.data.build INFO: Using training sampler TrainingSampler
[12/27 13:18:27] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:18:27] d2.data.common INFO: Serializing 1813 elements to byte tensors and concatenating them all ...
[12/27 13:18:27] d2.data.common INFO: Serialized dataset takes 4.70 MiB
[12/27 13:18:27] d2.data.build INFO: Making batched data loader with batch_size=16
[12/27 13:18:27] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:18:27] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:18:27] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[12/27 13:18:27] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up - Total num: 54
[12/27 13:18:27] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[12/27 13:18:27] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[12/27 13:18:27] d2.engine.train_loop INFO: Starting training from iteration 0
[12/27 13:18:34] d2.utils.events INFO:  eta: 0:16:11  iter: 19  total_loss: 2.796  loss_cls: 1.701  loss_box_reg: 1.093    time: 0.2988  last_time: 0.1496  data_time: 0.0592  last_data_time: 0.0426   lr: 0.00028772  max_mem: 1158M
[12/27 13:18:34] d2.engine.hooks INFO: Overall training speed: 18 iterations in 0:00:05 (0.3075 s / it)
[12/27 13:18:34] d2.engine.hooks INFO: Total training time: 0:00:05 (0:00:00 on hooks)
[12/27 13:18:34] d2.utils.events INFO:  eta: 0:16:11  iter: 20  total_loss: 2.796  loss_cls: 1.701  loss_box_reg: 1.093    time: 0.2988  last_time: 0.1496  data_time: 0.0592  last_data_time: 0.0426   lr: 0.00028772  max_mem: 1158M
[12/27 13:18:51] detectron2 INFO: Rank of current process: 0. World size: 1
[12/27 13:18:52] detectron2 INFO: Environment info:
-------------------------------  ------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/home/ps/ltc/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.7
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.1+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 2080 Ti (arch=7.5)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-11.7
Pillow                           10.4.0
torchvision                      0.15.2+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/27 13:18:52] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml', resume=True, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[], GPU='2')
[12/27 13:18:52] detectron2 INFO: Contents of args.config_file=/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RetinaNet.yaml[39m[38;5;186m"[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m47.49[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m41.63[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m51.28[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mp3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp5[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp6[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp7[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;81m!!python/object/apply:eval[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186m[[x,[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(1.0/3),[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(2.0/3)[39m[38;5;15m [39m[38;5;186m][39m[38;5;15m [39m[38;5;186mfor[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186min[39m[38;5;15m [39m[38;5;186m[8,[39m[38;5;15m [39m[38;5;186m16,[39m[38;5;15m [39m[38;5;186m24,[39m[38;5;15m [39m[38;5;186m32,[39m[38;5;15m [39m[38;5;186m48]][39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m0.5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1.0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m2.0[39m[38;5;15m][39m[38;5;15m][39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,240,230,220,210,200)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_trainval',)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_val',)[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(3000,4000,5000)[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáË°∞ÂáèÁÇπË∞ÉÊï¥Âà∞ÂéüÊù•ÁöÑ 2 ÂÄç[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m[38;5;15m  [39m[38;5;245m# ÁøªÂÄçÔºå‰øùËØÅÊÄªËÆ≠ÁªÉÈáè‰∏ÄËá¥[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m[38;5;15m  [39m[38;5;245m# ÂèØÈÄÇÂΩìÂ¢ûÂä†ÔºåÈÅøÂÖçËøáÂ§ßÁöÑÂàùÂßãÊ≥¢Âä®[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m[38;5;15m  [39m[38;5;245m# Âçï GPU ËÆ≠ÁªÉÔºåbatch size ÂáèÂçä[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0015[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáÂáèÂçäÔºåÈÄÇÈÖç batch size[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mbbox[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mAP[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m[38;5;186m"[39m[38;5;15m [39m[38;5;245m#######################[39m

[12/27 13:18:52] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCLUSTER_PARAMETER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mADJUST_PARAMETER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;204mTARGET_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mBORDER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mCANVAS_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mEXPAND[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNMM_THR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mSCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSTEP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_trainval[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m240[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m230[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m220[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m210[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.079368399158986[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12.699208415745595[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.15873679831797[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25.39841683149119[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.238105197476955[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m38.097625247236785[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m40.31747359663594[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m50.79683366298238[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m60.47621039495391[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m76.19525049447357[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_retinanet_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRetinaNet[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m47.49[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m41.63[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m51.28[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m
[38;5;204mSAVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./results[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0015[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mbbox[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mAP[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[12/27 13:18:52] detectron2 INFO: Full config saved to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/config.yaml
[12/27 13:18:52] d2.utils.env INFO: Using a generated random seed 53910216
[12/27 13:18:53] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[12/27 13:18:55] d2.data.build INFO: Removed 0 images with no usable annotations. 1813 images left.
[12/27 13:18:55] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 74656        |
|            |              |[0m
[12/27 13:18:55] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(250, 240, 230, 220, 210, 200), max_size=250, sample_style='choice'), RandomFlip()]
[12/27 13:18:55] d2.data.build INFO: Using training sampler TrainingSampler
[12/27 13:18:55] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:18:55] d2.data.common INFO: Serializing 1813 elements to byte tensors and concatenating them all ...
[12/27 13:18:55] d2.data.common INFO: Serialized dataset takes 4.70 MiB
[12/27 13:18:55] d2.data.build INFO: Making batched data loader with batch_size=16
[12/27 13:18:55] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:18:55] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:18:55] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[12/27 13:18:55] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up - Total num: 54
[12/27 13:18:55] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[12/27 13:18:55] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[12/27 13:18:55] d2.engine.train_loop INFO: Starting training from iteration 0
[12/27 13:19:02] d2.utils.events INFO:  eta: 0:16:45  iter: 19  total_loss: 2.615  loss_cls: 1.567  loss_box_reg: 1.039    time: 0.2993  last_time: 0.1609  data_time: 0.0588  last_data_time: 0.0478   lr: 0.00014386  max_mem: 1126M
[12/27 13:19:05] d2.utils.events INFO:  eta: 0:16:21  iter: 39  total_loss: 2.082  loss_cls: 1.256  loss_box_reg: 0.8259    time: 0.2285  last_time: 0.1560  data_time: 0.0490  last_data_time: 0.0430   lr: 0.00029371  max_mem: 1146M
[12/27 13:19:08] d2.utils.events INFO:  eta: 0:16:15  iter: 59  total_loss: 1.824  loss_cls: 1.108  loss_box_reg: 0.7154    time: 0.2062  last_time: 0.1608  data_time: 0.0490  last_data_time: 0.0505   lr: 0.00044356  max_mem: 1148M
[12/27 13:19:12] d2.utils.events INFO:  eta: 0:16:11  iter: 79  total_loss: 1.796  loss_cls: 1.097  loss_box_reg: 0.7042    time: 0.1955  last_time: 0.1653  data_time: 0.0480  last_data_time: 0.0489   lr: 0.00059341  max_mem: 1148M
[12/27 13:19:15] d2.utils.events INFO:  eta: 0:16:08  iter: 99  total_loss: 1.714  loss_cls: 1.054  loss_box_reg: 0.6594    time: 0.1889  last_time: 0.1632  data_time: 0.0483  last_data_time: 0.0482   lr: 0.00074326  max_mem: 1157M
[12/27 13:19:18] d2.utils.events INFO:  eta: 0:16:03  iter: 119  total_loss: 1.807  loss_cls: 1.138  loss_box_reg: 0.6749    time: 0.1851  last_time: 0.1628  data_time: 0.0484  last_data_time: 0.0480   lr: 0.00089311  max_mem: 1157M
[12/27 13:19:21] d2.utils.events INFO:  eta: 0:15:58  iter: 139  total_loss: 1.563  loss_cls: 0.8422  loss_box_reg: 0.6123    time: 0.1820  last_time: 0.1574  data_time: 0.0475  last_data_time: 0.0471   lr: 0.001043  max_mem: 1157M
[12/27 13:19:25] d2.utils.events INFO:  eta: 0:15:54  iter: 159  total_loss: 1.199  loss_cls: 0.5856  loss_box_reg: 0.6014    time: 0.1796  last_time: 0.1606  data_time: 0.0470  last_data_time: 0.0449   lr: 0.0011928  max_mem: 1159M
[12/27 13:19:28] d2.utils.events INFO:  eta: 0:15:50  iter: 179  total_loss: 1.162  loss_cls: 0.5378  loss_box_reg: 0.6222    time: 0.1779  last_time: 0.1627  data_time: 0.0478  last_data_time: 0.0469   lr: 0.0013427  max_mem: 1159M
[12/27 13:19:31] d2.utils.events INFO:  eta: 0:15:49  iter: 199  total_loss: 1.125  loss_cls: 0.5283  loss_box_reg: 0.5939    time: 0.1769  last_time: 0.1666  data_time: 0.0487  last_data_time: 0.0432   lr: 0.0014925  max_mem: 1159M
[12/27 13:19:35] d2.utils.events INFO:  eta: 0:15:47  iter: 219  total_loss: 1.058  loss_cls: 0.4842  loss_box_reg: 0.5768    time: 0.1762  last_time: 0.1842  data_time: 0.0505  last_data_time: 0.0503   lr: 0.0015  max_mem: 1159M
[12/27 13:19:36] d2.engine.hooks INFO: Overall training speed: 224 iterations in 0:00:39 (0.1760 s / it)
[12/27 13:19:36] d2.engine.hooks INFO: Total training time: 0:00:39 (0:00:00 on hooks)
[12/27 13:19:36] d2.utils.events INFO:  eta: 0:15:46  iter: 226  total_loss: 1.044  loss_cls: 0.4767  loss_box_reg: 0.5707    time: 0.1759  last_time: 0.1699  data_time: 0.0492  last_data_time: 0.0470   lr: 0.0015  max_mem: 1159M
[12/27 13:19:39] detectron2 INFO: Rank of current process: 0. World size: 1
[12/27 13:19:40] detectron2 INFO: Environment info:
-------------------------------  ------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/home/ps/ltc/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.7
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.1+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 2080 Ti (arch=7.5)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-11.7
Pillow                           10.4.0
torchvision                      0.15.2+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/27 13:19:40] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml', resume=True, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[], GPU='2')
[12/27 13:19:40] detectron2 INFO: Contents of args.config_file=/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/retinanet_R_50_FPN_train.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RetinaNet.yaml[39m[38;5;186m"[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m47.49[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m41.63[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m51.28[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mp3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp5[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp6[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp7[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;81m!!python/object/apply:eval[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186m[[x,[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(1.0/3),[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m2**(2.0/3)[39m[38;5;15m [39m[38;5;186m][39m[38;5;15m [39m[38;5;186mfor[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186min[39m[38;5;15m [39m[38;5;186m[8,[39m[38;5;15m [39m[38;5;186m16,[39m[38;5;15m [39m[38;5;186m24,[39m[38;5;15m [39m[38;5;186m32,[39m[38;5;15m [39m[38;5;186m48]][39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m0.5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1.0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m2.0[39m[38;5;15m][39m[38;5;15m][39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,240,230,220,210,200)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_trainval',)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_val',)[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(3000,4000,5000)[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáË°∞ÂáèÁÇπË∞ÉÊï¥Âà∞ÂéüÊù•ÁöÑ 2 ÂÄç[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m[38;5;15m  [39m[38;5;245m# ÁøªÂÄçÔºå‰øùËØÅÊÄªËÆ≠ÁªÉÈáè‰∏ÄËá¥[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m[38;5;15m  [39m[38;5;245m# ÂèØÈÄÇÂΩìÂ¢ûÂä†ÔºåÈÅøÂÖçËøáÂ§ßÁöÑÂàùÂßãÊ≥¢Âä®[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m[38;5;15m  [39m[38;5;245m# Âçï GPU ËÆ≠ÁªÉÔºåbatch size ÂáèÂçä[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0015[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáÂáèÂçäÔºåÈÄÇÈÖç batch size[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mbbox[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mAP[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m[38;5;186m"[39m[38;5;15m [39m[38;5;245m#######################[39m

[12/27 13:19:40] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCLUSTER_PARAMETER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mADJUST_PARAMETER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;204mTARGET_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mBORDER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mCANVAS_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mEXPAND[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNMM_THR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mSCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSTEP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_trainval[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m240[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m230[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m220[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m210[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.079368399158986[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12.699208415745595[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.15873679831797[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m25.39841683149119[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.238105197476955[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m38.097625247236785[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m40.31747359663594[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m50.79683366298238[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m60.47621039495391[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m76.19525049447357[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_retinanet_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRetinaNet[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m47.49[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m41.63[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m51.28[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/MSRA/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/[39m
[38;5;204mSAVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./results[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0015[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mbbox[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mAP[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[12/27 13:19:40] detectron2 INFO: Full config saved to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/config.yaml
[12/27 13:19:40] d2.utils.env INFO: Using a generated random seed 41617199
[12/27 13:19:41] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[12/27 13:19:42] d2.data.build INFO: Removed 0 images with no usable annotations. 1813 images left.
[12/27 13:19:42] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 74656        |
|            |              |[0m
[12/27 13:19:42] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(250, 240, 230, 220, 210, 200), max_size=250, sample_style='choice'), RandomFlip()]
[12/27 13:19:42] d2.data.build INFO: Using training sampler TrainingSampler
[12/27 13:19:42] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:19:42] d2.data.common INFO: Serializing 1813 elements to byte tensors and concatenating them all ...
[12/27 13:19:42] d2.data.common INFO: Serialized dataset takes 4.70 MiB
[12/27 13:19:42] d2.data.build INFO: Making batched data loader with batch_size=16
[12/27 13:19:42] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:19:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[12/27 13:19:42] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[12/27 13:19:42] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up - Total num: 54
[12/27 13:19:42] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[12/27 13:19:42] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[12/27 13:19:42] d2.engine.train_loop INFO: Starting training from iteration 0
[12/27 13:19:49] d2.utils.events INFO:  eta: 0:16:37  iter: 19  total_loss: 2.969  loss_cls: 1.793  loss_box_reg: 1.177    time: 0.2986  last_time: 0.1700  data_time: 0.0578  last_data_time: 0.0518   lr: 0.00014386  max_mem: 1144M
[12/27 13:19:53] d2.utils.events INFO:  eta: 0:16:28  iter: 39  total_loss: 1.876  loss_cls: 1.14  loss_box_reg: 0.7359    time: 0.2293  last_time: 0.1580  data_time: 0.0492  last_data_time: 0.0456   lr: 0.00029371  max_mem: 1154M
[12/27 13:19:56] d2.utils.events INFO:  eta: 0:16:17  iter: 59  total_loss: 1.874  loss_cls: 1.14  loss_box_reg: 0.7363    time: 0.2062  last_time: 0.1677  data_time: 0.0478  last_data_time: 0.0517   lr: 0.00044356  max_mem: 1154M
[12/27 13:19:59] d2.utils.events INFO:  eta: 0:16:09  iter: 79  total_loss: 1.742  loss_cls: 1.074  loss_box_reg: 0.668    time: 0.1953  last_time: 0.1561  data_time: 0.0479  last_data_time: 0.0415   lr: 0.00059341  max_mem: 1154M
[12/27 13:20:02] d2.utils.events INFO:  eta: 0:15:55  iter: 99  total_loss: 1.843  loss_cls: 1.15  loss_box_reg: 0.6838    time: 0.1872  last_time: 0.1578  data_time: 0.0430  last_data_time: 0.0504   lr: 0.00074326  max_mem: 1154M
[12/27 13:20:05] d2.utils.events INFO:  eta: 0:15:51  iter: 119  total_loss: 1.557  loss_cls: 0.9821  loss_box_reg: 0.5863    time: 0.1822  last_time: 0.1476  data_time: 0.0417  last_data_time: 0.0317   lr: 0.00089311  max_mem: 1154M
[12/27 13:20:09] d2.utils.events INFO:  eta: 0:15:47  iter: 139  total_loss: 1.463  loss_cls: 0.8343  loss_box_reg: 0.6322    time: 0.1792  last_time: 0.1527  data_time: 0.0483  last_data_time: 0.0390   lr: 0.001043  max_mem: 1154M
[12/27 13:20:12] d2.utils.events INFO:  eta: 0:15:45  iter: 159  total_loss: 1.468  loss_cls: 0.8002  loss_box_reg: 0.6555    time: 0.1772  last_time: 0.1685  data_time: 0.0466  last_data_time: 0.0387   lr: 0.0011928  max_mem: 1154M
[12/27 13:20:15] d2.utils.events INFO:  eta: 0:15:41  iter: 179  total_loss: 1.368  loss_cls: 0.7234  loss_box_reg: 0.6174    time: 0.1757  last_time: 0.1738  data_time: 0.0471  last_data_time: 0.0580   lr: 0.0013427  max_mem: 1155M
[12/27 13:20:18] d2.utils.events INFO:  eta: 0:15:35  iter: 199  total_loss: 1.134  loss_cls: 0.549  loss_box_reg: 0.598    time: 0.1740  last_time: 0.1701  data_time: 0.0450  last_data_time: 0.0563   lr: 0.0014925  max_mem: 1155M
[12/27 13:20:22] d2.utils.events INFO:  eta: 0:15:31  iter: 219  total_loss: 1.148  loss_cls: 0.5197  loss_box_reg: 0.6226    time: 0.1729  last_time: 0.1685  data_time: 0.0458  last_data_time: 0.0514   lr: 0.0015  max_mem: 1155M
[12/27 13:20:25] d2.utils.events INFO:  eta: 0:15:28  iter: 239  total_loss: 1.05  loss_cls: 0.4613  loss_box_reg: 0.5816    time: 0.1718  last_time: 0.1504  data_time: 0.0440  last_data_time: 0.0417   lr: 0.0015  max_mem: 1155M
[12/27 13:20:28] d2.utils.events INFO:  eta: 0:15:23  iter: 259  total_loss: 1.122  loss_cls: 0.5067  loss_box_reg: 0.619    time: 0.1709  last_time: 0.1666  data_time: 0.0465  last_data_time: 0.0547   lr: 0.0015  max_mem: 1157M
[12/27 13:20:31] d2.utils.events INFO:  eta: 0:15:19  iter: 279  total_loss: 1.044  loss_cls: 0.4561  loss_box_reg: 0.5844    time: 0.1703  last_time: 0.1560  data_time: 0.0471  last_data_time: 0.0467   lr: 0.0015  max_mem: 1157M
[12/27 13:20:35] d2.utils.events INFO:  eta: 0:15:16  iter: 299  total_loss: 1.04  loss_cls: 0.4566  loss_box_reg: 0.5838    time: 0.1696  last_time: 0.1644  data_time: 0.0448  last_data_time: 0.0483   lr: 0.0015  max_mem: 1157M
[12/27 13:20:38] d2.utils.events INFO:  eta: 0:15:14  iter: 319  total_loss: 1.102  loss_cls: 0.484  loss_box_reg: 0.6137    time: 0.1692  last_time: 0.1623  data_time: 0.0478  last_data_time: 0.0464   lr: 0.0015  max_mem: 1157M
[12/27 13:20:41] d2.utils.events INFO:  eta: 0:15:10  iter: 339  total_loss: 1.026  loss_cls: 0.4482  loss_box_reg: 0.5761    time: 0.1685  last_time: 0.1605  data_time: 0.0438  last_data_time: 0.0430   lr: 0.0015  max_mem: 1157M
[12/27 13:20:44] d2.utils.events INFO:  eta: 0:15:07  iter: 359  total_loss: 1.052  loss_cls: 0.4595  loss_box_reg: 0.6018    time: 0.1682  last_time: 0.1561  data_time: 0.0469  last_data_time: 0.0443   lr: 0.0015  max_mem: 1157M
[12/27 13:20:47] d2.utils.events INFO:  eta: 0:15:04  iter: 379  total_loss: 1.033  loss_cls: 0.448  loss_box_reg: 0.5793    time: 0.1678  last_time: 0.1509  data_time: 0.0455  last_data_time: 0.0374   lr: 0.0015  max_mem: 1157M
[12/27 13:20:51] d2.utils.events INFO:  eta: 0:15:00  iter: 399  total_loss: 1.054  loss_cls: 0.4562  loss_box_reg: 0.5986    time: 0.1675  last_time: 0.1482  data_time: 0.0458  last_data_time: 0.0351   lr: 0.0015  max_mem: 1157M
[12/27 13:20:54] d2.utils.events INFO:  eta: 0:14:59  iter: 419  total_loss: 1.036  loss_cls: 0.4522  loss_box_reg: 0.5881    time: 0.1672  last_time: 0.1600  data_time: 0.0471  last_data_time: 0.0444   lr: 0.0015  max_mem: 1157M
[12/27 13:20:57] d2.utils.events INFO:  eta: 0:14:54  iter: 439  total_loss: 0.995  loss_cls: 0.4356  loss_box_reg: 0.5556    time: 0.1669  last_time: 0.1795  data_time: 0.0446  last_data_time: 0.0483   lr: 0.0015  max_mem: 1157M
[12/27 13:21:00] d2.utils.events INFO:  eta: 0:14:51  iter: 459  total_loss: 1.093  loss_cls: 0.4688  loss_box_reg: 0.615    time: 0.1667  last_time: 0.1657  data_time: 0.0456  last_data_time: 0.0486   lr: 0.0015  max_mem: 1157M
[12/27 13:21:04] d2.utils.events INFO:  eta: 0:14:47  iter: 479  total_loss: 0.9794  loss_cls: 0.4202  loss_box_reg: 0.5556    time: 0.1664  last_time: 0.1634  data_time: 0.0436  last_data_time: 0.0495   lr: 0.0015  max_mem: 1157M
[12/27 13:21:07] d2.utils.events INFO:  eta: 0:14:44  iter: 499  total_loss: 1.018  loss_cls: 0.44  loss_box_reg: 0.5805    time: 0.1662  last_time: 0.1532  data_time: 0.0460  last_data_time: 0.0329   lr: 0.0015  max_mem: 1157M
[12/27 13:21:10] d2.utils.events INFO:  eta: 0:14:42  iter: 519  total_loss: 1.014  loss_cls: 0.4357  loss_box_reg: 0.5808    time: 0.1660  last_time: 0.1498  data_time: 0.0452  last_data_time: 0.0412   lr: 0.0015  max_mem: 1157M
[12/27 13:21:13] d2.utils.events INFO:  eta: 0:14:38  iter: 539  total_loss: 0.9765  loss_cls: 0.4229  loss_box_reg: 0.5523    time: 0.1658  last_time: 0.1771  data_time: 0.0464  last_data_time: 0.0503   lr: 0.0015  max_mem: 1157M
[12/27 13:21:17] d2.utils.events INFO:  eta: 0:14:35  iter: 559  total_loss: 1.019  loss_cls: 0.4393  loss_box_reg: 0.5753    time: 0.1656  last_time: 0.1634  data_time: 0.0469  last_data_time: 0.0486   lr: 0.0015  max_mem: 1157M
[12/27 13:21:20] d2.utils.events INFO:  eta: 0:14:31  iter: 579  total_loss: 0.9732  loss_cls: 0.424  loss_box_reg: 0.5501    time: 0.1655  last_time: 0.1498  data_time: 0.0457  last_data_time: 0.0388   lr: 0.0015  max_mem: 1157M
[12/27 13:21:23] d2.utils.events INFO:  eta: 0:14:28  iter: 599  total_loss: 0.972  loss_cls: 0.4173  loss_box_reg: 0.5585    time: 0.1654  last_time: 0.1642  data_time: 0.0468  last_data_time: 0.0494   lr: 0.0015  max_mem: 1157M
[12/27 13:21:26] d2.utils.events INFO:  eta: 0:14:24  iter: 619  total_loss: 0.9806  loss_cls: 0.4198  loss_box_reg: 0.5618    time: 0.1653  last_time: 0.1586  data_time: 0.0460  last_data_time: 0.0447   lr: 0.0015  max_mem: 1157M
[12/27 13:21:30] d2.utils.events INFO:  eta: 0:14:22  iter: 639  total_loss: 1.043  loss_cls: 0.4356  loss_box_reg: 0.5933    time: 0.1652  last_time: 0.1641  data_time: 0.0454  last_data_time: 0.0505   lr: 0.0015  max_mem: 1157M
[12/27 13:21:33] d2.utils.events INFO:  eta: 0:14:18  iter: 659  total_loss: 1.062  loss_cls: 0.4508  loss_box_reg: 0.611    time: 0.1650  last_time: 0.1666  data_time: 0.0450  last_data_time: 0.0516   lr: 0.0015  max_mem: 1157M
[12/27 13:21:36] d2.utils.events INFO:  eta: 0:14:15  iter: 679  total_loss: 0.9961  loss_cls: 0.4259  loss_box_reg: 0.5646    time: 0.1648  last_time: 0.1575  data_time: 0.0455  last_data_time: 0.0472   lr: 0.0015  max_mem: 1157M
[12/27 13:21:39] d2.utils.events INFO:  eta: 0:14:11  iter: 699  total_loss: 0.968  loss_cls: 0.4096  loss_box_reg: 0.5536    time: 0.1647  last_time: 0.1634  data_time: 0.0453  last_data_time: 0.0484   lr: 0.0015  max_mem: 1161M
[12/27 13:21:42] d2.utils.events INFO:  eta: 0:14:08  iter: 719  total_loss: 0.9942  loss_cls: 0.4222  loss_box_reg: 0.5721    time: 0.1646  last_time: 0.1611  data_time: 0.0442  last_data_time: 0.0472   lr: 0.0015  max_mem: 1161M
[12/27 13:21:46] d2.utils.events INFO:  eta: 0:14:05  iter: 739  total_loss: 0.9389  loss_cls: 0.3978  loss_box_reg: 0.5426    time: 0.1644  last_time: 0.1610  data_time: 0.0425  last_data_time: 0.0484   lr: 0.0015  max_mem: 1161M
[12/27 13:21:49] d2.utils.events INFO:  eta: 0:14:02  iter: 759  total_loss: 0.9437  loss_cls: 0.4106  loss_box_reg: 0.5408    time: 0.1643  last_time: 0.1725  data_time: 0.0455  last_data_time: 0.0479   lr: 0.0015  max_mem: 1161M
[12/27 13:21:52] d2.utils.events INFO:  eta: 0:13:59  iter: 779  total_loss: 1.01  loss_cls: 0.4328  loss_box_reg: 0.576    time: 0.1642  last_time: 0.1618  data_time: 0.0457  last_data_time: 0.0466   lr: 0.0015  max_mem: 1161M
[12/27 13:21:55] d2.utils.events INFO:  eta: 0:13:55  iter: 799  total_loss: 0.9516  loss_cls: 0.408  loss_box_reg: 0.5382    time: 0.1641  last_time: 0.1609  data_time: 0.0434  last_data_time: 0.0500   lr: 0.0015  max_mem: 1161M
[12/27 13:21:58] d2.utils.events INFO:  eta: 0:13:52  iter: 819  total_loss: 1.026  loss_cls: 0.4438  loss_box_reg: 0.5885    time: 0.1640  last_time: 0.1572  data_time: 0.0462  last_data_time: 0.0443   lr: 0.0015  max_mem: 1161M
[12/27 13:22:02] d2.utils.events INFO:  eta: 0:13:49  iter: 839  total_loss: 0.9857  loss_cls: 0.4215  loss_box_reg: 0.5641    time: 0.1640  last_time: 0.1579  data_time: 0.0455  last_data_time: 0.0441   lr: 0.0015  max_mem: 1161M
[12/27 13:22:05] d2.utils.events INFO:  eta: 0:13:46  iter: 859  total_loss: 1.002  loss_cls: 0.4205  loss_box_reg: 0.575    time: 0.1639  last_time: 0.1746  data_time: 0.0452  last_data_time: 0.0581   lr: 0.0015  max_mem: 1161M
[12/27 13:22:08] d2.utils.events INFO:  eta: 0:13:42  iter: 879  total_loss: 0.952  loss_cls: 0.4055  loss_box_reg: 0.5465    time: 0.1638  last_time: 0.1631  data_time: 0.0449  last_data_time: 0.0487   lr: 0.0015  max_mem: 1161M
[12/27 13:22:11] d2.utils.events INFO:  eta: 0:13:39  iter: 899  total_loss: 0.9215  loss_cls: 0.3976  loss_box_reg: 0.5279    time: 0.1637  last_time: 0.1516  data_time: 0.0438  last_data_time: 0.0396   lr: 0.0015  max_mem: 1161M
[12/27 13:22:15] d2.utils.events INFO:  eta: 0:13:36  iter: 919  total_loss: 0.9959  loss_cls: 0.4223  loss_box_reg: 0.5736    time: 0.1637  last_time: 0.1812  data_time: 0.0478  last_data_time: 0.0598   lr: 0.0015  max_mem: 1161M
[12/27 13:22:18] d2.utils.events INFO:  eta: 0:13:33  iter: 939  total_loss: 0.9543  loss_cls: 0.4093  loss_box_reg: 0.5483    time: 0.1636  last_time: 0.1641  data_time: 0.0464  last_data_time: 0.0490   lr: 0.0015  max_mem: 1161M
[12/27 13:22:21] d2.utils.events INFO:  eta: 0:13:29  iter: 959  total_loss: 0.9935  loss_cls: 0.4168  loss_box_reg: 0.5742    time: 0.1636  last_time: 0.1629  data_time: 0.0443  last_data_time: 0.0395   lr: 0.0015  max_mem: 1161M
[12/27 13:22:24] d2.utils.events INFO:  eta: 0:13:26  iter: 979  total_loss: 0.9361  loss_cls: 0.3942  loss_box_reg: 0.5406    time: 0.1635  last_time: 0.1673  data_time: 0.0478  last_data_time: 0.0526   lr: 0.0015  max_mem: 1161M
[12/27 13:22:28] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/model_0000999.pth
[12/27 13:22:28] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 15059        |
|            |              |[0m
[12/27 13:22:28] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/27 13:22:28] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:22:28] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/27 13:22:28] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/27 13:22:28] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/27 13:22:29] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0009 s/iter. Inference: 0.0337 s/iter. Eval: 0.0457 s/iter. Total: 0.0802 s/iter. ETA=0:00:28
[12/27 13:22:34] d2.evaluation.evaluator INFO: Inference done 74/363. Dataloading: 0.0012 s/iter. Inference: 0.0338 s/iter. Eval: 0.0446 s/iter. Total: 0.0797 s/iter. ETA=0:00:23
[12/27 13:22:39] d2.evaluation.evaluator INFO: Inference done 138/363. Dataloading: 0.0012 s/iter. Inference: 0.0337 s/iter. Eval: 0.0446 s/iter. Total: 0.0795 s/iter. ETA=0:00:17
[12/27 13:22:44] d2.evaluation.evaluator INFO: Inference done 202/363. Dataloading: 0.0012 s/iter. Inference: 0.0336 s/iter. Eval: 0.0444 s/iter. Total: 0.0792 s/iter. ETA=0:00:12
[12/27 13:22:49] d2.evaluation.evaluator INFO: Inference done 266/363. Dataloading: 0.0012 s/iter. Inference: 0.0336 s/iter. Eval: 0.0443 s/iter. Total: 0.0791 s/iter. ETA=0:00:07
[12/27 13:22:55] d2.evaluation.evaluator INFO: Inference done 330/363. Dataloading: 0.0012 s/iter. Inference: 0.0335 s/iter. Eval: 0.0443 s/iter. Total: 0.0790 s/iter. ETA=0:00:02
[12/27 13:22:57] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.386917 (0.079293 s / iter per device, on 1 devices)
[12/27 13:22:57] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:12 (0.033540 s / iter per device, on 1 devices)
[12/27 13:22:57] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/27 13:22:58] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/27 13:22:58] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/27 13:22:58] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/27 13:22:58] d2.evaluation.testing INFO: copypaste: 0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0266,1.7621
[12/27 13:22:58] d2.utils.events INFO:  eta: 0:13:22  iter: 999  total_loss: 0.9589  loss_cls: 0.4103  loss_box_reg: 0.5486    time: 0.1635  last_time: 0.1581  data_time: 0.0445  last_data_time: 0.0496   lr: 0.0015  max_mem: 1161M
[12/27 13:23:01] d2.utils.events INFO:  eta: 0:13:18  iter: 1019  total_loss: 0.9644  loss_cls: 0.4095  loss_box_reg: 0.5623    time: 0.1634  last_time: 0.1706  data_time: 0.0446  last_data_time: 0.0489   lr: 0.0015  max_mem: 1161M
[12/27 13:23:04] d2.utils.events INFO:  eta: 0:13:14  iter: 1039  total_loss: 0.9819  loss_cls: 0.4098  loss_box_reg: 0.5712    time: 0.1633  last_time: 0.1575  data_time: 0.0443  last_data_time: 0.0436   lr: 0.0015  max_mem: 1161M
[12/27 13:23:07] d2.utils.events INFO:  eta: 0:13:11  iter: 1059  total_loss: 0.927  loss_cls: 0.3905  loss_box_reg: 0.5399    time: 0.1632  last_time: 0.1745  data_time: 0.0465  last_data_time: 0.0509   lr: 0.0015  max_mem: 1161M
[12/27 13:23:11] d2.utils.events INFO:  eta: 0:13:07  iter: 1079  total_loss: 0.9717  loss_cls: 0.4108  loss_box_reg: 0.5587    time: 0.1631  last_time: 0.1559  data_time: 0.0444  last_data_time: 0.0434   lr: 0.0015  max_mem: 1161M
[12/27 13:23:14] d2.utils.events INFO:  eta: 0:13:04  iter: 1099  total_loss: 0.9734  loss_cls: 0.4117  loss_box_reg: 0.5617    time: 0.1631  last_time: 0.1590  data_time: 0.0443  last_data_time: 0.0486   lr: 0.0015  max_mem: 1161M
[12/27 13:23:17] d2.utils.events INFO:  eta: 0:13:02  iter: 1119  total_loss: 0.9659  loss_cls: 0.4045  loss_box_reg: 0.5617    time: 0.1631  last_time: 0.1570  data_time: 0.0479  last_data_time: 0.0420   lr: 0.0015  max_mem: 1161M
[12/27 13:23:20] d2.utils.events INFO:  eta: 0:12:58  iter: 1139  total_loss: 0.9124  loss_cls: 0.382  loss_box_reg: 0.5284    time: 0.1630  last_time: 0.1715  data_time: 0.0448  last_data_time: 0.0532   lr: 0.0015  max_mem: 1161M
[12/27 13:23:23] d2.utils.events INFO:  eta: 0:12:55  iter: 1159  total_loss: 1.02  loss_cls: 0.4246  loss_box_reg: 0.5936    time: 0.1629  last_time: 0.1501  data_time: 0.0438  last_data_time: 0.0391   lr: 0.0015  max_mem: 1161M
[12/27 13:23:27] d2.utils.events INFO:  eta: 0:12:51  iter: 1179  total_loss: 0.9669  loss_cls: 0.4062  loss_box_reg: 0.5607    time: 0.1629  last_time: 0.1719  data_time: 0.0439  last_data_time: 0.0520   lr: 0.0015  max_mem: 1161M
[12/27 13:23:30] d2.utils.events INFO:  eta: 0:12:49  iter: 1199  total_loss: 0.9361  loss_cls: 0.3928  loss_box_reg: 0.5389    time: 0.1628  last_time: 0.1614  data_time: 0.0455  last_data_time: 0.0475   lr: 0.0015  max_mem: 1161M
[12/27 13:23:33] d2.utils.events INFO:  eta: 0:12:45  iter: 1219  total_loss: 0.9721  loss_cls: 0.4246  loss_box_reg: 0.557    time: 0.1628  last_time: 0.1688  data_time: 0.0468  last_data_time: 0.0545   lr: 0.0015  max_mem: 1161M
[12/27 13:23:36] d2.utils.events INFO:  eta: 0:12:41  iter: 1239  total_loss: 0.9265  loss_cls: 0.4042  loss_box_reg: 0.5311    time: 0.1627  last_time: 0.1728  data_time: 0.0439  last_data_time: 0.0625   lr: 0.0015  max_mem: 1161M
[12/27 13:23:39] d2.utils.events INFO:  eta: 0:12:39  iter: 1259  total_loss: 0.9902  loss_cls: 0.4135  loss_box_reg: 0.5732    time: 0.1627  last_time: 0.1725  data_time: 0.0458  last_data_time: 0.0579   lr: 0.0015  max_mem: 1161M
[12/27 13:23:43] d2.utils.events INFO:  eta: 0:12:35  iter: 1279  total_loss: 0.9528  loss_cls: 0.3993  loss_box_reg: 0.5535    time: 0.1627  last_time: 0.1495  data_time: 0.0469  last_data_time: 0.0379   lr: 0.0015  max_mem: 1161M
[12/27 13:23:46] d2.utils.events INFO:  eta: 0:12:32  iter: 1299  total_loss: 0.9497  loss_cls: 0.3924  loss_box_reg: 0.5544    time: 0.1627  last_time: 0.1579  data_time: 0.0453  last_data_time: 0.0446   lr: 0.0015  max_mem: 1161M
[12/27 13:23:49] d2.utils.events INFO:  eta: 0:12:28  iter: 1319  total_loss: 0.9666  loss_cls: 0.4023  loss_box_reg: 0.5667    time: 0.1627  last_time: 0.1599  data_time: 0.0447  last_data_time: 0.0485   lr: 0.0015  max_mem: 1161M
[12/27 13:23:52] d2.utils.events INFO:  eta: 0:12:26  iter: 1339  total_loss: 0.9617  loss_cls: 0.3983  loss_box_reg: 0.5636    time: 0.1627  last_time: 0.1724  data_time: 0.0465  last_data_time: 0.0528   lr: 0.0015  max_mem: 1161M
[12/27 13:23:56] d2.utils.events INFO:  eta: 0:12:22  iter: 1359  total_loss: 0.9203  loss_cls: 0.3767  loss_box_reg: 0.5386    time: 0.1626  last_time: 0.1616  data_time: 0.0439  last_data_time: 0.0505   lr: 0.0015  max_mem: 1161M
[12/27 13:23:59] d2.utils.events INFO:  eta: 0:12:19  iter: 1379  total_loss: 0.8828  loss_cls: 0.3671  loss_box_reg: 0.5157    time: 0.1626  last_time: 0.1605  data_time: 0.0469  last_data_time: 0.0486   lr: 0.0015  max_mem: 1161M
[12/27 13:24:02] d2.utils.events INFO:  eta: 0:12:16  iter: 1399  total_loss: 0.9489  loss_cls: 0.3895  loss_box_reg: 0.5523    time: 0.1626  last_time: 0.1535  data_time: 0.0454  last_data_time: 0.0392   lr: 0.0015  max_mem: 1161M
[12/27 13:24:05] d2.utils.events INFO:  eta: 0:12:12  iter: 1419  total_loss: 0.9066  loss_cls: 0.3739  loss_box_reg: 0.5318    time: 0.1626  last_time: 0.1649  data_time: 0.0447  last_data_time: 0.0394   lr: 0.0015  max_mem: 1161M
[12/27 13:24:09] d2.utils.events INFO:  eta: 0:12:10  iter: 1439  total_loss: 0.8943  loss_cls: 0.3658  loss_box_reg: 0.5285    time: 0.1626  last_time: 0.1565  data_time: 0.0488  last_data_time: 0.0419   lr: 0.0015  max_mem: 1161M
[12/27 13:24:12] d2.utils.events INFO:  eta: 0:12:07  iter: 1459  total_loss: 0.9284  loss_cls: 0.3834  loss_box_reg: 0.5431    time: 0.1626  last_time: 0.1627  data_time: 0.0460  last_data_time: 0.0428   lr: 0.0015  max_mem: 1161M
[12/27 13:24:15] d2.utils.events INFO:  eta: 0:12:04  iter: 1479  total_loss: 0.9299  loss_cls: 0.3795  loss_box_reg: 0.5494    time: 0.1626  last_time: 0.1631  data_time: 0.0459  last_data_time: 0.0489   lr: 0.0015  max_mem: 1161M
[12/27 13:24:18] d2.utils.events INFO:  eta: 0:12:00  iter: 1499  total_loss: 0.8651  loss_cls: 0.3591  loss_box_reg: 0.5058    time: 0.1625  last_time: 0.1540  data_time: 0.0445  last_data_time: 0.0402   lr: 0.0015  max_mem: 1161M
[12/27 13:24:22] d2.utils.events INFO:  eta: 0:11:57  iter: 1519  total_loss: 0.9395  loss_cls: 0.3821  loss_box_reg: 0.5518    time: 0.1625  last_time: 0.1717  data_time: 0.0450  last_data_time: 0.0499   lr: 0.0015  max_mem: 1161M
[12/27 13:24:25] d2.utils.events INFO:  eta: 0:11:54  iter: 1539  total_loss: 0.9299  loss_cls: 0.3779  loss_box_reg: 0.5521    time: 0.1625  last_time: 0.1520  data_time: 0.0449  last_data_time: 0.0370   lr: 0.0015  max_mem: 1161M
[12/27 13:24:28] d2.utils.events INFO:  eta: 0:11:50  iter: 1559  total_loss: 0.9008  loss_cls: 0.3707  loss_box_reg: 0.53    time: 0.1624  last_time: 0.1543  data_time: 0.0447  last_data_time: 0.0445   lr: 0.0015  max_mem: 1161M
[12/27 13:24:31] d2.utils.events INFO:  eta: 0:11:47  iter: 1579  total_loss: 0.8949  loss_cls: 0.3627  loss_box_reg: 0.5389    time: 0.1624  last_time: 0.1656  data_time: 0.0470  last_data_time: 0.0554   lr: 0.0015  max_mem: 1161M
[12/27 13:24:34] d2.utils.events INFO:  eta: 0:11:44  iter: 1599  total_loss: 0.9395  loss_cls: 0.3738  loss_box_reg: 0.5594    time: 0.1624  last_time: 0.1562  data_time: 0.0448  last_data_time: 0.0418   lr: 0.0015  max_mem: 1161M
[12/27 13:24:38] d2.utils.events INFO:  eta: 0:11:41  iter: 1619  total_loss: 0.8945  loss_cls: 0.3677  loss_box_reg: 0.5251    time: 0.1624  last_time: 0.1543  data_time: 0.0492  last_data_time: 0.0387   lr: 0.0015  max_mem: 1161M
[12/27 13:24:41] d2.utils.events INFO:  eta: 0:11:37  iter: 1639  total_loss: 0.9094  loss_cls: 0.3658  loss_box_reg: 0.5412    time: 0.1624  last_time: 0.1646  data_time: 0.0453  last_data_time: 0.0481   lr: 0.0015  max_mem: 1161M
[12/27 13:24:44] d2.utils.events INFO:  eta: 0:11:34  iter: 1659  total_loss: 0.9305  loss_cls: 0.3721  loss_box_reg: 0.562    time: 0.1624  last_time: 0.1660  data_time: 0.0466  last_data_time: 0.0508   lr: 0.0015  max_mem: 1161M
[12/27 13:24:47] d2.utils.events INFO:  eta: 0:11:31  iter: 1679  total_loss: 0.8923  loss_cls: 0.3544  loss_box_reg: 0.5367    time: 0.1624  last_time: 0.1608  data_time: 0.0450  last_data_time: 0.0442   lr: 0.0015  max_mem: 1161M
[12/27 13:24:51] d2.utils.events INFO:  eta: 0:11:28  iter: 1699  total_loss: 0.9038  loss_cls: 0.3587  loss_box_reg: 0.5465    time: 0.1624  last_time: 0.1593  data_time: 0.0472  last_data_time: 0.0459   lr: 0.0015  max_mem: 1161M
[12/27 13:24:54] d2.utils.events INFO:  eta: 0:11:25  iter: 1719  total_loss: 0.9213  loss_cls: 0.3669  loss_box_reg: 0.5544    time: 0.1624  last_time: 0.1625  data_time: 0.0468  last_data_time: 0.0504   lr: 0.0015  max_mem: 1161M
[12/27 13:24:57] d2.utils.events INFO:  eta: 0:11:22  iter: 1739  total_loss: 0.8378  loss_cls: 0.3396  loss_box_reg: 0.5015    time: 0.1624  last_time: 0.1559  data_time: 0.0453  last_data_time: 0.0421   lr: 0.0015  max_mem: 1161M
[12/27 13:25:01] d2.utils.events INFO:  eta: 0:11:20  iter: 1759  total_loss: 0.8636  loss_cls: 0.3423  loss_box_reg: 0.5206    time: 0.1624  last_time: 0.1549  data_time: 0.0459  last_data_time: 0.0406   lr: 0.0015  max_mem: 1161M
[12/27 13:25:04] d2.utils.events INFO:  eta: 0:11:16  iter: 1779  total_loss: 0.902  loss_cls: 0.359  loss_box_reg: 0.5387    time: 0.1624  last_time: 0.1605  data_time: 0.0463  last_data_time: 0.0501   lr: 0.0015  max_mem: 1161M
[12/27 13:25:07] d2.utils.events INFO:  eta: 0:11:13  iter: 1799  total_loss: 0.8941  loss_cls: 0.3513  loss_box_reg: 0.5427    time: 0.1624  last_time: 0.1721  data_time: 0.0475  last_data_time: 0.0547   lr: 0.0015  max_mem: 1161M
[12/27 13:25:10] d2.utils.events INFO:  eta: 0:11:10  iter: 1819  total_loss: 0.8822  loss_cls: 0.35  loss_box_reg: 0.533    time: 0.1624  last_time: 0.1534  data_time: 0.0462  last_data_time: 0.0420   lr: 0.0015  max_mem: 1161M
[12/27 13:25:14] d2.utils.events INFO:  eta: 0:11:07  iter: 1839  total_loss: 0.8572  loss_cls: 0.3397  loss_box_reg: 0.5176    time: 0.1624  last_time: 0.1588  data_time: 0.0466  last_data_time: 0.0461   lr: 0.0015  max_mem: 1161M
[12/27 13:25:17] d2.utils.events INFO:  eta: 0:11:04  iter: 1859  total_loss: 0.88  loss_cls: 0.3414  loss_box_reg: 0.5386    time: 0.1624  last_time: 0.1720  data_time: 0.0484  last_data_time: 0.0558   lr: 0.0015  max_mem: 1161M
[12/27 13:25:20] d2.utils.events INFO:  eta: 0:11:02  iter: 1879  total_loss: 0.8861  loss_cls: 0.3487  loss_box_reg: 0.5393    time: 0.1624  last_time: 0.1657  data_time: 0.0459  last_data_time: 0.0482   lr: 0.0015  max_mem: 1161M
[12/27 13:25:23] d2.utils.events INFO:  eta: 0:10:58  iter: 1899  total_loss: 0.8696  loss_cls: 0.3422  loss_box_reg: 0.5267    time: 0.1624  last_time: 0.1769  data_time: 0.0445  last_data_time: 0.0599   lr: 0.0015  max_mem: 1161M
[12/27 13:25:27] d2.utils.events INFO:  eta: 0:10:55  iter: 1919  total_loss: 0.8507  loss_cls: 0.327  loss_box_reg: 0.5225    time: 0.1624  last_time: 0.1703  data_time: 0.0465  last_data_time: 0.0511   lr: 0.0015  max_mem: 1161M
[12/27 13:25:30] d2.utils.events INFO:  eta: 0:10:51  iter: 1939  total_loss: 0.8884  loss_cls: 0.3417  loss_box_reg: 0.5434    time: 0.1624  last_time: 0.1591  data_time: 0.0475  last_data_time: 0.0464   lr: 0.0015  max_mem: 1161M
[12/27 13:25:33] d2.utils.events INFO:  eta: 0:10:48  iter: 1959  total_loss: 0.8915  loss_cls: 0.3409  loss_box_reg: 0.5484    time: 0.1624  last_time: 0.1489  data_time: 0.0459  last_data_time: 0.0383   lr: 0.0015  max_mem: 1161M
[12/27 13:25:36] d2.utils.events INFO:  eta: 0:10:45  iter: 1979  total_loss: 0.8985  loss_cls: 0.3475  loss_box_reg: 0.551    time: 0.1624  last_time: 0.1497  data_time: 0.0485  last_data_time: 0.0369   lr: 0.0015  max_mem: 1161M
[12/27 13:25:40] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/model_0001999.pth
[12/27 13:25:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/27 13:25:40] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:25:40] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/27 13:25:40] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/27 13:25:40] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/27 13:25:41] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0009 s/iter. Inference: 0.0334 s/iter. Eval: 0.0449 s/iter. Total: 0.0791 s/iter. ETA=0:00:27
[12/27 13:25:46] d2.evaluation.evaluator INFO: Inference done 73/363. Dataloading: 0.0012 s/iter. Inference: 0.0336 s/iter. Eval: 0.0463 s/iter. Total: 0.0811 s/iter. ETA=0:00:23
[12/27 13:25:51] d2.evaluation.evaluator INFO: Inference done 135/363. Dataloading: 0.0012 s/iter. Inference: 0.0335 s/iter. Eval: 0.0462 s/iter. Total: 0.0809 s/iter. ETA=0:00:18
[12/27 13:25:56] d2.evaluation.evaluator INFO: Inference done 197/363. Dataloading: 0.0012 s/iter. Inference: 0.0336 s/iter. Eval: 0.0460 s/iter. Total: 0.0809 s/iter. ETA=0:00:13
[12/27 13:26:01] d2.evaluation.evaluator INFO: Inference done 260/363. Dataloading: 0.0012 s/iter. Inference: 0.0336 s/iter. Eval: 0.0459 s/iter. Total: 0.0808 s/iter. ETA=0:00:08
[12/27 13:26:06] d2.evaluation.evaluator INFO: Inference done 323/363. Dataloading: 0.0012 s/iter. Inference: 0.0336 s/iter. Eval: 0.0458 s/iter. Total: 0.0807 s/iter. ETA=0:00:03
[12/27 13:26:10] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.976915 (0.080941 s / iter per device, on 1 devices)
[12/27 13:26:10] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:12 (0.033572 s / iter per device, on 1 devices)
[12/27 13:26:10] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/27 13:26:10] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/27 13:26:10] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/27 13:26:10] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/27 13:26:10] d2.evaluation.testing INFO: copypaste: 0.0866,0.2165,0.0000,0.0000,0.0000,0.0398,1.0753,0.1992,5.3763
[12/27 13:26:10] d2.utils.events INFO:  eta: 0:10:42  iter: 1999  total_loss: 0.8649  loss_cls: 0.3337  loss_box_reg: 0.5311    time: 0.1624  last_time: 0.1560  data_time: 0.0465  last_data_time: 0.0415   lr: 0.0015  max_mem: 1161M
[12/27 13:26:13] d2.utils.events INFO:  eta: 0:10:39  iter: 2019  total_loss: 0.8232  loss_cls: 0.3139  loss_box_reg: 0.5093    time: 0.1624  last_time: 0.1598  data_time: 0.0445  last_data_time: 0.0439   lr: 0.0015  max_mem: 1161M
[12/27 13:26:17] d2.utils.events INFO:  eta: 0:10:36  iter: 2039  total_loss: 0.8063  loss_cls: 0.3113  loss_box_reg: 0.495    time: 0.1623  last_time: 0.1553  data_time: 0.0455  last_data_time: 0.0397   lr: 0.0015  max_mem: 1161M
[12/27 13:26:20] d2.utils.events INFO:  eta: 0:10:33  iter: 2059  total_loss: 0.8554  loss_cls: 0.3269  loss_box_reg: 0.5346    time: 0.1623  last_time: 0.1579  data_time: 0.0458  last_data_time: 0.0498   lr: 0.0015  max_mem: 1161M
[12/27 13:26:23] d2.utils.events INFO:  eta: 0:10:30  iter: 2079  total_loss: 0.7987  loss_cls: 0.306  loss_box_reg: 0.4915    time: 0.1623  last_time: 0.1579  data_time: 0.0454  last_data_time: 0.0482   lr: 0.0015  max_mem: 1161M
[12/27 13:26:26] d2.utils.events INFO:  eta: 0:10:27  iter: 2099  total_loss: 0.8349  loss_cls: 0.311  loss_box_reg: 0.5235    time: 0.1623  last_time: 0.1635  data_time: 0.0461  last_data_time: 0.0470   lr: 0.0015  max_mem: 1161M
[12/27 13:26:29] d2.utils.events INFO:  eta: 0:10:23  iter: 2119  total_loss: 0.8359  loss_cls: 0.3142  loss_box_reg: 0.5231    time: 0.1623  last_time: 0.1692  data_time: 0.0450  last_data_time: 0.0509   lr: 0.0015  max_mem: 1161M
[12/27 13:26:33] d2.utils.events INFO:  eta: 0:10:20  iter: 2139  total_loss: 0.8114  loss_cls: 0.3023  loss_box_reg: 0.5091    time: 0.1623  last_time: 0.1850  data_time: 0.0457  last_data_time: 0.0476   lr: 0.0015  max_mem: 1161M
[12/27 13:26:36] d2.utils.events INFO:  eta: 0:10:17  iter: 2159  total_loss: 0.821  loss_cls: 0.3024  loss_box_reg: 0.5179    time: 0.1623  last_time: 0.1591  data_time: 0.0468  last_data_time: 0.0456   lr: 0.0015  max_mem: 1161M
[12/27 13:26:39] d2.utils.events INFO:  eta: 0:10:14  iter: 2179  total_loss: 0.8025  loss_cls: 0.3019  loss_box_reg: 0.5061    time: 0.1622  last_time: 0.1537  data_time: 0.0435  last_data_time: 0.0365   lr: 0.0015  max_mem: 1161M
[12/27 13:26:42] d2.utils.events INFO:  eta: 0:10:11  iter: 2199  total_loss: 0.8342  loss_cls: 0.3131  loss_box_reg: 0.5217    time: 0.1622  last_time: 0.1658  data_time: 0.0443  last_data_time: 0.0471   lr: 0.0015  max_mem: 1161M
[12/27 13:26:46] d2.utils.events INFO:  eta: 0:10:07  iter: 2219  total_loss: 0.8204  loss_cls: 0.3056  loss_box_reg: 0.5118    time: 0.1622  last_time: 0.1682  data_time: 0.0455  last_data_time: 0.0532   lr: 0.0015  max_mem: 1161M
[12/27 13:26:49] d2.utils.events INFO:  eta: 0:10:04  iter: 2239  total_loss: 0.7963  loss_cls: 0.2905  loss_box_reg: 0.5001    time: 0.1622  last_time: 0.1647  data_time: 0.0462  last_data_time: 0.0472   lr: 0.0015  max_mem: 1161M
[12/27 13:26:52] d2.utils.events INFO:  eta: 0:10:01  iter: 2259  total_loss: 0.8125  loss_cls: 0.3037  loss_box_reg: 0.5095    time: 0.1622  last_time: 0.1721  data_time: 0.0472  last_data_time: 0.0488   lr: 0.0015  max_mem: 1161M
[12/27 13:26:55] d2.utils.events INFO:  eta: 0:09:58  iter: 2279  total_loss: 0.784  loss_cls: 0.287  loss_box_reg: 0.497    time: 0.1622  last_time: 0.1646  data_time: 0.0458  last_data_time: 0.0512   lr: 0.0015  max_mem: 1161M
[12/27 13:26:59] d2.utils.events INFO:  eta: 0:09:55  iter: 2299  total_loss: 0.7913  loss_cls: 0.2951  loss_box_reg: 0.4962    time: 0.1622  last_time: 0.1596  data_time: 0.0482  last_data_time: 0.0474   lr: 0.0015  max_mem: 1161M
[12/27 13:27:02] d2.utils.events INFO:  eta: 0:09:51  iter: 2319  total_loss: 0.793  loss_cls: 0.2905  loss_box_reg: 0.5025    time: 0.1622  last_time: 0.1695  data_time: 0.0461  last_data_time: 0.0490   lr: 0.0015  max_mem: 1161M
[12/27 13:27:05] d2.utils.events INFO:  eta: 0:09:48  iter: 2339  total_loss: 0.7899  loss_cls: 0.2931  loss_box_reg: 0.5018    time: 0.1622  last_time: 0.1698  data_time: 0.0451  last_data_time: 0.0516   lr: 0.0015  max_mem: 1161M
[12/27 13:27:08] d2.utils.events INFO:  eta: 0:09:45  iter: 2359  total_loss: 0.8175  loss_cls: 0.299  loss_box_reg: 0.5184    time: 0.1622  last_time: 0.1549  data_time: 0.0465  last_data_time: 0.0427   lr: 0.0015  max_mem: 1161M
[12/27 13:27:12] d2.utils.events INFO:  eta: 0:09:42  iter: 2379  total_loss: 0.7813  loss_cls: 0.2883  loss_box_reg: 0.4962    time: 0.1622  last_time: 0.1524  data_time: 0.0466  last_data_time: 0.0415   lr: 0.0015  max_mem: 1161M
[12/27 13:27:15] d2.utils.events INFO:  eta: 0:09:39  iter: 2399  total_loss: 0.7953  loss_cls: 0.2884  loss_box_reg: 0.5067    time: 0.1622  last_time: 0.1830  data_time: 0.0473  last_data_time: 0.0627   lr: 0.0015  max_mem: 1161M
[12/27 13:27:18] d2.utils.events INFO:  eta: 0:09:35  iter: 2419  total_loss: 0.7813  loss_cls: 0.2841  loss_box_reg: 0.4935    time: 0.1622  last_time: 0.1684  data_time: 0.0448  last_data_time: 0.0494   lr: 0.0015  max_mem: 1161M
[12/27 13:27:21] d2.utils.events INFO:  eta: 0:09:32  iter: 2439  total_loss: 0.7994  loss_cls: 0.2912  loss_box_reg: 0.5056    time: 0.1621  last_time: 0.1451  data_time: 0.0474  last_data_time: 0.0333   lr: 0.0015  max_mem: 1161M
[12/27 13:27:25] d2.utils.events INFO:  eta: 0:09:29  iter: 2459  total_loss: 0.7892  loss_cls: 0.2884  loss_box_reg: 0.4937    time: 0.1621  last_time: 0.1578  data_time: 0.0459  last_data_time: 0.0450   lr: 0.0015  max_mem: 1161M
[12/27 13:27:28] d2.utils.events INFO:  eta: 0:09:25  iter: 2479  total_loss: 0.7803  loss_cls: 0.2801  loss_box_reg: 0.4976    time: 0.1621  last_time: 0.1541  data_time: 0.0453  last_data_time: 0.0440   lr: 0.0015  max_mem: 1161M
[12/27 13:27:31] d2.utils.events INFO:  eta: 0:09:22  iter: 2499  total_loss: 0.7611  loss_cls: 0.276  loss_box_reg: 0.4834    time: 0.1621  last_time: 0.1619  data_time: 0.0479  last_data_time: 0.0446   lr: 0.0015  max_mem: 1161M
[12/27 13:27:34] d2.utils.events INFO:  eta: 0:09:19  iter: 2519  total_loss: 0.7384  loss_cls: 0.2789  loss_box_reg: 0.4631    time: 0.1621  last_time: 0.1531  data_time: 0.0470  last_data_time: 0.0410   lr: 0.0015  max_mem: 1161M
[12/27 13:27:38] d2.utils.events INFO:  eta: 0:09:16  iter: 2539  total_loss: 0.7463  loss_cls: 0.27  loss_box_reg: 0.4751    time: 0.1621  last_time: 0.1834  data_time: 0.0453  last_data_time: 0.0676   lr: 0.0015  max_mem: 1161M
[12/27 13:27:41] d2.utils.events INFO:  eta: 0:09:13  iter: 2559  total_loss: 0.7633  loss_cls: 0.2795  loss_box_reg: 0.4838    time: 0.1621  last_time: 0.1704  data_time: 0.0468  last_data_time: 0.0478   lr: 0.0015  max_mem: 1161M
[12/27 13:27:44] d2.utils.events INFO:  eta: 0:09:10  iter: 2579  total_loss: 0.7656  loss_cls: 0.2729  loss_box_reg: 0.4927    time: 0.1621  last_time: 0.1600  data_time: 0.0456  last_data_time: 0.0351   lr: 0.0015  max_mem: 1161M
[12/27 13:27:47] d2.utils.events INFO:  eta: 0:09:07  iter: 2599  total_loss: 0.771  loss_cls: 0.2724  loss_box_reg: 0.4928    time: 0.1621  last_time: 0.1758  data_time: 0.0461  last_data_time: 0.0512   lr: 0.0015  max_mem: 1161M
[12/27 13:27:50] d2.utils.events INFO:  eta: 0:09:03  iter: 2619  total_loss: 0.7756  loss_cls: 0.2805  loss_box_reg: 0.4895    time: 0.1621  last_time: 0.1623  data_time: 0.0454  last_data_time: 0.0476   lr: 0.0015  max_mem: 1161M
[12/27 13:27:54] d2.utils.events INFO:  eta: 0:09:00  iter: 2639  total_loss: 0.735  loss_cls: 0.2664  loss_box_reg: 0.4673    time: 0.1621  last_time: 0.1537  data_time: 0.0449  last_data_time: 0.0429   lr: 0.0015  max_mem: 1161M
[12/27 13:27:57] d2.utils.events INFO:  eta: 0:08:57  iter: 2659  total_loss: 0.7892  loss_cls: 0.2852  loss_box_reg: 0.5043    time: 0.1621  last_time: 0.1642  data_time: 0.0461  last_data_time: 0.0525   lr: 0.0015  max_mem: 1161M
[12/27 13:28:00] d2.utils.events INFO:  eta: 0:08:53  iter: 2679  total_loss: 0.7808  loss_cls: 0.2839  loss_box_reg: 0.4969    time: 0.1620  last_time: 0.1517  data_time: 0.0437  last_data_time: 0.0392   lr: 0.0015  max_mem: 1161M
[12/27 13:28:03] d2.utils.events INFO:  eta: 0:08:50  iter: 2699  total_loss: 0.7491  loss_cls: 0.2675  loss_box_reg: 0.4836    time: 0.1620  last_time: 0.1641  data_time: 0.0457  last_data_time: 0.0501   lr: 0.0015  max_mem: 1161M
[12/27 13:28:06] d2.utils.events INFO:  eta: 0:08:46  iter: 2719  total_loss: 0.7364  loss_cls: 0.2625  loss_box_reg: 0.4739    time: 0.1620  last_time: 0.1649  data_time: 0.0480  last_data_time: 0.0529   lr: 0.0015  max_mem: 1161M
[12/27 13:28:10] d2.utils.events INFO:  eta: 0:08:43  iter: 2739  total_loss: 0.7415  loss_cls: 0.2662  loss_box_reg: 0.479    time: 0.1620  last_time: 0.1681  data_time: 0.0449  last_data_time: 0.0425   lr: 0.0015  max_mem: 1161M
[12/27 13:28:13] d2.utils.events INFO:  eta: 0:08:39  iter: 2759  total_loss: 0.7786  loss_cls: 0.2804  loss_box_reg: 0.498    time: 0.1620  last_time: 0.1503  data_time: 0.0415  last_data_time: 0.0360   lr: 0.0015  max_mem: 1161M
[12/27 13:28:16] d2.utils.events INFO:  eta: 0:08:36  iter: 2779  total_loss: 0.743  loss_cls: 0.2725  loss_box_reg: 0.4707    time: 0.1620  last_time: 0.1493  data_time: 0.0422  last_data_time: 0.0352   lr: 0.0015  max_mem: 1161M
[12/27 13:28:19] d2.utils.events INFO:  eta: 0:08:33  iter: 2799  total_loss: 0.7824  loss_cls: 0.2835  loss_box_reg: 0.4981    time: 0.1620  last_time: 0.1564  data_time: 0.0456  last_data_time: 0.0397   lr: 0.0015  max_mem: 1161M
[12/27 13:28:23] d2.utils.events INFO:  eta: 0:08:30  iter: 2819  total_loss: 0.736  loss_cls: 0.2678  loss_box_reg: 0.4716    time: 0.1620  last_time: 0.1660  data_time: 0.0448  last_data_time: 0.0480   lr: 0.0015  max_mem: 1161M
[12/27 13:28:26] d2.utils.events INFO:  eta: 0:08:27  iter: 2839  total_loss: 0.7388  loss_cls: 0.2685  loss_box_reg: 0.4705    time: 0.1619  last_time: 0.1696  data_time: 0.0423  last_data_time: 0.0487   lr: 0.0015  max_mem: 1161M
[12/27 13:28:29] d2.utils.events INFO:  eta: 0:08:23  iter: 2859  total_loss: 0.7465  loss_cls: 0.2681  loss_box_reg: 0.4753    time: 0.1619  last_time: 0.1664  data_time: 0.0419  last_data_time: 0.0453   lr: 0.0015  max_mem: 1161M
[12/27 13:28:32] d2.utils.events INFO:  eta: 0:08:19  iter: 2879  total_loss: 0.7029  loss_cls: 0.2553  loss_box_reg: 0.4478    time: 0.1619  last_time: 0.1648  data_time: 0.0464  last_data_time: 0.0501   lr: 0.0015  max_mem: 1161M
[12/27 13:28:35] d2.utils.events INFO:  eta: 0:08:16  iter: 2899  total_loss: 0.7666  loss_cls: 0.2726  loss_box_reg: 0.494    time: 0.1619  last_time: 0.1655  data_time: 0.0468  last_data_time: 0.0493   lr: 0.0015  max_mem: 1161M
[12/27 13:28:39] d2.utils.events INFO:  eta: 0:08:13  iter: 2919  total_loss: 0.7147  loss_cls: 0.2599  loss_box_reg: 0.4548    time: 0.1619  last_time: 0.1635  data_time: 0.0470  last_data_time: 0.0507   lr: 0.0015  max_mem: 1161M
[12/27 13:28:42] d2.utils.events INFO:  eta: 0:08:11  iter: 2939  total_loss: 0.7824  loss_cls: 0.283  loss_box_reg: 0.4994    time: 0.1619  last_time: 0.1460  data_time: 0.0473  last_data_time: 0.0335   lr: 0.0015  max_mem: 1161M
[12/27 13:28:45] d2.utils.events INFO:  eta: 0:08:07  iter: 2959  total_loss: 0.7007  loss_cls: 0.2556  loss_box_reg: 0.4477    time: 0.1619  last_time: 0.1653  data_time: 0.0470  last_data_time: 0.0520   lr: 0.0015  max_mem: 1161M
[12/27 13:28:48] d2.utils.events INFO:  eta: 0:08:04  iter: 2979  total_loss: 0.6972  loss_cls: 0.2501  loss_box_reg: 0.4511    time: 0.1619  last_time: 0.1733  data_time: 0.0456  last_data_time: 0.0566   lr: 0.0015  max_mem: 1161M
[12/27 13:28:52] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/model_0002999.pth
[12/27 13:28:52] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/27 13:28:52] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:28:52] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/27 13:28:52] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/27 13:28:52] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/27 13:28:53] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0009 s/iter. Inference: 0.0340 s/iter. Eval: 0.0405 s/iter. Total: 0.0754 s/iter. ETA=0:00:26
[12/27 13:28:58] d2.evaluation.evaluator INFO: Inference done 77/363. Dataloading: 0.0012 s/iter. Inference: 0.0338 s/iter. Eval: 0.0412 s/iter. Total: 0.0762 s/iter. ETA=0:00:21
[12/27 13:29:03] d2.evaluation.evaluator INFO: Inference done 141/363. Dataloading: 0.0012 s/iter. Inference: 0.0342 s/iter. Eval: 0.0418 s/iter. Total: 0.0773 s/iter. ETA=0:00:17
[12/27 13:29:08] d2.evaluation.evaluator INFO: Inference done 205/363. Dataloading: 0.0013 s/iter. Inference: 0.0344 s/iter. Eval: 0.0420 s/iter. Total: 0.0777 s/iter. ETA=0:00:12
[12/27 13:29:13] d2.evaluation.evaluator INFO: Inference done 270/363. Dataloading: 0.0013 s/iter. Inference: 0.0343 s/iter. Eval: 0.0421 s/iter. Total: 0.0777 s/iter. ETA=0:00:07
[12/27 13:29:18] d2.evaluation.evaluator INFO: Inference done 335/363. Dataloading: 0.0013 s/iter. Inference: 0.0343 s/iter. Eval: 0.0421 s/iter. Total: 0.0777 s/iter. ETA=0:00:02
[12/27 13:29:21] d2.evaluation.evaluator INFO: Total inference time: 0:00:27.852550 (0.077800 s / iter per device, on 1 devices)
[12/27 13:29:21] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:12 (0.034232 s / iter per device, on 1 devices)
[12/27 13:29:21] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/27 13:29:26] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/27 13:29:26] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/27 13:29:26] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/27 13:29:26] d2.evaluation.testing INFO: copypaste: 3.4105,9.0909,1.8182,0.1594,0.2361,3.5660,5.2834,18.9056,28.0106
[12/27 13:29:26] d2.utils.events INFO:  eta: 0:08:01  iter: 2999  total_loss: 0.7416  loss_cls: 0.2688  loss_box_reg: 0.4715    time: 0.1619  last_time: 0.1696  data_time: 0.0452  last_data_time: 0.0452   lr: 0.0015  max_mem: 1161M
[12/27 13:29:29] d2.utils.events INFO:  eta: 0:07:58  iter: 3019  total_loss: 0.7346  loss_cls: 0.2621  loss_box_reg: 0.4689    time: 0.1619  last_time: 0.1774  data_time: 0.0451  last_data_time: 0.0618   lr: 0.00144  max_mem: 1161M
[12/27 13:29:32] d2.utils.events INFO:  eta: 0:07:55  iter: 3039  total_loss: 0.7185  loss_cls: 0.2565  loss_box_reg: 0.465    time: 0.1619  last_time: 0.1507  data_time: 0.0484  last_data_time: 0.0379   lr: 0.00144  max_mem: 1161M
[12/27 13:29:35] d2.utils.events INFO:  eta: 0:07:52  iter: 3059  total_loss: 0.7042  loss_cls: 0.2531  loss_box_reg: 0.4511    time: 0.1619  last_time: 0.1729  data_time: 0.0462  last_data_time: 0.0483   lr: 0.00144  max_mem: 1161M
[12/27 13:29:39] d2.utils.events INFO:  eta: 0:07:48  iter: 3079  total_loss: 0.7073  loss_cls: 0.2464  loss_box_reg: 0.4609    time: 0.1619  last_time: 0.1620  data_time: 0.0461  last_data_time: 0.0479   lr: 0.00144  max_mem: 1161M
[12/27 13:29:42] d2.utils.events INFO:  eta: 0:07:45  iter: 3099  total_loss: 0.6848  loss_cls: 0.2437  loss_box_reg: 0.4355    time: 0.1619  last_time: 0.1535  data_time: 0.0467  last_data_time: 0.0424   lr: 0.00144  max_mem: 1161M
[12/27 13:29:45] d2.utils.events INFO:  eta: 0:07:42  iter: 3119  total_loss: 0.7069  loss_cls: 0.2551  loss_box_reg: 0.4533    time: 0.1619  last_time: 0.1484  data_time: 0.0430  last_data_time: 0.0331   lr: 0.00144  max_mem: 1161M
[12/27 13:29:48] d2.utils.events INFO:  eta: 0:07:39  iter: 3139  total_loss: 0.6955  loss_cls: 0.2505  loss_box_reg: 0.445    time: 0.1619  last_time: 0.1640  data_time: 0.0468  last_data_time: 0.0515   lr: 0.00144  max_mem: 1161M
[12/27 13:29:51] d2.utils.events INFO:  eta: 0:07:35  iter: 3159  total_loss: 0.7289  loss_cls: 0.2643  loss_box_reg: 0.4671    time: 0.1619  last_time: 0.1604  data_time: 0.0445  last_data_time: 0.0441   lr: 0.00144  max_mem: 1161M
[12/27 13:29:55] d2.utils.events INFO:  eta: 0:07:32  iter: 3179  total_loss: 0.7479  loss_cls: 0.267  loss_box_reg: 0.4802    time: 0.1619  last_time: 0.1618  data_time: 0.0442  last_data_time: 0.0503   lr: 0.00144  max_mem: 1161M
[12/27 13:29:58] d2.utils.events INFO:  eta: 0:07:29  iter: 3199  total_loss: 0.7213  loss_cls: 0.2566  loss_box_reg: 0.4665    time: 0.1618  last_time: 0.1743  data_time: 0.0456  last_data_time: 0.0530   lr: 0.00144  max_mem: 1161M
[12/27 13:30:01] d2.utils.events INFO:  eta: 0:07:26  iter: 3219  total_loss: 0.7148  loss_cls: 0.2542  loss_box_reg: 0.4583    time: 0.1618  last_time: 0.1590  data_time: 0.0446  last_data_time: 0.0446   lr: 0.00144  max_mem: 1161M
[12/27 13:30:04] d2.utils.events INFO:  eta: 0:07:23  iter: 3239  total_loss: 0.7087  loss_cls: 0.2558  loss_box_reg: 0.4524    time: 0.1618  last_time: 0.1558  data_time: 0.0455  last_data_time: 0.0409   lr: 0.00144  max_mem: 1161M
[12/27 13:30:07] d2.utils.events INFO:  eta: 0:07:19  iter: 3259  total_loss: 0.7066  loss_cls: 0.2575  loss_box_reg: 0.4514    time: 0.1618  last_time: 0.1810  data_time: 0.0480  last_data_time: 0.0583   lr: 0.00144  max_mem: 1161M
[12/27 13:30:11] d2.utils.events INFO:  eta: 0:07:16  iter: 3279  total_loss: 0.6707  loss_cls: 0.2337  loss_box_reg: 0.4341    time: 0.1618  last_time: 0.1520  data_time: 0.0459  last_data_time: 0.0395   lr: 0.00144  max_mem: 1161M
[12/27 13:30:14] d2.utils.events INFO:  eta: 0:07:13  iter: 3299  total_loss: 0.6944  loss_cls: 0.2495  loss_box_reg: 0.4407    time: 0.1618  last_time: 0.1532  data_time: 0.0460  last_data_time: 0.0355   lr: 0.00144  max_mem: 1161M
[12/27 13:30:17] d2.utils.events INFO:  eta: 0:07:10  iter: 3319  total_loss: 0.6773  loss_cls: 0.246  loss_box_reg: 0.4313    time: 0.1618  last_time: 0.1686  data_time: 0.0446  last_data_time: 0.0437   lr: 0.00144  max_mem: 1161M
[12/27 13:30:20] d2.utils.events INFO:  eta: 0:07:06  iter: 3339  total_loss: 0.6806  loss_cls: 0.2446  loss_box_reg: 0.4394    time: 0.1618  last_time: 0.1476  data_time: 0.0473  last_data_time: 0.0369   lr: 0.00144  max_mem: 1161M
[12/27 13:30:24] d2.utils.events INFO:  eta: 0:07:03  iter: 3359  total_loss: 0.6891  loss_cls: 0.2508  loss_box_reg: 0.4388    time: 0.1618  last_time: 0.1632  data_time: 0.0484  last_data_time: 0.0507   lr: 0.00144  max_mem: 1161M
[12/27 13:30:27] d2.utils.events INFO:  eta: 0:07:00  iter: 3379  total_loss: 0.6874  loss_cls: 0.2428  loss_box_reg: 0.444    time: 0.1618  last_time: 0.1589  data_time: 0.0468  last_data_time: 0.0449   lr: 0.00144  max_mem: 1161M
[12/27 13:30:30] d2.utils.events INFO:  eta: 0:06:57  iter: 3399  total_loss: 0.6939  loss_cls: 0.2464  loss_box_reg: 0.4506    time: 0.1618  last_time: 0.1559  data_time: 0.0477  last_data_time: 0.0410   lr: 0.00144  max_mem: 1161M
[12/27 13:30:34] d2.utils.events INFO:  eta: 0:06:54  iter: 3419  total_loss: 0.6991  loss_cls: 0.2469  loss_box_reg: 0.4506    time: 0.1618  last_time: 0.1668  data_time: 0.0442  last_data_time: 0.0426   lr: 0.00144  max_mem: 1161M
[12/27 13:30:37] d2.utils.events INFO:  eta: 0:06:51  iter: 3439  total_loss: 0.7251  loss_cls: 0.2613  loss_box_reg: 0.4655    time: 0.1618  last_time: 0.1652  data_time: 0.0461  last_data_time: 0.0506   lr: 0.00144  max_mem: 1161M
[12/27 13:30:40] d2.utils.events INFO:  eta: 0:06:48  iter: 3459  total_loss: 0.6964  loss_cls: 0.2487  loss_box_reg: 0.4452    time: 0.1618  last_time: 0.1411  data_time: 0.0433  last_data_time: 0.0301   lr: 0.00144  max_mem: 1161M
[12/27 13:30:43] d2.utils.events INFO:  eta: 0:06:44  iter: 3479  total_loss: 0.6923  loss_cls: 0.2435  loss_box_reg: 0.4449    time: 0.1618  last_time: 0.1589  data_time: 0.0430  last_data_time: 0.0425   lr: 0.00144  max_mem: 1161M
[12/27 13:30:46] d2.utils.events INFO:  eta: 0:06:40  iter: 3499  total_loss: 0.6779  loss_cls: 0.245  loss_box_reg: 0.4312    time: 0.1618  last_time: 0.1437  data_time: 0.0434  last_data_time: 0.0317   lr: 0.00144  max_mem: 1161M
[12/27 13:30:50] d2.utils.events INFO:  eta: 0:06:37  iter: 3519  total_loss: 0.6731  loss_cls: 0.2369  loss_box_reg: 0.4302    time: 0.1618  last_time: 0.1626  data_time: 0.0448  last_data_time: 0.0496   lr: 0.00144  max_mem: 1161M
[12/27 13:30:53] d2.utils.events INFO:  eta: 0:06:34  iter: 3539  total_loss: 0.6807  loss_cls: 0.2455  loss_box_reg: 0.4331    time: 0.1618  last_time: 0.1406  data_time: 0.0478  last_data_time: 0.0302   lr: 0.00144  max_mem: 1161M
[12/27 13:30:56] d2.utils.events INFO:  eta: 0:06:31  iter: 3559  total_loss: 0.6588  loss_cls: 0.2359  loss_box_reg: 0.4232    time: 0.1618  last_time: 0.1649  data_time: 0.0457  last_data_time: 0.0443   lr: 0.00144  max_mem: 1161M
[12/27 13:30:59] d2.utils.events INFO:  eta: 0:06:28  iter: 3579  total_loss: 0.7446  loss_cls: 0.2657  loss_box_reg: 0.4792    time: 0.1618  last_time: 0.1517  data_time: 0.0475  last_data_time: 0.0384   lr: 0.00144  max_mem: 1161M
[12/27 13:31:03] d2.utils.events INFO:  eta: 0:06:25  iter: 3599  total_loss: 0.6906  loss_cls: 0.25  loss_box_reg: 0.4406    time: 0.1618  last_time: 0.1688  data_time: 0.0468  last_data_time: 0.0528   lr: 0.00144  max_mem: 1161M
[12/27 13:31:06] d2.utils.events INFO:  eta: 0:06:22  iter: 3619  total_loss: 0.6544  loss_cls: 0.2359  loss_box_reg: 0.4165    time: 0.1618  last_time: 0.1615  data_time: 0.0459  last_data_time: 0.0521   lr: 0.00144  max_mem: 1161M
[12/27 13:31:09] d2.utils.events INFO:  eta: 0:06:19  iter: 3639  total_loss: 0.6518  loss_cls: 0.238  loss_box_reg: 0.4138    time: 0.1618  last_time: 0.1752  data_time: 0.0458  last_data_time: 0.0520   lr: 0.00144  max_mem: 1161M
[12/27 13:31:12] d2.utils.events INFO:  eta: 0:06:16  iter: 3659  total_loss: 0.7548  loss_cls: 0.2712  loss_box_reg: 0.4836    time: 0.1618  last_time: 0.1659  data_time: 0.0480  last_data_time: 0.0452   lr: 0.00144  max_mem: 1161M
[12/27 13:31:16] d2.utils.events INFO:  eta: 0:06:13  iter: 3679  total_loss: 0.6696  loss_cls: 0.2356  loss_box_reg: 0.4349    time: 0.1618  last_time: 0.1431  data_time: 0.0442  last_data_time: 0.0273   lr: 0.00144  max_mem: 1161M
[12/27 13:31:19] d2.utils.events INFO:  eta: 0:06:09  iter: 3699  total_loss: 0.6509  loss_cls: 0.2292  loss_box_reg: 0.4223    time: 0.1618  last_time: 0.1671  data_time: 0.0450  last_data_time: 0.0479   lr: 0.00144  max_mem: 1161M
[12/27 13:31:22] d2.utils.events INFO:  eta: 0:06:06  iter: 3719  total_loss: 0.6877  loss_cls: 0.2445  loss_box_reg: 0.4404    time: 0.1618  last_time: 0.1584  data_time: 0.0459  last_data_time: 0.0396   lr: 0.00144  max_mem: 1161M
[12/27 13:31:25] d2.utils.events INFO:  eta: 0:06:03  iter: 3739  total_loss: 0.6751  loss_cls: 0.2407  loss_box_reg: 0.4295    time: 0.1618  last_time: 0.1578  data_time: 0.0455  last_data_time: 0.0453   lr: 0.00144  max_mem: 1161M
[12/27 13:31:29] d2.utils.events INFO:  eta: 0:06:00  iter: 3759  total_loss: 0.7139  loss_cls: 0.2506  loss_box_reg: 0.4588    time: 0.1618  last_time: 0.1742  data_time: 0.0448  last_data_time: 0.0547   lr: 0.00144  max_mem: 1161M
[12/27 13:31:32] d2.utils.events INFO:  eta: 0:05:57  iter: 3779  total_loss: 0.6092  loss_cls: 0.2153  loss_box_reg: 0.3939    time: 0.1618  last_time: 0.1567  data_time: 0.0458  last_data_time: 0.0389   lr: 0.00144  max_mem: 1161M
[12/27 13:31:35] d2.utils.events INFO:  eta: 0:05:53  iter: 3799  total_loss: 0.7059  loss_cls: 0.2536  loss_box_reg: 0.4506    time: 0.1618  last_time: 0.1501  data_time: 0.0449  last_data_time: 0.0397   lr: 0.00144  max_mem: 1161M
[12/27 13:31:38] d2.utils.events INFO:  eta: 0:05:50  iter: 3819  total_loss: 0.721  loss_cls: 0.2537  loss_box_reg: 0.4655    time: 0.1618  last_time: 0.1618  data_time: 0.0448  last_data_time: 0.0443   lr: 0.00144  max_mem: 1161M
[12/27 13:31:41] d2.utils.events INFO:  eta: 0:05:47  iter: 3839  total_loss: 0.6804  loss_cls: 0.2423  loss_box_reg: 0.4355    time: 0.1618  last_time: 0.1613  data_time: 0.0468  last_data_time: 0.0451   lr: 0.00144  max_mem: 1161M
[12/27 13:31:45] d2.utils.events INFO:  eta: 0:05:44  iter: 3859  total_loss: 0.6294  loss_cls: 0.2293  loss_box_reg: 0.404    time: 0.1618  last_time: 0.1602  data_time: 0.0478  last_data_time: 0.0455   lr: 0.00144  max_mem: 1161M
[12/27 13:31:48] d2.utils.events INFO:  eta: 0:05:41  iter: 3879  total_loss: 0.6476  loss_cls: 0.2383  loss_box_reg: 0.4093    time: 0.1618  last_time: 0.1448  data_time: 0.0432  last_data_time: 0.0364   lr: 0.00144  max_mem: 1161M
[12/27 13:31:51] d2.utils.events INFO:  eta: 0:05:37  iter: 3899  total_loss: 0.6935  loss_cls: 0.2493  loss_box_reg: 0.4495    time: 0.1617  last_time: 0.1670  data_time: 0.0420  last_data_time: 0.0503   lr: 0.00144  max_mem: 1161M
[12/27 13:31:54] d2.utils.events INFO:  eta: 0:05:34  iter: 3919  total_loss: 0.6702  loss_cls: 0.2458  loss_box_reg: 0.4269    time: 0.1617  last_time: 0.1743  data_time: 0.0460  last_data_time: 0.0592   lr: 0.00144  max_mem: 1161M
[12/27 13:31:58] d2.utils.events INFO:  eta: 0:05:31  iter: 3939  total_loss: 0.6455  loss_cls: 0.2359  loss_box_reg: 0.4096    time: 0.1617  last_time: 0.1517  data_time: 0.0462  last_data_time: 0.0392   lr: 0.00144  max_mem: 1161M
[12/27 13:32:01] d2.utils.events INFO:  eta: 0:05:27  iter: 3959  total_loss: 0.6794  loss_cls: 0.2388  loss_box_reg: 0.4397    time: 0.1617  last_time: 0.1695  data_time: 0.0421  last_data_time: 0.0475   lr: 0.00144  max_mem: 1161M
[12/27 13:32:04] d2.utils.events INFO:  eta: 0:05:24  iter: 3979  total_loss: 0.6809  loss_cls: 0.2442  loss_box_reg: 0.4431    time: 0.1617  last_time: 0.1599  data_time: 0.0440  last_data_time: 0.0448   lr: 0.00144  max_mem: 1161M
[12/27 13:32:07] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/model_0003999.pth
[12/27 13:32:08] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/27 13:32:08] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:32:08] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/27 13:32:08] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/27 13:32:08] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/27 13:32:09] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0008 s/iter. Inference: 0.0338 s/iter. Eval: 0.0391 s/iter. Total: 0.0737 s/iter. ETA=0:00:25
[12/27 13:32:14] d2.evaluation.evaluator INFO: Inference done 80/363. Dataloading: 0.0012 s/iter. Inference: 0.0341 s/iter. Eval: 0.0375 s/iter. Total: 0.0728 s/iter. ETA=0:00:20
[12/27 13:32:19] d2.evaluation.evaluator INFO: Inference done 148/363. Dataloading: 0.0012 s/iter. Inference: 0.0342 s/iter. Eval: 0.0381 s/iter. Total: 0.0735 s/iter. ETA=0:00:15
[12/27 13:32:24] d2.evaluation.evaluator INFO: Inference done 217/363. Dataloading: 0.0012 s/iter. Inference: 0.0341 s/iter. Eval: 0.0378 s/iter. Total: 0.0731 s/iter. ETA=0:00:10
[12/27 13:32:29] d2.evaluation.evaluator INFO: Inference done 286/363. Dataloading: 0.0012 s/iter. Inference: 0.0340 s/iter. Eval: 0.0378 s/iter. Total: 0.0730 s/iter. ETA=0:00:05
[12/27 13:32:34] d2.evaluation.evaluator INFO: Inference done 355/363. Dataloading: 0.0012 s/iter. Inference: 0.0340 s/iter. Eval: 0.0379 s/iter. Total: 0.0731 s/iter. ETA=0:00:00
[12/27 13:32:35] d2.evaluation.evaluator INFO: Total inference time: 0:00:26.276277 (0.073397 s / iter per device, on 1 devices)
[12/27 13:32:35] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:12 (0.033950 s / iter per device, on 1 devices)
[12/27 13:32:35] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/27 13:32:40] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/27 13:32:40] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/27 13:32:40] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/27 13:32:40] d2.evaluation.testing INFO: copypaste: 2.4604,9.0909,0.4329,0.1660,0.2224,4.7081,6.3067,21.6150,28.9539
[12/27 13:32:40] d2.utils.events INFO:  eta: 0:05:21  iter: 3999  total_loss: 0.6696  loss_cls: 0.2413  loss_box_reg: 0.429    time: 0.1617  last_time: 0.1563  data_time: 0.0413  last_data_time: 0.0418   lr: 0.00144  max_mem: 1161M
[12/27 13:32:43] d2.utils.events INFO:  eta: 0:05:17  iter: 4019  total_loss: 0.6464  loss_cls: 0.2282  loss_box_reg: 0.4199    time: 0.1617  last_time: 0.1599  data_time: 0.0448  last_data_time: 0.0474   lr: 0.0013824  max_mem: 1161M
[12/27 13:32:46] d2.utils.events INFO:  eta: 0:05:14  iter: 4039  total_loss: 0.6615  loss_cls: 0.2363  loss_box_reg: 0.426    time: 0.1617  last_time: 0.1636  data_time: 0.0463  last_data_time: 0.0403   lr: 0.0013824  max_mem: 1161M
[12/27 13:32:50] d2.utils.events INFO:  eta: 0:05:11  iter: 4059  total_loss: 0.6535  loss_cls: 0.2295  loss_box_reg: 0.423    time: 0.1617  last_time: 0.1659  data_time: 0.0465  last_data_time: 0.0498   lr: 0.0013824  max_mem: 1161M
[12/27 13:32:53] d2.utils.events INFO:  eta: 0:05:08  iter: 4079  total_loss: 0.7338  loss_cls: 0.258  loss_box_reg: 0.4734    time: 0.1617  last_time: 0.1575  data_time: 0.0463  last_data_time: 0.0473   lr: 0.0013824  max_mem: 1161M
[12/27 13:32:56] d2.utils.events INFO:  eta: 0:05:04  iter: 4099  total_loss: 0.6758  loss_cls: 0.2398  loss_box_reg: 0.435    time: 0.1617  last_time: 0.1567  data_time: 0.0457  last_data_time: 0.0429   lr: 0.0013824  max_mem: 1161M
[12/27 13:32:59] d2.utils.events INFO:  eta: 0:05:01  iter: 4119  total_loss: 0.6462  loss_cls: 0.2231  loss_box_reg: 0.4246    time: 0.1617  last_time: 0.1603  data_time: 0.0456  last_data_time: 0.0404   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:03] d2.utils.events INFO:  eta: 0:04:58  iter: 4139  total_loss: 0.6278  loss_cls: 0.2241  loss_box_reg: 0.4053    time: 0.1617  last_time: 0.1633  data_time: 0.0465  last_data_time: 0.0411   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:06] d2.utils.events INFO:  eta: 0:04:55  iter: 4159  total_loss: 0.6801  loss_cls: 0.2412  loss_box_reg: 0.4402    time: 0.1616  last_time: 0.1745  data_time: 0.0458  last_data_time: 0.0561   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:09] d2.utils.events INFO:  eta: 0:04:52  iter: 4179  total_loss: 0.6185  loss_cls: 0.218  loss_box_reg: 0.3968    time: 0.1616  last_time: 0.1523  data_time: 0.0457  last_data_time: 0.0396   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:12] d2.utils.events INFO:  eta: 0:04:48  iter: 4199  total_loss: 0.6724  loss_cls: 0.2425  loss_box_reg: 0.4327    time: 0.1616  last_time: 0.1499  data_time: 0.0452  last_data_time: 0.0417   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:15] d2.utils.events INFO:  eta: 0:04:45  iter: 4219  total_loss: 0.6891  loss_cls: 0.246  loss_box_reg: 0.4431    time: 0.1616  last_time: 0.1685  data_time: 0.0464  last_data_time: 0.0554   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:19] d2.utils.events INFO:  eta: 0:04:42  iter: 4239  total_loss: 0.6583  loss_cls: 0.2349  loss_box_reg: 0.4214    time: 0.1616  last_time: 0.1676  data_time: 0.0451  last_data_time: 0.0468   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:22] d2.utils.events INFO:  eta: 0:04:39  iter: 4259  total_loss: 0.6632  loss_cls: 0.2321  loss_box_reg: 0.431    time: 0.1616  last_time: 0.1712  data_time: 0.0429  last_data_time: 0.0511   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:25] d2.utils.events INFO:  eta: 0:04:35  iter: 4279  total_loss: 0.6159  loss_cls: 0.2181  loss_box_reg: 0.4003    time: 0.1616  last_time: 0.1663  data_time: 0.0468  last_data_time: 0.0563   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:28] d2.utils.events INFO:  eta: 0:04:32  iter: 4299  total_loss: 0.6615  loss_cls: 0.2371  loss_box_reg: 0.4198    time: 0.1616  last_time: 0.1640  data_time: 0.0479  last_data_time: 0.0521   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:32] d2.utils.events INFO:  eta: 0:04:29  iter: 4319  total_loss: 0.6177  loss_cls: 0.2238  loss_box_reg: 0.3947    time: 0.1616  last_time: 0.1540  data_time: 0.0451  last_data_time: 0.0411   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:35] d2.utils.events INFO:  eta: 0:04:26  iter: 4339  total_loss: 0.6784  loss_cls: 0.2382  loss_box_reg: 0.4398    time: 0.1616  last_time: 0.1547  data_time: 0.0444  last_data_time: 0.0431   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:38] d2.utils.events INFO:  eta: 0:04:22  iter: 4359  total_loss: 0.6229  loss_cls: 0.223  loss_box_reg: 0.3954    time: 0.1616  last_time: 0.1526  data_time: 0.0448  last_data_time: 0.0422   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:41] d2.utils.events INFO:  eta: 0:04:19  iter: 4379  total_loss: 0.6372  loss_cls: 0.2265  loss_box_reg: 0.4107    time: 0.1616  last_time: 0.1856  data_time: 0.0483  last_data_time: 0.0669   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:44] d2.utils.events INFO:  eta: 0:04:16  iter: 4399  total_loss: 0.6644  loss_cls: 0.2371  loss_box_reg: 0.4269    time: 0.1616  last_time: 0.1604  data_time: 0.0432  last_data_time: 0.0390   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:48] d2.utils.events INFO:  eta: 0:04:13  iter: 4419  total_loss: 0.6723  loss_cls: 0.2396  loss_box_reg: 0.4318    time: 0.1616  last_time: 0.1627  data_time: 0.0467  last_data_time: 0.0469   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:51] d2.utils.events INFO:  eta: 0:04:10  iter: 4439  total_loss: 0.6037  loss_cls: 0.2195  loss_box_reg: 0.3842    time: 0.1616  last_time: 0.1710  data_time: 0.0468  last_data_time: 0.0567   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:54] d2.utils.events INFO:  eta: 0:04:06  iter: 4459  total_loss: 0.6673  loss_cls: 0.2411  loss_box_reg: 0.426    time: 0.1616  last_time: 0.1540  data_time: 0.0453  last_data_time: 0.0389   lr: 0.0013824  max_mem: 1161M
[12/27 13:33:57] d2.utils.events INFO:  eta: 0:04:03  iter: 4479  total_loss: 0.6479  loss_cls: 0.2313  loss_box_reg: 0.415    time: 0.1616  last_time: 0.1549  data_time: 0.0469  last_data_time: 0.0408   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:01] d2.utils.events INFO:  eta: 0:04:00  iter: 4499  total_loss: 0.6664  loss_cls: 0.2383  loss_box_reg: 0.4281    time: 0.1616  last_time: 0.1754  data_time: 0.0445  last_data_time: 0.0485   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:04] d2.utils.events INFO:  eta: 0:03:57  iter: 4519  total_loss: 0.6425  loss_cls: 0.2275  loss_box_reg: 0.4159    time: 0.1616  last_time: 0.1617  data_time: 0.0448  last_data_time: 0.0425   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:07] d2.utils.events INFO:  eta: 0:03:54  iter: 4539  total_loss: 0.5957  loss_cls: 0.2161  loss_box_reg: 0.3796    time: 0.1616  last_time: 0.1787  data_time: 0.0456  last_data_time: 0.0609   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:10] d2.utils.events INFO:  eta: 0:03:50  iter: 4559  total_loss: 0.7017  loss_cls: 0.2506  loss_box_reg: 0.4488    time: 0.1616  last_time: 0.1708  data_time: 0.0446  last_data_time: 0.0443   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:14] d2.utils.events INFO:  eta: 0:03:47  iter: 4579  total_loss: 0.629  loss_cls: 0.2226  loss_box_reg: 0.4064    time: 0.1616  last_time: 0.1664  data_time: 0.0472  last_data_time: 0.0551   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:17] d2.utils.events INFO:  eta: 0:03:44  iter: 4599  total_loss: 0.6699  loss_cls: 0.2351  loss_box_reg: 0.434    time: 0.1616  last_time: 0.1711  data_time: 0.0461  last_data_time: 0.0526   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:20] d2.utils.events INFO:  eta: 0:03:41  iter: 4619  total_loss: 0.6421  loss_cls: 0.2314  loss_box_reg: 0.4141    time: 0.1616  last_time: 0.1601  data_time: 0.0460  last_data_time: 0.0483   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:23] d2.utils.events INFO:  eta: 0:03:38  iter: 4639  total_loss: 0.6356  loss_cls: 0.225  loss_box_reg: 0.4101    time: 0.1616  last_time: 0.1626  data_time: 0.0472  last_data_time: 0.0432   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:27] d2.utils.events INFO:  eta: 0:03:34  iter: 4659  total_loss: 0.6688  loss_cls: 0.2373  loss_box_reg: 0.4287    time: 0.1616  last_time: 0.1500  data_time: 0.0478  last_data_time: 0.0379   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:30] d2.utils.events INFO:  eta: 0:03:31  iter: 4679  total_loss: 0.6554  loss_cls: 0.2313  loss_box_reg: 0.4209    time: 0.1616  last_time: 0.1746  data_time: 0.0450  last_data_time: 0.0473   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:33] d2.utils.events INFO:  eta: 0:03:28  iter: 4699  total_loss: 0.62  loss_cls: 0.2244  loss_box_reg: 0.3974    time: 0.1616  last_time: 0.1474  data_time: 0.0480  last_data_time: 0.0391   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:37] d2.utils.events INFO:  eta: 0:03:25  iter: 4719  total_loss: 0.6323  loss_cls: 0.2257  loss_box_reg: 0.4009    time: 0.1616  last_time: 0.1724  data_time: 0.0459  last_data_time: 0.0527   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:40] d2.utils.events INFO:  eta: 0:03:22  iter: 4739  total_loss: 0.6385  loss_cls: 0.23  loss_box_reg: 0.4063    time: 0.1616  last_time: 0.1644  data_time: 0.0455  last_data_time: 0.0460   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:43] d2.utils.events INFO:  eta: 0:03:18  iter: 4759  total_loss: 0.6754  loss_cls: 0.2431  loss_box_reg: 0.4307    time: 0.1616  last_time: 0.1604  data_time: 0.0428  last_data_time: 0.0428   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:46] d2.utils.events INFO:  eta: 0:03:15  iter: 4779  total_loss: 0.632  loss_cls: 0.2261  loss_box_reg: 0.4074    time: 0.1616  last_time: 0.1468  data_time: 0.0456  last_data_time: 0.0305   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:50] d2.utils.events INFO:  eta: 0:03:12  iter: 4799  total_loss: 0.6927  loss_cls: 0.2422  loss_box_reg: 0.4506    time: 0.1616  last_time: 0.1562  data_time: 0.0472  last_data_time: 0.0449   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:53] d2.utils.events INFO:  eta: 0:03:09  iter: 4819  total_loss: 0.6439  loss_cls: 0.227  loss_box_reg: 0.4139    time: 0.1616  last_time: 0.1564  data_time: 0.0415  last_data_time: 0.0333   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:56] d2.utils.events INFO:  eta: 0:03:05  iter: 4839  total_loss: 0.6085  loss_cls: 0.219  loss_box_reg: 0.3956    time: 0.1616  last_time: 0.1478  data_time: 0.0396  last_data_time: 0.0370   lr: 0.0013824  max_mem: 1161M
[12/27 13:34:59] d2.utils.events INFO:  eta: 0:03:02  iter: 4859  total_loss: 0.6327  loss_cls: 0.2318  loss_box_reg: 0.4031    time: 0.1616  last_time: 0.1497  data_time: 0.0450  last_data_time: 0.0351   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:02] d2.utils.events INFO:  eta: 0:02:59  iter: 4879  total_loss: 0.6214  loss_cls: 0.2222  loss_box_reg: 0.3963    time: 0.1616  last_time: 0.1630  data_time: 0.0432  last_data_time: 0.0430   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:05] d2.utils.events INFO:  eta: 0:02:56  iter: 4899  total_loss: 0.7131  loss_cls: 0.2544  loss_box_reg: 0.4587    time: 0.1616  last_time: 0.1644  data_time: 0.0462  last_data_time: 0.0522   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:09] d2.utils.events INFO:  eta: 0:02:53  iter: 4919  total_loss: 0.6475  loss_cls: 0.2296  loss_box_reg: 0.4133    time: 0.1616  last_time: 0.1580  data_time: 0.0461  last_data_time: 0.0353   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:12] d2.utils.events INFO:  eta: 0:02:49  iter: 4939  total_loss: 0.6314  loss_cls: 0.2235  loss_box_reg: 0.4079    time: 0.1616  last_time: 0.1660  data_time: 0.0477  last_data_time: 0.0492   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:15] d2.utils.events INFO:  eta: 0:02:46  iter: 4959  total_loss: 0.6132  loss_cls: 0.216  loss_box_reg: 0.397    time: 0.1616  last_time: 0.1600  data_time: 0.0427  last_data_time: 0.0433   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:19] d2.utils.events INFO:  eta: 0:02:43  iter: 4979  total_loss: 0.6321  loss_cls: 0.2223  loss_box_reg: 0.4098    time: 0.1616  last_time: 0.1759  data_time: 0.0416  last_data_time: 0.0475   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:22] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/model_0004999.pth
[12/27 13:35:22] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/27 13:35:22] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:35:22] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/27 13:35:22] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/27 13:35:22] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/27 13:35:23] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0009 s/iter. Inference: 0.0355 s/iter. Eval: 0.0404 s/iter. Total: 0.0769 s/iter. ETA=0:00:27
[12/27 13:35:28] d2.evaluation.evaluator INFO: Inference done 80/363. Dataloading: 0.0012 s/iter. Inference: 0.0345 s/iter. Eval: 0.0374 s/iter. Total: 0.0731 s/iter. ETA=0:00:20
[12/27 13:35:33] d2.evaluation.evaluator INFO: Inference done 146/363. Dataloading: 0.0012 s/iter. Inference: 0.0346 s/iter. Eval: 0.0385 s/iter. Total: 0.0744 s/iter. ETA=0:00:16
[12/27 13:35:38] d2.evaluation.evaluator INFO: Inference done 216/363. Dataloading: 0.0012 s/iter. Inference: 0.0344 s/iter. Eval: 0.0378 s/iter. Total: 0.0735 s/iter. ETA=0:00:10
[12/27 13:35:43] d2.evaluation.evaluator INFO: Inference done 286/363. Dataloading: 0.0012 s/iter. Inference: 0.0343 s/iter. Eval: 0.0376 s/iter. Total: 0.0731 s/iter. ETA=0:00:05
[12/27 13:35:48] d2.evaluation.evaluator INFO: Inference done 356/363. Dataloading: 0.0012 s/iter. Inference: 0.0342 s/iter. Eval: 0.0374 s/iter. Total: 0.0728 s/iter. ETA=0:00:00
[12/27 13:35:49] d2.evaluation.evaluator INFO: Total inference time: 0:00:26.168862 (0.073097 s / iter per device, on 1 devices)
[12/27 13:35:49] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:12 (0.034173 s / iter per device, on 1 devices)
[12/27 13:35:49] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/27 13:35:55] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/27 13:35:55] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/27 13:35:55] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/27 13:35:55] d2.evaluation.testing INFO: copypaste: 2.7300,4.5455,4.5455,0.1527,0.1799,4.6484,5.4743,20.5060,24.1495
[12/27 13:35:55] d2.utils.events INFO:  eta: 0:02:40  iter: 4999  total_loss: 0.6076  loss_cls: 0.2154  loss_box_reg: 0.3922    time: 0.1616  last_time: 0.1673  data_time: 0.0453  last_data_time: 0.0476   lr: 0.0013824  max_mem: 1161M
[12/27 13:35:58] d2.utils.events INFO:  eta: 0:02:37  iter: 5019  total_loss: 0.6442  loss_cls: 0.2324  loss_box_reg: 0.4126    time: 0.1616  last_time: 0.1650  data_time: 0.0465  last_data_time: 0.0475   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:02] d2.utils.events INFO:  eta: 0:02:34  iter: 5039  total_loss: 0.644  loss_cls: 0.2299  loss_box_reg: 0.4141    time: 0.1616  last_time: 0.1570  data_time: 0.0461  last_data_time: 0.0427   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:05] d2.utils.events INFO:  eta: 0:02:30  iter: 5059  total_loss: 0.6119  loss_cls: 0.2211  loss_box_reg: 0.3908    time: 0.1616  last_time: 0.1492  data_time: 0.0438  last_data_time: 0.0393   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:08] d2.utils.events INFO:  eta: 0:02:27  iter: 5079  total_loss: 0.6604  loss_cls: 0.2382  loss_box_reg: 0.4252    time: 0.1616  last_time: 0.1585  data_time: 0.0480  last_data_time: 0.0439   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:11] d2.utils.events INFO:  eta: 0:02:24  iter: 5099  total_loss: 0.6326  loss_cls: 0.2249  loss_box_reg: 0.411    time: 0.1616  last_time: 0.1564  data_time: 0.0459  last_data_time: 0.0357   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:15] d2.utils.events INFO:  eta: 0:02:21  iter: 5119  total_loss: 0.6575  loss_cls: 0.2333  loss_box_reg: 0.4211    time: 0.1616  last_time: 0.1552  data_time: 0.0465  last_data_time: 0.0452   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:18] d2.utils.events INFO:  eta: 0:02:18  iter: 5139  total_loss: 0.6133  loss_cls: 0.222  loss_box_reg: 0.3955    time: 0.1616  last_time: 0.1607  data_time: 0.0479  last_data_time: 0.0449   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:21] d2.utils.events INFO:  eta: 0:02:14  iter: 5159  total_loss: 0.6493  loss_cls: 0.2344  loss_box_reg: 0.4208    time: 0.1616  last_time: 0.1605  data_time: 0.0428  last_data_time: 0.0454   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:24] d2.utils.events INFO:  eta: 0:02:11  iter: 5179  total_loss: 0.6465  loss_cls: 0.2332  loss_box_reg: 0.4186    time: 0.1616  last_time: 0.1556  data_time: 0.0446  last_data_time: 0.0403   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:28] d2.utils.events INFO:  eta: 0:02:08  iter: 5199  total_loss: 0.626  loss_cls: 0.2215  loss_box_reg: 0.4004    time: 0.1616  last_time: 0.1574  data_time: 0.0442  last_data_time: 0.0409   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:31] d2.utils.events INFO:  eta: 0:02:05  iter: 5219  total_loss: 0.6574  loss_cls: 0.2347  loss_box_reg: 0.4249    time: 0.1616  last_time: 0.1633  data_time: 0.0476  last_data_time: 0.0423   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:34] d2.utils.events INFO:  eta: 0:02:02  iter: 5239  total_loss: 0.6454  loss_cls: 0.2321  loss_box_reg: 0.4085    time: 0.1616  last_time: 0.1601  data_time: 0.0470  last_data_time: 0.0426   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:37] d2.utils.events INFO:  eta: 0:01:59  iter: 5259  total_loss: 0.5951  loss_cls: 0.2122  loss_box_reg: 0.3829    time: 0.1616  last_time: 0.1672  data_time: 0.0463  last_data_time: 0.0473   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:41] d2.utils.events INFO:  eta: 0:01:55  iter: 5279  total_loss: 0.6398  loss_cls: 0.2301  loss_box_reg: 0.4065    time: 0.1616  last_time: 0.1509  data_time: 0.0458  last_data_time: 0.0418   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:44] d2.utils.events INFO:  eta: 0:01:52  iter: 5299  total_loss: 0.6557  loss_cls: 0.2342  loss_box_reg: 0.4153    time: 0.1616  last_time: 0.1703  data_time: 0.0443  last_data_time: 0.0552   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:47] d2.utils.events INFO:  eta: 0:01:49  iter: 5319  total_loss: 0.5943  loss_cls: 0.2133  loss_box_reg: 0.3801    time: 0.1616  last_time: 0.1586  data_time: 0.0461  last_data_time: 0.0475   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:50] d2.utils.events INFO:  eta: 0:01:46  iter: 5339  total_loss: 0.6051  loss_cls: 0.2176  loss_box_reg: 0.3926    time: 0.1616  last_time: 0.1665  data_time: 0.0454  last_data_time: 0.0546   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:54] d2.utils.events INFO:  eta: 0:01:43  iter: 5359  total_loss: 0.6215  loss_cls: 0.2206  loss_box_reg: 0.3982    time: 0.1616  last_time: 0.1533  data_time: 0.0463  last_data_time: 0.0415   lr: 0.0013271  max_mem: 1161M
[12/27 13:36:57] d2.utils.events INFO:  eta: 0:01:39  iter: 5379  total_loss: 0.5999  loss_cls: 0.2235  loss_box_reg: 0.3785    time: 0.1616  last_time: 0.1532  data_time: 0.0481  last_data_time: 0.0450   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:00] d2.utils.events INFO:  eta: 0:01:36  iter: 5399  total_loss: 0.6159  loss_cls: 0.2167  loss_box_reg: 0.4035    time: 0.1616  last_time: 0.1668  data_time: 0.0465  last_data_time: 0.0455   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:03] d2.utils.events INFO:  eta: 0:01:33  iter: 5419  total_loss: 0.6256  loss_cls: 0.2265  loss_box_reg: 0.4026    time: 0.1616  last_time: 0.1784  data_time: 0.0471  last_data_time: 0.0618   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:07] d2.utils.events INFO:  eta: 0:01:30  iter: 5439  total_loss: 0.5973  loss_cls: 0.2141  loss_box_reg: 0.3832    time: 0.1616  last_time: 0.1633  data_time: 0.0445  last_data_time: 0.0467   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:10] d2.utils.events INFO:  eta: 0:01:27  iter: 5459  total_loss: 0.6372  loss_cls: 0.223  loss_box_reg: 0.4116    time: 0.1616  last_time: 0.1670  data_time: 0.0456  last_data_time: 0.0490   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:13] d2.utils.events INFO:  eta: 0:01:23  iter: 5479  total_loss: 0.6292  loss_cls: 0.2228  loss_box_reg: 0.4056    time: 0.1616  last_time: 0.1701  data_time: 0.0479  last_data_time: 0.0540   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:16] d2.utils.events INFO:  eta: 0:01:20  iter: 5499  total_loss: 0.5932  loss_cls: 0.2087  loss_box_reg: 0.3836    time: 0.1616  last_time: 0.1538  data_time: 0.0426  last_data_time: 0.0397   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:19] d2.utils.events INFO:  eta: 0:01:17  iter: 5519  total_loss: 0.639  loss_cls: 0.2373  loss_box_reg: 0.4037    time: 0.1616  last_time: 0.1678  data_time: 0.0465  last_data_time: 0.0498   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:23] d2.utils.events INFO:  eta: 0:01:14  iter: 5539  total_loss: 0.629  loss_cls: 0.2257  loss_box_reg: 0.406    time: 0.1616  last_time: 0.1730  data_time: 0.0470  last_data_time: 0.0557   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:26] d2.utils.events INFO:  eta: 0:01:10  iter: 5559  total_loss: 0.6552  loss_cls: 0.2321  loss_box_reg: 0.4256    time: 0.1616  last_time: 0.1690  data_time: 0.0469  last_data_time: 0.0505   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:29] d2.utils.events INFO:  eta: 0:01:07  iter: 5579  total_loss: 0.633  loss_cls: 0.2254  loss_box_reg: 0.4053    time: 0.1616  last_time: 0.1650  data_time: 0.0455  last_data_time: 0.0460   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:32] d2.utils.events INFO:  eta: 0:01:04  iter: 5599  total_loss: 0.6083  loss_cls: 0.2197  loss_box_reg: 0.3884    time: 0.1616  last_time: 0.1702  data_time: 0.0456  last_data_time: 0.0476   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:36] d2.utils.events INFO:  eta: 0:01:01  iter: 5619  total_loss: 0.6561  loss_cls: 0.2329  loss_box_reg: 0.4233    time: 0.1616  last_time: 0.1684  data_time: 0.0475  last_data_time: 0.0531   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:39] d2.utils.events INFO:  eta: 0:00:57  iter: 5639  total_loss: 0.6196  loss_cls: 0.2165  loss_box_reg: 0.3969    time: 0.1616  last_time: 0.1634  data_time: 0.0443  last_data_time: 0.0473   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:42] d2.utils.events INFO:  eta: 0:00:54  iter: 5659  total_loss: 0.6305  loss_cls: 0.2278  loss_box_reg: 0.4055    time: 0.1616  last_time: 0.1634  data_time: 0.0462  last_data_time: 0.0490   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:45] d2.utils.events INFO:  eta: 0:00:51  iter: 5679  total_loss: 0.5929  loss_cls: 0.21  loss_box_reg: 0.382    time: 0.1616  last_time: 0.1801  data_time: 0.0447  last_data_time: 0.0538   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:49] d2.utils.events INFO:  eta: 0:00:48  iter: 5699  total_loss: 0.6246  loss_cls: 0.2251  loss_box_reg: 0.4003    time: 0.1616  last_time: 0.1540  data_time: 0.0481  last_data_time: 0.0325   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:52] d2.utils.events INFO:  eta: 0:00:45  iter: 5719  total_loss: 0.6196  loss_cls: 0.2196  loss_box_reg: 0.3955    time: 0.1616  last_time: 0.1506  data_time: 0.0469  last_data_time: 0.0361   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:55] d2.utils.events INFO:  eta: 0:00:41  iter: 5739  total_loss: 0.6584  loss_cls: 0.2318  loss_box_reg: 0.4272    time: 0.1616  last_time: 0.1517  data_time: 0.0447  last_data_time: 0.0372   lr: 0.0013271  max_mem: 1161M
[12/27 13:37:58] d2.utils.events INFO:  eta: 0:00:38  iter: 5759  total_loss: 0.6181  loss_cls: 0.2234  loss_box_reg: 0.3957    time: 0.1616  last_time: 0.1585  data_time: 0.0467  last_data_time: 0.0439   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:02] d2.utils.events INFO:  eta: 0:00:35  iter: 5779  total_loss: 0.6149  loss_cls: 0.2176  loss_box_reg: 0.3965    time: 0.1616  last_time: 0.1525  data_time: 0.0454  last_data_time: 0.0378   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:05] d2.utils.events INFO:  eta: 0:00:32  iter: 5799  total_loss: 0.5956  loss_cls: 0.2147  loss_box_reg: 0.3856    time: 0.1616  last_time: 0.1606  data_time: 0.0446  last_data_time: 0.0485   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:08] d2.utils.events INFO:  eta: 0:00:28  iter: 5819  total_loss: 0.602  loss_cls: 0.2141  loss_box_reg: 0.3879    time: 0.1616  last_time: 0.1707  data_time: 0.0457  last_data_time: 0.0543   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:11] d2.utils.events INFO:  eta: 0:00:25  iter: 5839  total_loss: 0.6226  loss_cls: 0.2259  loss_box_reg: 0.3992    time: 0.1616  last_time: 0.1556  data_time: 0.0449  last_data_time: 0.0398   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:14] d2.utils.events INFO:  eta: 0:00:22  iter: 5859  total_loss: 0.6232  loss_cls: 0.2266  loss_box_reg: 0.396    time: 0.1616  last_time: 0.1537  data_time: 0.0452  last_data_time: 0.0426   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:18] d2.utils.events INFO:  eta: 0:00:19  iter: 5879  total_loss: 0.6121  loss_cls: 0.2167  loss_box_reg: 0.3915    time: 0.1616  last_time: 0.1704  data_time: 0.0472  last_data_time: 0.0537   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:21] d2.utils.events INFO:  eta: 0:00:16  iter: 5899  total_loss: 0.6007  loss_cls: 0.2166  loss_box_reg: 0.3843    time: 0.1616  last_time: 0.1763  data_time: 0.0451  last_data_time: 0.0578   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:24] d2.utils.events INFO:  eta: 0:00:12  iter: 5919  total_loss: 0.6371  loss_cls: 0.2312  loss_box_reg: 0.4086    time: 0.1615  last_time: 0.1681  data_time: 0.0438  last_data_time: 0.0499   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:27] d2.utils.events INFO:  eta: 0:00:09  iter: 5939  total_loss: 0.6017  loss_cls: 0.2153  loss_box_reg: 0.3869    time: 0.1615  last_time: 0.1778  data_time: 0.0451  last_data_time: 0.0484   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:31] d2.utils.events INFO:  eta: 0:00:06  iter: 5959  total_loss: 0.6068  loss_cls: 0.2173  loss_box_reg: 0.3892    time: 0.1615  last_time: 0.1627  data_time: 0.0448  last_data_time: 0.0484   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:34] d2.utils.events INFO:  eta: 0:00:03  iter: 5979  total_loss: 0.6505  loss_cls: 0.2264  loss_box_reg: 0.4208    time: 0.1616  last_time: 0.1542  data_time: 0.0482  last_data_time: 0.0417   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:37] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/model_0005999.pth
[12/27 13:38:37] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_retinanet_fullres/model_final.pth
[12/27 13:38:38] d2.utils.events INFO:  eta: 0:00:00  iter: 5999  total_loss: 0.6069  loss_cls: 0.2113  loss_box_reg: 0.3947    time: 0.1616  last_time: 0.1531  data_time: 0.0470  last_data_time: 0.0390   lr: 0.0013271  max_mem: 1161M
[12/27 13:38:38] d2.engine.hooks INFO: Overall training speed: 5998 iterations in 0:16:09 (0.1616 s / it)
[12/27 13:38:38] d2.engine.hooks INFO: Total training time: 0:18:53 (0:02:44 on hooks)
[12/27 13:38:38] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/27 13:38:38] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/27 13:38:38] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/27 13:38:38] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/27 13:38:38] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/27 13:38:39] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0009 s/iter. Inference: 0.0346 s/iter. Eval: 0.0374 s/iter. Total: 0.0728 s/iter. ETA=0:00:25
[12/27 13:38:44] d2.evaluation.evaluator INFO: Inference done 82/363. Dataloading: 0.0011 s/iter. Inference: 0.0353 s/iter. Eval: 0.0347 s/iter. Total: 0.0712 s/iter. ETA=0:00:20
[12/27 13:38:49] d2.evaluation.evaluator INFO: Inference done 154/363. Dataloading: 0.0012 s/iter. Inference: 0.0348 s/iter. Eval: 0.0348 s/iter. Total: 0.0708 s/iter. ETA=0:00:14
[12/27 13:38:54] d2.evaluation.evaluator INFO: Inference done 227/363. Dataloading: 0.0012 s/iter. Inference: 0.0345 s/iter. Eval: 0.0345 s/iter. Total: 0.0702 s/iter. ETA=0:00:09
[12/27 13:38:59] d2.evaluation.evaluator INFO: Inference done 299/363. Dataloading: 0.0012 s/iter. Inference: 0.0343 s/iter. Eval: 0.0345 s/iter. Total: 0.0701 s/iter. ETA=0:00:04
[12/27 13:39:04] d2.evaluation.evaluator INFO: Total inference time: 0:00:25.169293 (0.070305 s / iter per device, on 1 devices)
[12/27 13:39:04] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:12 (0.034306 s / iter per device, on 1 devices)
[12/27 13:39:04] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/27 13:39:17] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/27 13:39:17] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/27 13:39:17] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/27 13:39:17] d2.evaluation.testing INFO: copypaste: 0.9646,3.8319,0.3447,1.0758,0.6425,15.1537,9.0509,42.9245,25.6376
[12/27 13:39:17] d2.evaluation.testing INFO: Results verification passed.
