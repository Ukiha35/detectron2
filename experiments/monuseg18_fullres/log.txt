[12/30 17:26:57] detectron2 INFO: Rank of current process: 0. World size: 1
[12/30 17:26:58] detectron2 INFO: Environment info:
-------------------------------  ------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/home/ps/ltc/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.7
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.1+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 2080 Ti (arch=7.5)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-11.7
Pillow                           10.4.0
torchvision                      0.15.2+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[12/30 17:26:58] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/faster_rcnn_X_101_FPN_train.yaml', resume=True, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[], GPU='3')
[12/30 17:26:58] detectron2 INFO: Contents of args.config_file=/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/faster_rcnn_X_101_FPN_train.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m47.49[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m41.63[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m51.28[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m[38;5;15m  [39m[38;5;245m# this is a C2 model[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m16[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m24[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m32[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m48[39m[38;5;15m][39m[38;5;15m][39m[38;5;15m  [39m[38;5;245m# One size for each in feature map[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m0.5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1.0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m2.0[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mp2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,240,230,220)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_trainval',)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_val',)[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(1500,2000,2500)[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáË°∞ÂáèÁÇπË∞ÉÊï¥Âà∞ÂéüÊù•ÁöÑ 2 ÂÄç[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m[38;5;15m  [39m[38;5;245m# ÁøªÂÄçÔºå‰øùËØÅÊÄªËÆ≠ÁªÉÈáè‰∏ÄËá¥[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m[38;5;15m  [39m[38;5;245m# ÂèØÈÄÇÂΩìÂ¢ûÂä†ÔºåÈÅøÂÖçËøáÂ§ßÁöÑÂàùÂßãÊ≥¢Âä®[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m[38;5;15m  [39m[38;5;245m# Âçï GPU ËÆ≠ÁªÉÔºåbatch size ÂáèÂçä[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáÂáèÂçäÔºåÈÄÇÈÖç batch size[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mbbox[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mAP[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/ps/ltc/detectron2/experiments/monuseg18_fullres/[39m[38;5;186m"[39m[38;5;15m [39m[38;5;245m#######################[39m

[12/30 17:26:58] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCLUSTER_PARAMETER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mADJUST_PARAMETER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;204mTARGET_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mBORDER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mCANVAS_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mEXPAND[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNMM_THR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mSCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSTEP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100.0[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_trainval[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m240[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m230[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m220[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m47.49[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m41.63[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m51.28[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFastRCNNConvFCHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/ltc/detectron2/experiments/monuseg18_fullres/[39m
[38;5;204mSAVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./results[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mbbox[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mAP[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[12/30 17:26:58] detectron2 INFO: Full config saved to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/config.yaml
[12/30 17:26:58] d2.utils.env INFO: Using a generated random seed 60873429
[12/30 17:27:00] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
  )
)
[12/30 17:27:01] d2.data.build INFO: Removed 0 images with no usable annotations. 1813 images left.
[12/30 17:27:01] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 74656        |
|            |              |[0m
[12/30 17:27:01] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(250, 240, 230, 220), max_size=250, sample_style='choice'), RandomFlip()]
[12/30 17:27:01] d2.data.build INFO: Using training sampler TrainingSampler
[12/30 17:27:01] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/30 17:27:01] d2.data.common INFO: Serializing 1813 elements to byte tensors and concatenating them all ...
[12/30 17:27:01] d2.data.common INFO: Serialized dataset takes 4.70 MiB
[12/30 17:27:01] d2.data.build INFO: Making batched data loader with batch_size=16
[12/30 17:27:01] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl ...
[12/30 17:27:01] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/.torch/iopath_cache/detectron2/ImageNetPretrained/FAIR/X-101-32x8d.pkl ...
[12/30 17:27:02] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[12/30 17:27:02] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up - Total num: 105
[12/30 17:27:02] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral2.{bias, weight}[0m
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output2.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_head.fc1.{bias, weight}[0m
[34mroi_heads.box_head.fc2.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[12/30 17:27:02] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mlinear.{bias, weight}[0m
[12/30 17:27:02] d2.engine.train_loop INFO: Starting training from iteration 0
[12/30 17:27:13] d2.utils.events INFO:  eta: 0:26:15  iter: 19  total_loss: 1.553  loss_cls: 0.4755  loss_box_reg: 0.2329  loss_rpn_cls: 0.6929  loss_rpn_loc: 0.1437    time: 0.5275  last_time: 0.5286  data_time: 0.0522  last_data_time: 0.0504   lr: 0.00028772  max_mem: 4078M
[12/30 17:27:24] d2.utils.events INFO:  eta: 0:25:56  iter: 39  total_loss: 1.427  loss_cls: 0.404  loss_box_reg: 0.3519  loss_rpn_cls: 0.569  loss_rpn_loc: 0.1087    time: 0.5264  last_time: 0.5256  data_time: 0.0405  last_data_time: 0.0374   lr: 0.00058741  max_mem: 4078M
[12/30 17:27:35] d2.utils.events INFO:  eta: 0:25:54  iter: 59  total_loss: 1.232  loss_cls: 0.3069  loss_box_reg: 0.359  loss_rpn_cls: 0.465  loss_rpn_loc: 0.1089    time: 0.5283  last_time: 0.5355  data_time: 0.0430  last_data_time: 0.0500   lr: 0.00088711  max_mem: 4078M
[12/30 17:27:45] d2.utils.events INFO:  eta: 0:25:46  iter: 79  total_loss: 1.242  loss_cls: 0.2584  loss_box_reg: 0.4452  loss_rpn_cls: 0.4089  loss_rpn_loc: 0.1142    time: 0.5314  last_time: 0.5277  data_time: 0.0451  last_data_time: 0.0414   lr: 0.0011868  max_mem: 4078M
[12/30 17:27:56] d2.utils.events INFO:  eta: 0:25:41  iter: 99  total_loss: 1.289  loss_cls: 0.2767  loss_box_reg: 0.5174  loss_rpn_cls: 0.3466  loss_rpn_loc: 0.1082    time: 0.5329  last_time: 0.5417  data_time: 0.0484  last_data_time: 0.0504   lr: 0.0014865  max_mem: 4078M
[12/30 17:28:07] d2.utils.events INFO:  eta: 0:25:30  iter: 119  total_loss: 1.256  loss_cls: 0.2908  loss_box_reg: 0.5564  loss_rpn_cls: 0.293  loss_rpn_loc: 0.09821    time: 0.5327  last_time: 0.5378  data_time: 0.0415  last_data_time: 0.0488   lr: 0.0017862  max_mem: 4078M
[12/30 17:28:18] d2.utils.events INFO:  eta: 0:25:22  iter: 139  total_loss: 1.248  loss_cls: 0.3132  loss_box_reg: 0.6014  loss_rpn_cls: 0.2508  loss_rpn_loc: 0.09923    time: 0.5333  last_time: 0.5473  data_time: 0.0454  last_data_time: 0.0589   lr: 0.0020859  max_mem: 4078M
[12/30 17:28:28] d2.utils.events INFO:  eta: 0:25:14  iter: 159  total_loss: 1.276  loss_cls: 0.3375  loss_box_reg: 0.6338  loss_rpn_cls: 0.2084  loss_rpn_loc: 0.08991    time: 0.5340  last_time: 0.5355  data_time: 0.0443  last_data_time: 0.0466   lr: 0.0023856  max_mem: 4078M
[12/30 17:28:39] d2.utils.events INFO:  eta: 0:25:04  iter: 179  total_loss: 1.276  loss_cls: 0.3665  loss_box_reg: 0.643  loss_rpn_cls: 0.1798  loss_rpn_loc: 0.08269    time: 0.5345  last_time: 0.5377  data_time: 0.0435  last_data_time: 0.0453   lr: 0.0026853  max_mem: 4078M
[12/30 17:28:50] d2.utils.events INFO:  eta: 0:24:54  iter: 199  total_loss: 1.247  loss_cls: 0.3713  loss_box_reg: 0.6433  loss_rpn_cls: 0.1579  loss_rpn_loc: 0.08149    time: 0.5346  last_time: 0.5406  data_time: 0.0415  last_data_time: 0.0458   lr: 0.002985  max_mem: 4078M
[12/30 17:29:01] d2.utils.events INFO:  eta: 0:24:44  iter: 219  total_loss: 1.246  loss_cls: 0.3773  loss_box_reg: 0.6367  loss_rpn_cls: 0.1439  loss_rpn_loc: 0.08777    time: 0.5348  last_time: 0.5391  data_time: 0.0445  last_data_time: 0.0465   lr: 0.003  max_mem: 4078M
[12/30 17:29:11] d2.utils.events INFO:  eta: 0:24:37  iter: 239  total_loss: 1.222  loss_cls: 0.3739  loss_box_reg: 0.619  loss_rpn_cls: 0.1363  loss_rpn_loc: 0.08612    time: 0.5352  last_time: 0.5394  data_time: 0.0465  last_data_time: 0.0515   lr: 0.003  max_mem: 4078M
[12/30 17:29:22] d2.utils.events INFO:  eta: 0:24:27  iter: 259  total_loss: 1.176  loss_cls: 0.3695  loss_box_reg: 0.6064  loss_rpn_cls: 0.1181  loss_rpn_loc: 0.08118    time: 0.5354  last_time: 0.5488  data_time: 0.0464  last_data_time: 0.0562   lr: 0.003  max_mem: 4078M
[12/30 17:29:33] d2.utils.events INFO:  eta: 0:24:17  iter: 279  total_loss: 1.172  loss_cls: 0.3733  loss_box_reg: 0.607  loss_rpn_cls: 0.1203  loss_rpn_loc: 0.08274    time: 0.5356  last_time: 0.5445  data_time: 0.0462  last_data_time: 0.0481   lr: 0.003  max_mem: 4078M
[12/30 17:29:44] d2.utils.events INFO:  eta: 0:24:06  iter: 299  total_loss: 1.163  loss_cls: 0.3604  loss_box_reg: 0.6045  loss_rpn_cls: 0.1198  loss_rpn_loc: 0.08292    time: 0.5358  last_time: 0.5335  data_time: 0.0467  last_data_time: 0.0458   lr: 0.003  max_mem: 4078M
[12/30 17:29:55] d2.utils.events INFO:  eta: 0:23:56  iter: 319  total_loss: 1.153  loss_cls: 0.3605  loss_box_reg: 0.6021  loss_rpn_cls: 0.1099  loss_rpn_loc: 0.07829    time: 0.5360  last_time: 0.5374  data_time: 0.0454  last_data_time: 0.0403   lr: 0.003  max_mem: 4078M
[12/30 17:30:05] d2.utils.events INFO:  eta: 0:23:45  iter: 339  total_loss: 1.132  loss_cls: 0.3526  loss_box_reg: 0.5921  loss_rpn_cls: 0.1063  loss_rpn_loc: 0.07192    time: 0.5359  last_time: 0.5456  data_time: 0.0437  last_data_time: 0.0556   lr: 0.003  max_mem: 4078M
[12/30 17:30:16] d2.utils.events INFO:  eta: 0:23:35  iter: 359  total_loss: 1.125  loss_cls: 0.3568  loss_box_reg: 0.5894  loss_rpn_cls: 0.1063  loss_rpn_loc: 0.07974    time: 0.5363  last_time: 0.5353  data_time: 0.0441  last_data_time: 0.0420   lr: 0.003  max_mem: 4078M
[12/30 17:30:27] d2.utils.events INFO:  eta: 0:23:24  iter: 379  total_loss: 1.097  loss_cls: 0.3557  loss_box_reg: 0.5722  loss_rpn_cls: 0.1019  loss_rpn_loc: 0.07943    time: 0.5364  last_time: 0.5286  data_time: 0.0457  last_data_time: 0.0359   lr: 0.003  max_mem: 4078M
[12/30 17:30:38] d2.utils.events INFO:  eta: 0:23:13  iter: 399  total_loss: 1.118  loss_cls: 0.3489  loss_box_reg: 0.587  loss_rpn_cls: 0.1008  loss_rpn_loc: 0.07558    time: 0.5365  last_time: 0.5340  data_time: 0.0417  last_data_time: 0.0397   lr: 0.003  max_mem: 4078M
[12/30 17:30:48] d2.utils.events INFO:  eta: 0:23:03  iter: 419  total_loss: 1.089  loss_cls: 0.351  loss_box_reg: 0.5785  loss_rpn_cls: 0.09035  loss_rpn_loc: 0.06452    time: 0.5365  last_time: 0.5564  data_time: 0.0457  last_data_time: 0.0654   lr: 0.003  max_mem: 4078M
[12/30 17:30:59] d2.utils.events INFO:  eta: 0:22:52  iter: 439  total_loss: 1.079  loss_cls: 0.3468  loss_box_reg: 0.5756  loss_rpn_cls: 0.09526  loss_rpn_loc: 0.07291    time: 0.5366  last_time: 0.5366  data_time: 0.0469  last_data_time: 0.0482   lr: 0.003  max_mem: 4078M
[12/30 17:31:10] d2.utils.events INFO:  eta: 0:22:41  iter: 459  total_loss: 1.06  loss_cls: 0.3384  loss_box_reg: 0.5665  loss_rpn_cls: 0.09372  loss_rpn_loc: 0.06635    time: 0.5366  last_time: 0.5383  data_time: 0.0464  last_data_time: 0.0461   lr: 0.003  max_mem: 4078M
[12/30 17:31:21] d2.utils.events INFO:  eta: 0:22:31  iter: 479  total_loss: 1.096  loss_cls: 0.3489  loss_box_reg: 0.5707  loss_rpn_cls: 0.09496  loss_rpn_loc: 0.07114    time: 0.5367  last_time: 0.5291  data_time: 0.0454  last_data_time: 0.0342   lr: 0.003  max_mem: 4078M
[12/30 17:31:31] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_0000499.pth
[12/30 17:31:33] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 15059        |
|            |              |[0m
[12/30 17:31:33] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/30 17:31:33] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/30 17:31:33] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/30 17:31:33] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/30 17:31:33] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/30 17:31:34] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0007 s/iter. Inference: 0.0827 s/iter. Eval: 0.0358 s/iter. Total: 0.1193 s/iter. ETA=0:00:41
[12/30 17:31:39] d2.evaluation.evaluator INFO: Inference done 53/363. Dataloading: 0.0012 s/iter. Inference: 0.0834 s/iter. Eval: 0.0359 s/iter. Total: 0.1205 s/iter. ETA=0:00:37
[12/30 17:31:44] d2.evaluation.evaluator INFO: Inference done 95/363. Dataloading: 0.0013 s/iter. Inference: 0.0834 s/iter. Eval: 0.0365 s/iter. Total: 0.1212 s/iter. ETA=0:00:32
[12/30 17:31:49] d2.evaluation.evaluator INFO: Inference done 136/363. Dataloading: 0.0013 s/iter. Inference: 0.0834 s/iter. Eval: 0.0367 s/iter. Total: 0.1215 s/iter. ETA=0:00:27
[12/30 17:31:55] d2.evaluation.evaluator INFO: Inference done 178/363. Dataloading: 0.0012 s/iter. Inference: 0.0834 s/iter. Eval: 0.0367 s/iter. Total: 0.1214 s/iter. ETA=0:00:22
[12/30 17:32:00] d2.evaluation.evaluator INFO: Inference done 220/363. Dataloading: 0.0012 s/iter. Inference: 0.0835 s/iter. Eval: 0.0367 s/iter. Total: 0.1214 s/iter. ETA=0:00:17
[12/30 17:32:05] d2.evaluation.evaluator INFO: Inference done 262/363. Dataloading: 0.0012 s/iter. Inference: 0.0836 s/iter. Eval: 0.0367 s/iter. Total: 0.1215 s/iter. ETA=0:00:12
[12/30 17:32:10] d2.evaluation.evaluator INFO: Inference done 303/363. Dataloading: 0.0012 s/iter. Inference: 0.0837 s/iter. Eval: 0.0367 s/iter. Total: 0.1217 s/iter. ETA=0:00:07
[12/30 17:32:15] d2.evaluation.evaluator INFO: Inference done 345/363. Dataloading: 0.0012 s/iter. Inference: 0.0837 s/iter. Eval: 0.0366 s/iter. Total: 0.1216 s/iter. ETA=0:00:02
[12/30 17:32:17] d2.evaluation.evaluator INFO: Total inference time: 0:00:43.579961 (0.121732 s / iter per device, on 1 devices)
[12/30 17:32:17] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:29 (0.083682 s / iter per device, on 1 devices)
[12/30 17:32:17] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/30 17:32:20] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/30 17:32:20] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/30 17:32:20] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/30 17:32:20] d2.evaluation.testing INFO: copypaste: 3.8840,9.0909,4.5455,0.6441,2.3128,4.8542,17.4297,12.1190,43.5145
[12/30 17:32:20] d2.utils.events INFO:  eta: 0:22:20  iter: 499  total_loss: 1.084  loss_cls: 0.344  loss_box_reg: 0.5729  loss_rpn_cls: 0.09361  loss_rpn_loc: 0.07928    time: 0.5367  last_time: 0.5259  data_time: 0.0410  last_data_time: 0.0328   lr: 0.003  max_mem: 4078M
[12/30 17:32:30] d2.utils.events INFO:  eta: 0:22:09  iter: 519  total_loss: 1.064  loss_cls: 0.3366  loss_box_reg: 0.5673  loss_rpn_cls: 0.09338  loss_rpn_loc: 0.07326    time: 0.5367  last_time: 0.5202  data_time: 0.0459  last_data_time: 0.0363   lr: 0.003  max_mem: 4078M
[12/30 17:32:41] d2.utils.events INFO:  eta: 0:21:58  iter: 539  total_loss: 1.054  loss_cls: 0.3412  loss_box_reg: 0.5547  loss_rpn_cls: 0.08691  loss_rpn_loc: 0.06976    time: 0.5367  last_time: 0.5382  data_time: 0.0456  last_data_time: 0.0339   lr: 0.003  max_mem: 4078M
[12/30 17:32:52] d2.utils.events INFO:  eta: 0:21:48  iter: 559  total_loss: 1.052  loss_cls: 0.34  loss_box_reg: 0.5645  loss_rpn_cls: 0.08839  loss_rpn_loc: 0.07143    time: 0.5367  last_time: 0.5390  data_time: 0.0454  last_data_time: 0.0344   lr: 0.003  max_mem: 4078M
[12/30 17:33:03] d2.utils.events INFO:  eta: 0:21:37  iter: 579  total_loss: 1.028  loss_cls: 0.3288  loss_box_reg: 0.5594  loss_rpn_cls: 0.0816  loss_rpn_loc: 0.06181    time: 0.5367  last_time: 0.5241  data_time: 0.0438  last_data_time: 0.0416   lr: 0.003  max_mem: 4078M
[12/30 17:33:13] d2.utils.events INFO:  eta: 0:21:26  iter: 599  total_loss: 1.046  loss_cls: 0.3362  loss_box_reg: 0.554  loss_rpn_cls: 0.0807  loss_rpn_loc: 0.0675    time: 0.5366  last_time: 0.5521  data_time: 0.0465  last_data_time: 0.0576   lr: 0.003  max_mem: 4078M
[12/30 17:33:24] d2.utils.events INFO:  eta: 0:21:15  iter: 619  total_loss: 1.05  loss_cls: 0.3373  loss_box_reg: 0.5563  loss_rpn_cls: 0.08891  loss_rpn_loc: 0.07512    time: 0.5366  last_time: 0.5381  data_time: 0.0439  last_data_time: 0.0466   lr: 0.003  max_mem: 4078M
[12/30 17:33:35] d2.utils.events INFO:  eta: 0:21:05  iter: 639  total_loss: 1.059  loss_cls: 0.3453  loss_box_reg: 0.5473  loss_rpn_cls: 0.08817  loss_rpn_loc: 0.0755    time: 0.5368  last_time: 0.5403  data_time: 0.0486  last_data_time: 0.0459   lr: 0.003  max_mem: 4078M
[12/30 17:33:46] d2.utils.events INFO:  eta: 0:20:54  iter: 659  total_loss: 1.005  loss_cls: 0.3282  loss_box_reg: 0.5463  loss_rpn_cls: 0.08214  loss_rpn_loc: 0.0665    time: 0.5368  last_time: 0.5320  data_time: 0.0441  last_data_time: 0.0347   lr: 0.003  max_mem: 4078M
[12/30 17:33:56] d2.utils.events INFO:  eta: 0:20:44  iter: 679  total_loss: 1.035  loss_cls: 0.3297  loss_box_reg: 0.5476  loss_rpn_cls: 0.08507  loss_rpn_loc: 0.07331    time: 0.5367  last_time: 0.5410  data_time: 0.0446  last_data_time: 0.0509   lr: 0.003  max_mem: 4078M
[12/30 17:34:07] d2.utils.events INFO:  eta: 0:20:33  iter: 699  total_loss: 1.004  loss_cls: 0.3284  loss_box_reg: 0.5356  loss_rpn_cls: 0.0783  loss_rpn_loc: 0.07096    time: 0.5367  last_time: 0.5414  data_time: 0.0438  last_data_time: 0.0546   lr: 0.003  max_mem: 4078M
[12/30 17:34:18] d2.utils.events INFO:  eta: 0:20:22  iter: 719  total_loss: 1.021  loss_cls: 0.3357  loss_box_reg: 0.5424  loss_rpn_cls: 0.08068  loss_rpn_loc: 0.06921    time: 0.5366  last_time: 0.5242  data_time: 0.0430  last_data_time: 0.0342   lr: 0.003  max_mem: 4078M
[12/30 17:34:28] d2.utils.events INFO:  eta: 0:20:11  iter: 739  total_loss: 1.011  loss_cls: 0.332  loss_box_reg: 0.5352  loss_rpn_cls: 0.07797  loss_rpn_loc: 0.06924    time: 0.5366  last_time: 0.5424  data_time: 0.0449  last_data_time: 0.0546   lr: 0.003  max_mem: 4078M
[12/30 17:34:39] d2.utils.events INFO:  eta: 0:20:00  iter: 759  total_loss: 1.014  loss_cls: 0.3277  loss_box_reg: 0.5386  loss_rpn_cls: 0.07679  loss_rpn_loc: 0.06717    time: 0.5366  last_time: 0.5465  data_time: 0.0459  last_data_time: 0.0572   lr: 0.003  max_mem: 4078M
[12/30 17:34:50] d2.utils.events INFO:  eta: 0:19:50  iter: 779  total_loss: 1.013  loss_cls: 0.3265  loss_box_reg: 0.537  loss_rpn_cls: 0.08077  loss_rpn_loc: 0.06626    time: 0.5366  last_time: 0.5352  data_time: 0.0458  last_data_time: 0.0468   lr: 0.003  max_mem: 4078M
[12/30 17:35:01] d2.utils.events INFO:  eta: 0:19:39  iter: 799  total_loss: 1.006  loss_cls: 0.3222  loss_box_reg: 0.5401  loss_rpn_cls: 0.07543  loss_rpn_loc: 0.0587    time: 0.5365  last_time: 0.5290  data_time: 0.0429  last_data_time: 0.0372   lr: 0.003  max_mem: 4078M
[12/30 17:35:11] d2.utils.events INFO:  eta: 0:19:28  iter: 819  total_loss: 0.9987  loss_cls: 0.3229  loss_box_reg: 0.5371  loss_rpn_cls: 0.0746  loss_rpn_loc: 0.06325    time: 0.5364  last_time: 0.5305  data_time: 0.0447  last_data_time: 0.0340   lr: 0.003  max_mem: 4078M
[12/30 17:35:22] d2.utils.events INFO:  eta: 0:19:17  iter: 839  total_loss: 1.005  loss_cls: 0.3277  loss_box_reg: 0.5327  loss_rpn_cls: 0.0747  loss_rpn_loc: 0.07049    time: 0.5364  last_time: 0.5271  data_time: 0.0445  last_data_time: 0.0320   lr: 0.003  max_mem: 4078M
[12/30 17:35:33] d2.utils.events INFO:  eta: 0:19:06  iter: 859  total_loss: 0.9963  loss_cls: 0.3168  loss_box_reg: 0.5312  loss_rpn_cls: 0.07518  loss_rpn_loc: 0.0715    time: 0.5364  last_time: 0.5310  data_time: 0.0458  last_data_time: 0.0412   lr: 0.003  max_mem: 4078M
[12/30 17:35:44] d2.utils.events INFO:  eta: 0:18:55  iter: 879  total_loss: 0.9998  loss_cls: 0.3218  loss_box_reg: 0.5369  loss_rpn_cls: 0.07512  loss_rpn_loc: 0.06938    time: 0.5364  last_time: 0.5445  data_time: 0.0470  last_data_time: 0.0542   lr: 0.003  max_mem: 4078M
[12/30 17:35:54] d2.utils.events INFO:  eta: 0:18:45  iter: 899  total_loss: 1.004  loss_cls: 0.3206  loss_box_reg: 0.5349  loss_rpn_cls: 0.07273  loss_rpn_loc: 0.06882    time: 0.5363  last_time: 0.5475  data_time: 0.0433  last_data_time: 0.0638   lr: 0.003  max_mem: 4078M
[12/30 17:36:05] d2.utils.events INFO:  eta: 0:18:34  iter: 919  total_loss: 0.9934  loss_cls: 0.3179  loss_box_reg: 0.5261  loss_rpn_cls: 0.07048  loss_rpn_loc: 0.06868    time: 0.5363  last_time: 0.5277  data_time: 0.0458  last_data_time: 0.0335   lr: 0.003  max_mem: 4078M
[12/30 17:36:16] d2.utils.events INFO:  eta: 0:18:23  iter: 939  total_loss: 0.9788  loss_cls: 0.3168  loss_box_reg: 0.525  loss_rpn_cls: 0.07147  loss_rpn_loc: 0.06551    time: 0.5363  last_time: 0.5309  data_time: 0.0442  last_data_time: 0.0374   lr: 0.003  max_mem: 4078M
[12/30 17:36:26] d2.utils.events INFO:  eta: 0:18:12  iter: 959  total_loss: 1.011  loss_cls: 0.328  loss_box_reg: 0.5307  loss_rpn_cls: 0.0765  loss_rpn_loc: 0.07357    time: 0.5363  last_time: 0.5267  data_time: 0.0437  last_data_time: 0.0407   lr: 0.003  max_mem: 4078M
[12/30 17:36:37] d2.utils.events INFO:  eta: 0:18:02  iter: 979  total_loss: 0.9781  loss_cls: 0.3122  loss_box_reg: 0.5187  loss_rpn_cls: 0.07171  loss_rpn_loc: 0.06762    time: 0.5363  last_time: 0.5247  data_time: 0.0453  last_data_time: 0.0405   lr: 0.003  max_mem: 4078M
[12/30 17:36:48] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_0000999.pth
[12/30 17:36:49] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/30 17:36:49] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/30 17:36:49] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/30 17:36:49] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/30 17:36:49] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/30 17:36:51] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0008 s/iter. Inference: 0.0838 s/iter. Eval: 0.0341 s/iter. Total: 0.1187 s/iter. ETA=0:00:41
[12/30 17:36:56] d2.evaluation.evaluator INFO: Inference done 54/363. Dataloading: 0.0011 s/iter. Inference: 0.0836 s/iter. Eval: 0.0324 s/iter. Total: 0.1172 s/iter. ETA=0:00:36
[12/30 17:37:01] d2.evaluation.evaluator INFO: Inference done 97/363. Dataloading: 0.0012 s/iter. Inference: 0.0836 s/iter. Eval: 0.0330 s/iter. Total: 0.1178 s/iter. ETA=0:00:31
[12/30 17:37:06] d2.evaluation.evaluator INFO: Inference done 140/363. Dataloading: 0.0012 s/iter. Inference: 0.0836 s/iter. Eval: 0.0332 s/iter. Total: 0.1180 s/iter. ETA=0:00:26
[12/30 17:37:11] d2.evaluation.evaluator INFO: Inference done 183/363. Dataloading: 0.0011 s/iter. Inference: 0.0835 s/iter. Eval: 0.0333 s/iter. Total: 0.1180 s/iter. ETA=0:00:21
[12/30 17:37:16] d2.evaluation.evaluator INFO: Inference done 225/363. Dataloading: 0.0012 s/iter. Inference: 0.0836 s/iter. Eval: 0.0336 s/iter. Total: 0.1184 s/iter. ETA=0:00:16
[12/30 17:37:21] d2.evaluation.evaluator INFO: Inference done 268/363. Dataloading: 0.0011 s/iter. Inference: 0.0835 s/iter. Eval: 0.0335 s/iter. Total: 0.1182 s/iter. ETA=0:00:11
[12/30 17:37:26] d2.evaluation.evaluator INFO: Inference done 310/363. Dataloading: 0.0011 s/iter. Inference: 0.0836 s/iter. Eval: 0.0336 s/iter. Total: 0.1184 s/iter. ETA=0:00:06
[12/30 17:37:31] d2.evaluation.evaluator INFO: Inference done 353/363. Dataloading: 0.0011 s/iter. Inference: 0.0836 s/iter. Eval: 0.0336 s/iter. Total: 0.1184 s/iter. ETA=0:00:01
[12/30 17:37:32] d2.evaluation.evaluator INFO: Total inference time: 0:00:42.446039 (0.118564 s / iter per device, on 1 devices)
[12/30 17:37:32] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:29 (0.083611 s / iter per device, on 1 devices)
[12/30 17:37:32] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/30 17:37:37] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/30 17:37:37] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/30 17:37:37] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/30 17:37:37] d2.evaluation.testing INFO: copypaste: 4.6974,12.0441,3.0303,3.2140,5.3712,16.9268,28.2876,31.7219,53.0130
[12/30 17:37:37] d2.utils.events INFO:  eta: 0:17:51  iter: 999  total_loss: 0.9774  loss_cls: 0.3161  loss_box_reg: 0.5302  loss_rpn_cls: 0.06863  loss_rpn_loc: 0.06626    time: 0.5363  last_time: 0.5357  data_time: 0.0472  last_data_time: 0.0455   lr: 0.003  max_mem: 4078M
[12/30 17:37:48] d2.utils.events INFO:  eta: 0:17:41  iter: 1019  total_loss: 0.9747  loss_cls: 0.3153  loss_box_reg: 0.5191  loss_rpn_cls: 0.0669  loss_rpn_loc: 0.06071    time: 0.5363  last_time: 0.5416  data_time: 0.0459  last_data_time: 0.0440   lr: 0.003  max_mem: 4078M
[12/30 17:37:58] d2.utils.events INFO:  eta: 0:17:30  iter: 1039  total_loss: 0.9557  loss_cls: 0.3092  loss_box_reg: 0.519  loss_rpn_cls: 0.06734  loss_rpn_loc: 0.06041    time: 0.5363  last_time: 0.5302  data_time: 0.0448  last_data_time: 0.0445   lr: 0.003  max_mem: 4078M
[12/30 17:38:09] d2.utils.events INFO:  eta: 0:17:20  iter: 1059  total_loss: 0.9775  loss_cls: 0.3113  loss_box_reg: 0.5256  loss_rpn_cls: 0.07388  loss_rpn_loc: 0.07644    time: 0.5362  last_time: 0.5298  data_time: 0.0448  last_data_time: 0.0454   lr: 0.003  max_mem: 4078M
[12/30 17:38:20] d2.utils.events INFO:  eta: 0:17:08  iter: 1079  total_loss: 0.9577  loss_cls: 0.3097  loss_box_reg: 0.5159  loss_rpn_cls: 0.06424  loss_rpn_loc: 0.05999    time: 0.5362  last_time: 0.5388  data_time: 0.0438  last_data_time: 0.0493   lr: 0.003  max_mem: 4078M
[12/30 17:38:30] d2.utils.events INFO:  eta: 0:16:58  iter: 1099  total_loss: 0.9602  loss_cls: 0.3151  loss_box_reg: 0.5131  loss_rpn_cls: 0.06609  loss_rpn_loc: 0.06628    time: 0.5362  last_time: 0.5290  data_time: 0.0457  last_data_time: 0.0412   lr: 0.003  max_mem: 4078M
[12/30 17:38:41] d2.utils.events INFO:  eta: 0:16:47  iter: 1119  total_loss: 0.9435  loss_cls: 0.308  loss_box_reg: 0.5193  loss_rpn_cls: 0.06232  loss_rpn_loc: 0.06336    time: 0.5361  last_time: 0.5273  data_time: 0.0443  last_data_time: 0.0399   lr: 0.003  max_mem: 4078M
[12/30 17:38:52] d2.utils.events INFO:  eta: 0:16:36  iter: 1139  total_loss: 0.9909  loss_cls: 0.3204  loss_box_reg: 0.524  loss_rpn_cls: 0.06903  loss_rpn_loc: 0.07459    time: 0.5361  last_time: 0.5231  data_time: 0.0405  last_data_time: 0.0303   lr: 0.003  max_mem: 4078M
[12/30 17:39:03] d2.utils.events INFO:  eta: 0:16:26  iter: 1159  total_loss: 0.9422  loss_cls: 0.3047  loss_box_reg: 0.5141  loss_rpn_cls: 0.06404  loss_rpn_loc: 0.05984    time: 0.5361  last_time: 0.5386  data_time: 0.0444  last_data_time: 0.0442   lr: 0.003  max_mem: 4078M
[12/30 17:39:13] d2.utils.events INFO:  eta: 0:16:15  iter: 1179  total_loss: 0.96  loss_cls: 0.311  loss_box_reg: 0.5132  loss_rpn_cls: 0.06652  loss_rpn_loc: 0.06898    time: 0.5361  last_time: 0.5425  data_time: 0.0461  last_data_time: 0.0542   lr: 0.003  max_mem: 4078M
[12/30 17:39:24] d2.utils.events INFO:  eta: 0:16:04  iter: 1199  total_loss: 0.9582  loss_cls: 0.3172  loss_box_reg: 0.5149  loss_rpn_cls: 0.06719  loss_rpn_loc: 0.06399    time: 0.5361  last_time: 0.5287  data_time: 0.0454  last_data_time: 0.0410   lr: 0.003  max_mem: 4078M
[12/30 17:39:35] d2.utils.events INFO:  eta: 0:15:53  iter: 1219  total_loss: 0.9597  loss_cls: 0.3044  loss_box_reg: 0.5181  loss_rpn_cls: 0.06396  loss_rpn_loc: 0.06342    time: 0.5361  last_time: 0.5417  data_time: 0.0448  last_data_time: 0.0536   lr: 0.003  max_mem: 4078M
[12/30 17:39:46] d2.utils.events INFO:  eta: 0:15:42  iter: 1239  total_loss: 0.96  loss_cls: 0.3113  loss_box_reg: 0.5121  loss_rpn_cls: 0.06661  loss_rpn_loc: 0.0685    time: 0.5361  last_time: 0.5329  data_time: 0.0469  last_data_time: 0.0422   lr: 0.003  max_mem: 4078M
[12/30 17:39:56] d2.utils.events INFO:  eta: 0:15:31  iter: 1259  total_loss: 0.956  loss_cls: 0.3103  loss_box_reg: 0.521  loss_rpn_cls: 0.06137  loss_rpn_loc: 0.06211    time: 0.5361  last_time: 0.5391  data_time: 0.0470  last_data_time: 0.0521   lr: 0.003  max_mem: 4078M
[12/30 17:40:07] d2.utils.events INFO:  eta: 0:15:21  iter: 1279  total_loss: 0.9654  loss_cls: 0.3111  loss_box_reg: 0.5189  loss_rpn_cls: 0.06393  loss_rpn_loc: 0.07018    time: 0.5362  last_time: 0.5303  data_time: 0.0464  last_data_time: 0.0320   lr: 0.003  max_mem: 4078M
[12/30 17:40:18] d2.utils.events INFO:  eta: 0:15:10  iter: 1299  total_loss: 0.9449  loss_cls: 0.302  loss_box_reg: 0.5012  loss_rpn_cls: 0.06234  loss_rpn_loc: 0.05776    time: 0.5362  last_time: 0.5223  data_time: 0.0436  last_data_time: 0.0359   lr: 0.003  max_mem: 4078M
[12/30 17:40:29] d2.utils.events INFO:  eta: 0:14:59  iter: 1319  total_loss: 0.9373  loss_cls: 0.3059  loss_box_reg: 0.5015  loss_rpn_cls: 0.06119  loss_rpn_loc: 0.05951    time: 0.5362  last_time: 0.5530  data_time: 0.0479  last_data_time: 0.0579   lr: 0.003  max_mem: 4078M
[12/30 17:40:39] d2.utils.events INFO:  eta: 0:14:48  iter: 1339  total_loss: 0.9395  loss_cls: 0.3054  loss_box_reg: 0.5068  loss_rpn_cls: 0.06226  loss_rpn_loc: 0.06329    time: 0.5362  last_time: 0.5428  data_time: 0.0485  last_data_time: 0.0551   lr: 0.003  max_mem: 4078M
[12/30 17:40:50] d2.utils.events INFO:  eta: 0:14:38  iter: 1359  total_loss: 0.9407  loss_cls: 0.3029  loss_box_reg: 0.5076  loss_rpn_cls: 0.05947  loss_rpn_loc: 0.06547    time: 0.5362  last_time: 0.5289  data_time: 0.0462  last_data_time: 0.0387   lr: 0.003  max_mem: 4078M
[12/30 17:41:01] d2.utils.events INFO:  eta: 0:14:27  iter: 1379  total_loss: 0.918  loss_cls: 0.3004  loss_box_reg: 0.5053  loss_rpn_cls: 0.05728  loss_rpn_loc: 0.06372    time: 0.5362  last_time: 0.5376  data_time: 0.0460  last_data_time: 0.0511   lr: 0.003  max_mem: 4078M
[12/30 17:41:12] d2.utils.events INFO:  eta: 0:14:16  iter: 1399  total_loss: 0.9423  loss_cls: 0.3016  loss_box_reg: 0.5097  loss_rpn_cls: 0.06093  loss_rpn_loc: 0.06683    time: 0.5362  last_time: 0.5332  data_time: 0.0457  last_data_time: 0.0426   lr: 0.003  max_mem: 4078M
[12/30 17:41:22] d2.utils.events INFO:  eta: 0:14:05  iter: 1419  total_loss: 0.9285  loss_cls: 0.3007  loss_box_reg: 0.4978  loss_rpn_cls: 0.06092  loss_rpn_loc: 0.06157    time: 0.5362  last_time: 0.5358  data_time: 0.0461  last_data_time: 0.0448   lr: 0.003  max_mem: 4078M
[12/30 17:41:33] d2.utils.events INFO:  eta: 0:13:55  iter: 1439  total_loss: 0.9321  loss_cls: 0.3003  loss_box_reg: 0.5064  loss_rpn_cls: 0.05816  loss_rpn_loc: 0.05455    time: 0.5363  last_time: 0.5485  data_time: 0.0470  last_data_time: 0.0508   lr: 0.003  max_mem: 4078M
[12/30 17:41:44] d2.utils.events INFO:  eta: 0:13:44  iter: 1459  total_loss: 0.9435  loss_cls: 0.3032  loss_box_reg: 0.5119  loss_rpn_cls: 0.0612  loss_rpn_loc: 0.06689    time: 0.5363  last_time: 0.5333  data_time: 0.0428  last_data_time: 0.0386   lr: 0.003  max_mem: 4078M
[12/30 17:41:55] d2.utils.events INFO:  eta: 0:13:33  iter: 1479  total_loss: 0.9219  loss_cls: 0.2953  loss_box_reg: 0.4999  loss_rpn_cls: 0.06186  loss_rpn_loc: 0.06688    time: 0.5363  last_time: 0.5378  data_time: 0.0437  last_data_time: 0.0479   lr: 0.003  max_mem: 4078M
[12/30 17:42:05] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_0001499.pth
[12/30 17:42:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/30 17:42:06] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/30 17:42:06] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/30 17:42:06] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/30 17:42:06] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/30 17:42:08] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0007 s/iter. Inference: 0.0824 s/iter. Eval: 0.0335 s/iter. Total: 0.1166 s/iter. ETA=0:00:41
[12/30 17:42:13] d2.evaluation.evaluator INFO: Inference done 54/363. Dataloading: 0.0011 s/iter. Inference: 0.0830 s/iter. Eval: 0.0331 s/iter. Total: 0.1172 s/iter. ETA=0:00:36
[12/30 17:42:18] d2.evaluation.evaluator INFO: Inference done 96/363. Dataloading: 0.0012 s/iter. Inference: 0.0833 s/iter. Eval: 0.0339 s/iter. Total: 0.1184 s/iter. ETA=0:00:31
[12/30 17:42:23] d2.evaluation.evaluator INFO: Inference done 139/363. Dataloading: 0.0012 s/iter. Inference: 0.0834 s/iter. Eval: 0.0340 s/iter. Total: 0.1185 s/iter. ETA=0:00:26
[12/30 17:42:28] d2.evaluation.evaluator INFO: Inference done 182/363. Dataloading: 0.0012 s/iter. Inference: 0.0833 s/iter. Eval: 0.0340 s/iter. Total: 0.1185 s/iter. ETA=0:00:21
[12/30 17:42:33] d2.evaluation.evaluator INFO: Inference done 224/363. Dataloading: 0.0012 s/iter. Inference: 0.0834 s/iter. Eval: 0.0341 s/iter. Total: 0.1187 s/iter. ETA=0:00:16
[12/30 17:42:38] d2.evaluation.evaluator INFO: Inference done 266/363. Dataloading: 0.0012 s/iter. Inference: 0.0835 s/iter. Eval: 0.0341 s/iter. Total: 0.1188 s/iter. ETA=0:00:11
[12/30 17:42:43] d2.evaluation.evaluator INFO: Inference done 308/363. Dataloading: 0.0012 s/iter. Inference: 0.0835 s/iter. Eval: 0.0343 s/iter. Total: 0.1190 s/iter. ETA=0:00:06
[12/30 17:42:48] d2.evaluation.evaluator INFO: Inference done 351/363. Dataloading: 0.0012 s/iter. Inference: 0.0835 s/iter. Eval: 0.0341 s/iter. Total: 0.1188 s/iter. ETA=0:00:01
[12/30 17:42:50] d2.evaluation.evaluator INFO: Total inference time: 0:00:42.598369 (0.118990 s / iter per device, on 1 devices)
[12/30 17:42:50] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:29 (0.083452 s / iter per device, on 1 devices)
[12/30 17:42:50] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/30 17:42:54] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/30 17:42:54] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/30 17:42:54] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/30 17:42:54] d2.evaluation.testing INFO: copypaste: 8.4322,18.0179,9.0909,5.1597,8.9403,21.1236,36.6011,35.0289,60.6950
[12/30 17:42:54] d2.utils.events INFO:  eta: 0:13:23  iter: 1499  total_loss: 0.9131  loss_cls: 0.2949  loss_box_reg: 0.4998  loss_rpn_cls: 0.058  loss_rpn_loc: 0.06377    time: 0.5362  last_time: 0.5279  data_time: 0.0442  last_data_time: 0.0433   lr: 0.003  max_mem: 4078M
[12/30 17:43:05] d2.utils.events INFO:  eta: 0:13:12  iter: 1519  total_loss: 0.9299  loss_cls: 0.2979  loss_box_reg: 0.5016  loss_rpn_cls: 0.05781  loss_rpn_loc: 0.06374    time: 0.5362  last_time: 0.5218  data_time: 0.0441  last_data_time: 0.0373   lr: 0.00288  max_mem: 4078M
[12/30 17:43:16] d2.utils.events INFO:  eta: 0:13:01  iter: 1539  total_loss: 0.9152  loss_cls: 0.2901  loss_box_reg: 0.4978  loss_rpn_cls: 0.05634  loss_rpn_loc: 0.06137    time: 0.5361  last_time: 0.5223  data_time: 0.0464  last_data_time: 0.0321   lr: 0.00288  max_mem: 4078M
[12/30 17:43:26] d2.utils.events INFO:  eta: 0:12:50  iter: 1559  total_loss: 0.9203  loss_cls: 0.3002  loss_box_reg: 0.4972  loss_rpn_cls: 0.05429  loss_rpn_loc: 0.05915    time: 0.5361  last_time: 0.5338  data_time: 0.0439  last_data_time: 0.0415   lr: 0.00288  max_mem: 4078M
[12/30 17:43:37] d2.utils.events INFO:  eta: 0:12:40  iter: 1579  total_loss: 0.9211  loss_cls: 0.2962  loss_box_reg: 0.5027  loss_rpn_cls: 0.05702  loss_rpn_loc: 0.06258    time: 0.5361  last_time: 0.5358  data_time: 0.0444  last_data_time: 0.0467   lr: 0.00288  max_mem: 4078M
[12/30 17:43:48] d2.utils.events INFO:  eta: 0:12:29  iter: 1599  total_loss: 0.9077  loss_cls: 0.2918  loss_box_reg: 0.4885  loss_rpn_cls: 0.05923  loss_rpn_loc: 0.06753    time: 0.5361  last_time: 0.5405  data_time: 0.0450  last_data_time: 0.0492   lr: 0.00288  max_mem: 4078M
[12/30 17:43:58] d2.utils.events INFO:  eta: 0:12:18  iter: 1619  total_loss: 0.8982  loss_cls: 0.2893  loss_box_reg: 0.496  loss_rpn_cls: 0.05655  loss_rpn_loc: 0.0586    time: 0.5361  last_time: 0.5351  data_time: 0.0474  last_data_time: 0.0411   lr: 0.00288  max_mem: 4078M
[12/30 17:44:09] d2.utils.events INFO:  eta: 0:12:07  iter: 1639  total_loss: 0.9283  loss_cls: 0.3016  loss_box_reg: 0.5013  loss_rpn_cls: 0.05711  loss_rpn_loc: 0.06697    time: 0.5361  last_time: 0.5429  data_time: 0.0464  last_data_time: 0.0517   lr: 0.00288  max_mem: 4078M
[12/30 17:44:20] d2.utils.events INFO:  eta: 0:11:57  iter: 1659  total_loss: 0.8879  loss_cls: 0.2873  loss_box_reg: 0.4902  loss_rpn_cls: 0.05784  loss_rpn_loc: 0.06082    time: 0.5361  last_time: 0.5366  data_time: 0.0433  last_data_time: 0.0461   lr: 0.00288  max_mem: 4078M
[12/30 17:44:31] d2.utils.events INFO:  eta: 0:11:46  iter: 1679  total_loss: 0.8945  loss_cls: 0.2903  loss_box_reg: 0.4828  loss_rpn_cls: 0.05541  loss_rpn_loc: 0.06278    time: 0.5361  last_time: 0.5496  data_time: 0.0446  last_data_time: 0.0452   lr: 0.00288  max_mem: 4078M
[12/30 17:44:41] d2.utils.events INFO:  eta: 0:11:35  iter: 1699  total_loss: 0.9046  loss_cls: 0.2959  loss_box_reg: 0.4942  loss_rpn_cls: 0.05438  loss_rpn_loc: 0.05969    time: 0.5360  last_time: 0.5355  data_time: 0.0438  last_data_time: 0.0439   lr: 0.00288  max_mem: 4078M
[12/30 17:44:52] d2.utils.events INFO:  eta: 0:11:25  iter: 1719  total_loss: 0.9012  loss_cls: 0.2893  loss_box_reg: 0.4869  loss_rpn_cls: 0.0558  loss_rpn_loc: 0.06554    time: 0.5361  last_time: 0.5358  data_time: 0.0474  last_data_time: 0.0477   lr: 0.00288  max_mem: 4078M
[12/30 17:45:03] d2.utils.events INFO:  eta: 0:11:14  iter: 1739  total_loss: 0.9083  loss_cls: 0.2946  loss_box_reg: 0.4997  loss_rpn_cls: 0.05727  loss_rpn_loc: 0.06336    time: 0.5360  last_time: 0.5394  data_time: 0.0434  last_data_time: 0.0456   lr: 0.00288  max_mem: 4078M
[12/30 17:45:13] d2.utils.events INFO:  eta: 0:11:03  iter: 1759  total_loss: 0.8956  loss_cls: 0.2867  loss_box_reg: 0.4878  loss_rpn_cls: 0.0546  loss_rpn_loc: 0.06112    time: 0.5360  last_time: 0.5297  data_time: 0.0449  last_data_time: 0.0398   lr: 0.00288  max_mem: 4078M
[12/30 17:45:24] d2.utils.events INFO:  eta: 0:10:52  iter: 1779  total_loss: 0.901  loss_cls: 0.289  loss_box_reg: 0.4883  loss_rpn_cls: 0.04996  loss_rpn_loc: 0.0608    time: 0.5360  last_time: 0.5373  data_time: 0.0429  last_data_time: 0.0474   lr: 0.00288  max_mem: 4078M
[12/30 17:45:35] d2.utils.events INFO:  eta: 0:10:41  iter: 1799  total_loss: 0.9008  loss_cls: 0.2903  loss_box_reg: 0.4856  loss_rpn_cls: 0.05476  loss_rpn_loc: 0.06365    time: 0.5360  last_time: 0.5345  data_time: 0.0443  last_data_time: 0.0462   lr: 0.00288  max_mem: 4078M
[12/30 17:45:46] d2.utils.events INFO:  eta: 0:10:31  iter: 1819  total_loss: 0.9097  loss_cls: 0.2931  loss_box_reg: 0.4986  loss_rpn_cls: 0.05755  loss_rpn_loc: 0.06818    time: 0.5360  last_time: 0.5349  data_time: 0.0460  last_data_time: 0.0443   lr: 0.00288  max_mem: 4078M
[12/30 17:45:56] d2.utils.events INFO:  eta: 0:10:20  iter: 1839  total_loss: 0.9111  loss_cls: 0.2908  loss_box_reg: 0.4909  loss_rpn_cls: 0.05846  loss_rpn_loc: 0.06841    time: 0.5360  last_time: 0.5445  data_time: 0.0456  last_data_time: 0.0582   lr: 0.00288  max_mem: 4078M
[12/30 17:46:07] d2.utils.events INFO:  eta: 0:10:09  iter: 1859  total_loss: 0.8755  loss_cls: 0.2847  loss_box_reg: 0.4836  loss_rpn_cls: 0.05284  loss_rpn_loc: 0.0589    time: 0.5359  last_time: 0.5262  data_time: 0.0451  last_data_time: 0.0416   lr: 0.00288  max_mem: 4078M
[12/30 17:46:18] d2.utils.events INFO:  eta: 0:09:59  iter: 1879  total_loss: 0.8951  loss_cls: 0.2874  loss_box_reg: 0.4884  loss_rpn_cls: 0.05457  loss_rpn_loc: 0.06323    time: 0.5360  last_time: 0.5489  data_time: 0.0449  last_data_time: 0.0419   lr: 0.00288  max_mem: 4078M
[12/30 17:46:28] d2.utils.events INFO:  eta: 0:09:48  iter: 1899  total_loss: 0.875  loss_cls: 0.2812  loss_box_reg: 0.4837  loss_rpn_cls: 0.05088  loss_rpn_loc: 0.05475    time: 0.5359  last_time: 0.5279  data_time: 0.0434  last_data_time: 0.0401   lr: 0.00288  max_mem: 4078M
[12/30 17:46:39] d2.utils.events INFO:  eta: 0:09:37  iter: 1919  total_loss: 0.8886  loss_cls: 0.2885  loss_box_reg: 0.4818  loss_rpn_cls: 0.05436  loss_rpn_loc: 0.06638    time: 0.5359  last_time: 0.5387  data_time: 0.0450  last_data_time: 0.0475   lr: 0.00288  max_mem: 4078M
[12/30 17:46:50] d2.utils.events INFO:  eta: 0:09:27  iter: 1939  total_loss: 0.8796  loss_cls: 0.283  loss_box_reg: 0.4816  loss_rpn_cls: 0.05136  loss_rpn_loc: 0.05903    time: 0.5359  last_time: 0.5269  data_time: 0.0436  last_data_time: 0.0419   lr: 0.00288  max_mem: 4078M
[12/30 17:47:01] d2.utils.events INFO:  eta: 0:09:16  iter: 1959  total_loss: 0.882  loss_cls: 0.2821  loss_box_reg: 0.4843  loss_rpn_cls: 0.05044  loss_rpn_loc: 0.0599    time: 0.5360  last_time: 0.5387  data_time: 0.0449  last_data_time: 0.0496   lr: 0.00288  max_mem: 4078M
[12/30 17:47:12] d2.utils.events INFO:  eta: 0:09:05  iter: 1979  total_loss: 0.8719  loss_cls: 0.2878  loss_box_reg: 0.4845  loss_rpn_cls: 0.04968  loss_rpn_loc: 0.05756    time: 0.5360  last_time: 0.5463  data_time: 0.0461  last_data_time: 0.0557   lr: 0.00288  max_mem: 4078M
[12/30 17:47:22] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_0001999.pth
[12/30 17:47:23] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/30 17:47:23] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/30 17:47:23] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/30 17:47:23] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/30 17:47:23] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/30 17:47:25] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0007 s/iter. Inference: 0.0828 s/iter. Eval: 0.0326 s/iter. Total: 0.1162 s/iter. ETA=0:00:40
[12/30 17:47:30] d2.evaluation.evaluator INFO: Inference done 55/363. Dataloading: 0.0011 s/iter. Inference: 0.0837 s/iter. Eval: 0.0315 s/iter. Total: 0.1163 s/iter. ETA=0:00:35
[12/30 17:47:35] d2.evaluation.evaluator INFO: Inference done 98/363. Dataloading: 0.0011 s/iter. Inference: 0.0837 s/iter. Eval: 0.0323 s/iter. Total: 0.1172 s/iter. ETA=0:00:31
[12/30 17:47:40] d2.evaluation.evaluator INFO: Inference done 141/363. Dataloading: 0.0011 s/iter. Inference: 0.0838 s/iter. Eval: 0.0325 s/iter. Total: 0.1174 s/iter. ETA=0:00:26
[12/30 17:47:45] d2.evaluation.evaluator INFO: Inference done 183/363. Dataloading: 0.0011 s/iter. Inference: 0.0844 s/iter. Eval: 0.0328 s/iter. Total: 0.1183 s/iter. ETA=0:00:21
[12/30 17:47:50] d2.evaluation.evaluator INFO: Inference done 226/363. Dataloading: 0.0012 s/iter. Inference: 0.0842 s/iter. Eval: 0.0327 s/iter. Total: 0.1181 s/iter. ETA=0:00:16
[12/30 17:47:55] d2.evaluation.evaluator INFO: Inference done 269/363. Dataloading: 0.0012 s/iter. Inference: 0.0842 s/iter. Eval: 0.0325 s/iter. Total: 0.1179 s/iter. ETA=0:00:11
[12/30 17:48:01] d2.evaluation.evaluator INFO: Inference done 312/363. Dataloading: 0.0012 s/iter. Inference: 0.0841 s/iter. Eval: 0.0327 s/iter. Total: 0.1180 s/iter. ETA=0:00:06
[12/30 17:48:06] d2.evaluation.evaluator INFO: Inference done 356/363. Dataloading: 0.0012 s/iter. Inference: 0.0840 s/iter. Eval: 0.0325 s/iter. Total: 0.1178 s/iter. ETA=0:00:00
[12/30 17:48:07] d2.evaluation.evaluator INFO: Total inference time: 0:00:42.221909 (0.117938 s / iter per device, on 1 devices)
[12/30 17:48:07] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:30 (0.084018 s / iter per device, on 1 devices)
[12/30 17:48:07] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/30 17:48:11] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/30 17:48:11] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/30 17:48:11] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/30 17:48:11] d2.evaluation.testing INFO: copypaste: 8.5173,21.2516,4.1701,7.1386,10.6520,26.3962,39.3876,41.1515,61.4051
[12/30 17:48:11] d2.utils.events INFO:  eta: 0:08:55  iter: 1999  total_loss: 0.8945  loss_cls: 0.2852  loss_box_reg: 0.4869  loss_rpn_cls: 0.05242  loss_rpn_loc: 0.06495    time: 0.5360  last_time: 0.5482  data_time: 0.0462  last_data_time: 0.0561   lr: 0.00288  max_mem: 4078M
[12/30 17:48:22] d2.utils.events INFO:  eta: 0:08:44  iter: 2019  total_loss: 0.8985  loss_cls: 0.2841  loss_box_reg: 0.483  loss_rpn_cls: 0.05665  loss_rpn_loc: 0.06726    time: 0.5360  last_time: 0.5356  data_time: 0.0454  last_data_time: 0.0486   lr: 0.0027648  max_mem: 4078M
[12/30 17:48:33] d2.utils.events INFO:  eta: 0:08:33  iter: 2039  total_loss: 0.8891  loss_cls: 0.2863  loss_box_reg: 0.479  loss_rpn_cls: 0.054  loss_rpn_loc: 0.06165    time: 0.5361  last_time: 0.5264  data_time: 0.0462  last_data_time: 0.0408   lr: 0.0027648  max_mem: 4078M
[12/30 17:48:44] d2.utils.events INFO:  eta: 0:08:23  iter: 2059  total_loss: 0.88  loss_cls: 0.2835  loss_box_reg: 0.4767  loss_rpn_cls: 0.05273  loss_rpn_loc: 0.06143    time: 0.5361  last_time: 0.5446  data_time: 0.0465  last_data_time: 0.0508   lr: 0.0027648  max_mem: 4078M
[12/30 17:48:54] d2.utils.events INFO:  eta: 0:08:12  iter: 2079  total_loss: 0.8917  loss_cls: 0.2821  loss_box_reg: 0.4877  loss_rpn_cls: 0.05596  loss_rpn_loc: 0.06755    time: 0.5361  last_time: 0.5398  data_time: 0.0482  last_data_time: 0.0460   lr: 0.0027648  max_mem: 4078M
[12/30 17:49:05] d2.utils.events INFO:  eta: 0:08:01  iter: 2099  total_loss: 0.871  loss_cls: 0.2848  loss_box_reg: 0.4755  loss_rpn_cls: 0.05079  loss_rpn_loc: 0.05973    time: 0.5361  last_time: 0.5422  data_time: 0.0437  last_data_time: 0.0517   lr: 0.0027648  max_mem: 4078M
[12/30 17:49:16] d2.utils.events INFO:  eta: 0:07:51  iter: 2119  total_loss: 0.8497  loss_cls: 0.2748  loss_box_reg: 0.4713  loss_rpn_cls: 0.05108  loss_rpn_loc: 0.05736    time: 0.5361  last_time: 0.5387  data_time: 0.0434  last_data_time: 0.0423   lr: 0.0027648  max_mem: 4078M
[12/30 17:49:27] d2.utils.events INFO:  eta: 0:07:40  iter: 2139  total_loss: 0.8669  loss_cls: 0.2791  loss_box_reg: 0.4848  loss_rpn_cls: 0.04863  loss_rpn_loc: 0.0615    time: 0.5361  last_time: 0.5318  data_time: 0.0451  last_data_time: 0.0416   lr: 0.0027648  max_mem: 4078M
[12/30 17:49:37] d2.utils.events INFO:  eta: 0:07:29  iter: 2159  total_loss: 0.8562  loss_cls: 0.2759  loss_box_reg: 0.4726  loss_rpn_cls: 0.04976  loss_rpn_loc: 0.05588    time: 0.5360  last_time: 0.5308  data_time: 0.0438  last_data_time: 0.0420   lr: 0.0027648  max_mem: 4078M
[12/30 17:49:48] d2.utils.events INFO:  eta: 0:07:18  iter: 2179  total_loss: 0.8867  loss_cls: 0.2823  loss_box_reg: 0.49  loss_rpn_cls: 0.05241  loss_rpn_loc: 0.06681    time: 0.5360  last_time: 0.5323  data_time: 0.0475  last_data_time: 0.0435   lr: 0.0027648  max_mem: 4078M
[12/30 17:49:59] d2.utils.events INFO:  eta: 0:07:08  iter: 2199  total_loss: 0.8545  loss_cls: 0.2708  loss_box_reg: 0.4755  loss_rpn_cls: 0.04945  loss_rpn_loc: 0.05547    time: 0.5360  last_time: 0.5260  data_time: 0.0434  last_data_time: 0.0394   lr: 0.0027648  max_mem: 4078M
[12/30 17:50:09] d2.utils.events INFO:  eta: 0:06:57  iter: 2219  total_loss: 0.8574  loss_cls: 0.2735  loss_box_reg: 0.469  loss_rpn_cls: 0.05038  loss_rpn_loc: 0.06351    time: 0.5360  last_time: 0.5464  data_time: 0.0470  last_data_time: 0.0549   lr: 0.0027648  max_mem: 4078M
[12/30 17:50:20] d2.utils.events INFO:  eta: 0:06:46  iter: 2239  total_loss: 0.86  loss_cls: 0.2793  loss_box_reg: 0.474  loss_rpn_cls: 0.04785  loss_rpn_loc: 0.06046    time: 0.5361  last_time: 0.5303  data_time: 0.0467  last_data_time: 0.0440   lr: 0.0027648  max_mem: 4078M
[12/30 17:50:31] d2.utils.events INFO:  eta: 0:06:36  iter: 2259  total_loss: 0.8847  loss_cls: 0.2812  loss_box_reg: 0.4859  loss_rpn_cls: 0.04871  loss_rpn_loc: 0.06161    time: 0.5361  last_time: 0.5315  data_time: 0.0443  last_data_time: 0.0451   lr: 0.0027648  max_mem: 4078M
[12/30 17:50:42] d2.utils.events INFO:  eta: 0:06:25  iter: 2279  total_loss: 0.8423  loss_cls: 0.2699  loss_box_reg: 0.4695  loss_rpn_cls: 0.04636  loss_rpn_loc: 0.0587    time: 0.5361  last_time: 0.5305  data_time: 0.0444  last_data_time: 0.0442   lr: 0.0027648  max_mem: 4078M
[12/30 17:50:52] d2.utils.events INFO:  eta: 0:06:14  iter: 2299  total_loss: 0.8396  loss_cls: 0.2707  loss_box_reg: 0.47  loss_rpn_cls: 0.04637  loss_rpn_loc: 0.05638    time: 0.5360  last_time: 0.5337  data_time: 0.0457  last_data_time: 0.0449   lr: 0.0027648  max_mem: 4078M
[12/30 17:51:03] d2.utils.events INFO:  eta: 0:06:03  iter: 2319  total_loss: 0.8625  loss_cls: 0.2727  loss_box_reg: 0.481  loss_rpn_cls: 0.04925  loss_rpn_loc: 0.06613    time: 0.5360  last_time: 0.5280  data_time: 0.0464  last_data_time: 0.0422   lr: 0.0027648  max_mem: 4078M
[12/30 17:51:14] d2.utils.events INFO:  eta: 0:05:53  iter: 2339  total_loss: 0.8468  loss_cls: 0.2726  loss_box_reg: 0.4682  loss_rpn_cls: 0.04623  loss_rpn_loc: 0.05804    time: 0.5360  last_time: 0.5387  data_time: 0.0456  last_data_time: 0.0515   lr: 0.0027648  max_mem: 4078M
[12/30 17:51:24] d2.utils.events INFO:  eta: 0:05:42  iter: 2359  total_loss: 0.8574  loss_cls: 0.2754  loss_box_reg: 0.4822  loss_rpn_cls: 0.04696  loss_rpn_loc: 0.05853    time: 0.5360  last_time: 0.5286  data_time: 0.0436  last_data_time: 0.0377   lr: 0.0027648  max_mem: 4078M
[12/30 17:51:35] d2.utils.events INFO:  eta: 0:05:31  iter: 2379  total_loss: 0.8679  loss_cls: 0.2752  loss_box_reg: 0.4758  loss_rpn_cls: 0.05322  loss_rpn_loc: 0.06467    time: 0.5360  last_time: 0.5324  data_time: 0.0470  last_data_time: 0.0451   lr: 0.0027648  max_mem: 4078M
[12/30 17:51:46] d2.utils.events INFO:  eta: 0:05:20  iter: 2399  total_loss: 0.8401  loss_cls: 0.2658  loss_box_reg: 0.4688  loss_rpn_cls: 0.04581  loss_rpn_loc: 0.05814    time: 0.5360  last_time: 0.5412  data_time: 0.0468  last_data_time: 0.0556   lr: 0.0027648  max_mem: 4078M
[12/30 17:51:57] d2.utils.events INFO:  eta: 0:05:10  iter: 2419  total_loss: 0.8607  loss_cls: 0.2729  loss_box_reg: 0.4706  loss_rpn_cls: 0.04975  loss_rpn_loc: 0.05951    time: 0.5360  last_time: 0.5267  data_time: 0.0429  last_data_time: 0.0314   lr: 0.0027648  max_mem: 4078M
[12/30 17:52:07] d2.utils.events INFO:  eta: 0:04:59  iter: 2439  total_loss: 0.8577  loss_cls: 0.2762  loss_box_reg: 0.4707  loss_rpn_cls: 0.0519  loss_rpn_loc: 0.0587    time: 0.5360  last_time: 0.5331  data_time: 0.0463  last_data_time: 0.0294   lr: 0.0027648  max_mem: 4078M
[12/30 17:52:18] d2.utils.events INFO:  eta: 0:04:48  iter: 2459  total_loss: 0.8609  loss_cls: 0.2752  loss_box_reg: 0.4715  loss_rpn_cls: 0.04902  loss_rpn_loc: 0.05983    time: 0.5360  last_time: 0.5349  data_time: 0.0470  last_data_time: 0.0443   lr: 0.0027648  max_mem: 4078M
[12/30 17:52:29] d2.utils.events INFO:  eta: 0:04:38  iter: 2479  total_loss: 0.8398  loss_cls: 0.2729  loss_box_reg: 0.4701  loss_rpn_cls: 0.04519  loss_rpn_loc: 0.05617    time: 0.5360  last_time: 0.5389  data_time: 0.0461  last_data_time: 0.0527   lr: 0.0027648  max_mem: 4078M
[12/30 17:52:40] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_0002499.pth
[12/30 17:52:41] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/30 17:52:41] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/30 17:52:41] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/30 17:52:41] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/30 17:52:41] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/30 17:52:42] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0008 s/iter. Inference: 0.0827 s/iter. Eval: 0.0318 s/iter. Total: 0.1154 s/iter. ETA=0:00:40
[12/30 17:52:47] d2.evaluation.evaluator INFO: Inference done 55/363. Dataloading: 0.0011 s/iter. Inference: 0.0837 s/iter. Eval: 0.0310 s/iter. Total: 0.1158 s/iter. ETA=0:00:35
[12/30 17:52:53] d2.evaluation.evaluator INFO: Inference done 98/363. Dataloading: 0.0011 s/iter. Inference: 0.0836 s/iter. Eval: 0.0318 s/iter. Total: 0.1166 s/iter. ETA=0:00:30
[12/30 17:52:58] d2.evaluation.evaluator INFO: Inference done 141/363. Dataloading: 0.0011 s/iter. Inference: 0.0836 s/iter. Eval: 0.0321 s/iter. Total: 0.1169 s/iter. ETA=0:00:25
[12/30 17:53:03] d2.evaluation.evaluator INFO: Inference done 184/363. Dataloading: 0.0011 s/iter. Inference: 0.0837 s/iter. Eval: 0.0323 s/iter. Total: 0.1172 s/iter. ETA=0:00:20
[12/30 17:53:08] d2.evaluation.evaluator INFO: Inference done 227/363. Dataloading: 0.0011 s/iter. Inference: 0.0836 s/iter. Eval: 0.0322 s/iter. Total: 0.1170 s/iter. ETA=0:00:15
[12/30 17:53:13] d2.evaluation.evaluator INFO: Inference done 270/363. Dataloading: 0.0011 s/iter. Inference: 0.0837 s/iter. Eval: 0.0322 s/iter. Total: 0.1171 s/iter. ETA=0:00:10
[12/30 17:53:18] d2.evaluation.evaluator INFO: Inference done 312/363. Dataloading: 0.0012 s/iter. Inference: 0.0838 s/iter. Eval: 0.0325 s/iter. Total: 0.1174 s/iter. ETA=0:00:05
[12/30 17:53:23] d2.evaluation.evaluator INFO: Inference done 355/363. Dataloading: 0.0012 s/iter. Inference: 0.0837 s/iter. Eval: 0.0324 s/iter. Total: 0.1173 s/iter. ETA=0:00:00
[12/30 17:53:24] d2.evaluation.evaluator INFO: Total inference time: 0:00:42.064769 (0.117499 s / iter per device, on 1 devices)
[12/30 17:53:24] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:29 (0.083731 s / iter per device, on 1 devices)
[12/30 17:53:24] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/30 17:53:28] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/30 17:53:28] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/30 17:53:28] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/30 17:53:28] d2.evaluation.testing INFO: copypaste: 8.3230,21.3460,3.4792,6.9991,10.8952,26.6087,41.4203,40.2284,62.6215
[12/30 17:53:28] d2.utils.events INFO:  eta: 0:04:27  iter: 2499  total_loss: 0.84  loss_cls: 0.2679  loss_box_reg: 0.4666  loss_rpn_cls: 0.04904  loss_rpn_loc: 0.06149    time: 0.5361  last_time: 0.5312  data_time: 0.0489  last_data_time: 0.0422   lr: 0.0027648  max_mem: 4078M
[12/30 17:53:39] d2.utils.events INFO:  eta: 0:04:16  iter: 2519  total_loss: 0.8335  loss_cls: 0.2699  loss_box_reg: 0.4636  loss_rpn_cls: 0.0503  loss_rpn_loc: 0.06178    time: 0.5360  last_time: 0.5371  data_time: 0.0444  last_data_time: 0.0474   lr: 0.0026542  max_mem: 4078M
[12/30 17:53:50] d2.utils.events INFO:  eta: 0:04:06  iter: 2539  total_loss: 0.836  loss_cls: 0.2689  loss_box_reg: 0.4648  loss_rpn_cls: 0.04436  loss_rpn_loc: 0.05838    time: 0.5360  last_time: 0.5411  data_time: 0.0443  last_data_time: 0.0491   lr: 0.0026542  max_mem: 4078M
[12/30 17:54:01] d2.utils.events INFO:  eta: 0:03:55  iter: 2559  total_loss: 0.8466  loss_cls: 0.271  loss_box_reg: 0.476  loss_rpn_cls: 0.0455  loss_rpn_loc: 0.05925    time: 0.5360  last_time: 0.5373  data_time: 0.0453  last_data_time: 0.0504   lr: 0.0026542  max_mem: 4078M
[12/30 17:54:11] d2.utils.events INFO:  eta: 0:03:44  iter: 2579  total_loss: 0.8552  loss_cls: 0.2726  loss_box_reg: 0.4736  loss_rpn_cls: 0.04796  loss_rpn_loc: 0.06279    time: 0.5360  last_time: 0.5378  data_time: 0.0460  last_data_time: 0.0469   lr: 0.0026542  max_mem: 4078M
[12/30 17:54:22] d2.utils.events INFO:  eta: 0:03:33  iter: 2599  total_loss: 0.854  loss_cls: 0.2719  loss_box_reg: 0.4749  loss_rpn_cls: 0.04347  loss_rpn_loc: 0.05687    time: 0.5360  last_time: 0.5306  data_time: 0.0460  last_data_time: 0.0455   lr: 0.0026542  max_mem: 4078M
[12/30 17:54:33] d2.utils.events INFO:  eta: 0:03:23  iter: 2619  total_loss: 0.8597  loss_cls: 0.2773  loss_box_reg: 0.4706  loss_rpn_cls: 0.04768  loss_rpn_loc: 0.06038    time: 0.5360  last_time: 0.5586  data_time: 0.0461  last_data_time: 0.0564   lr: 0.0026542  max_mem: 4078M
[12/30 17:54:44] d2.utils.events INFO:  eta: 0:03:12  iter: 2639  total_loss: 0.8315  loss_cls: 0.2672  loss_box_reg: 0.4617  loss_rpn_cls: 0.04586  loss_rpn_loc: 0.06008    time: 0.5360  last_time: 0.5331  data_time: 0.0440  last_data_time: 0.0459   lr: 0.0026542  max_mem: 4078M
[12/30 17:54:54] d2.utils.events INFO:  eta: 0:03:01  iter: 2659  total_loss: 0.8243  loss_cls: 0.2634  loss_box_reg: 0.4625  loss_rpn_cls: 0.04407  loss_rpn_loc: 0.05561    time: 0.5360  last_time: 0.5295  data_time: 0.0430  last_data_time: 0.0408   lr: 0.0026542  max_mem: 4078M
[12/30 17:55:05] d2.utils.events INFO:  eta: 0:02:51  iter: 2679  total_loss: 0.8386  loss_cls: 0.273  loss_box_reg: 0.4652  loss_rpn_cls: 0.04387  loss_rpn_loc: 0.05968    time: 0.5360  last_time: 0.5389  data_time: 0.0428  last_data_time: 0.0372   lr: 0.0026542  max_mem: 4078M
[12/30 17:55:16] d2.utils.events INFO:  eta: 0:02:40  iter: 2699  total_loss: 0.8427  loss_cls: 0.2697  loss_box_reg: 0.4698  loss_rpn_cls: 0.04419  loss_rpn_loc: 0.06213    time: 0.5360  last_time: 0.5315  data_time: 0.0457  last_data_time: 0.0452   lr: 0.0026542  max_mem: 4078M
[12/30 17:55:26] d2.utils.events INFO:  eta: 0:02:29  iter: 2719  total_loss: 0.8477  loss_cls: 0.267  loss_box_reg: 0.4654  loss_rpn_cls: 0.04674  loss_rpn_loc: 0.06312    time: 0.5360  last_time: 0.5336  data_time: 0.0473  last_data_time: 0.0458   lr: 0.0026542  max_mem: 4078M
[12/30 17:55:37] d2.utils.events INFO:  eta: 0:02:19  iter: 2739  total_loss: 0.8168  loss_cls: 0.2615  loss_box_reg: 0.448  loss_rpn_cls: 0.0454  loss_rpn_loc: 0.0577    time: 0.5360  last_time: 0.5531  data_time: 0.0462  last_data_time: 0.0621   lr: 0.0026542  max_mem: 4078M
[12/30 17:55:48] d2.utils.events INFO:  eta: 0:02:08  iter: 2759  total_loss: 0.8347  loss_cls: 0.2673  loss_box_reg: 0.462  loss_rpn_cls: 0.04573  loss_rpn_loc: 0.05861    time: 0.5360  last_time: 0.5404  data_time: 0.0425  last_data_time: 0.0467   lr: 0.0026542  max_mem: 4078M
[12/30 17:55:59] d2.utils.events INFO:  eta: 0:01:57  iter: 2779  total_loss: 0.8312  loss_cls: 0.267  loss_box_reg: 0.4624  loss_rpn_cls: 0.04169  loss_rpn_loc: 0.05843    time: 0.5360  last_time: 0.5361  data_time: 0.0450  last_data_time: 0.0422   lr: 0.0026542  max_mem: 4078M
[12/30 17:56:09] d2.utils.events INFO:  eta: 0:01:47  iter: 2799  total_loss: 0.8437  loss_cls: 0.2679  loss_box_reg: 0.4687  loss_rpn_cls: 0.04641  loss_rpn_loc: 0.06106    time: 0.5360  last_time: 0.5381  data_time: 0.0481  last_data_time: 0.0488   lr: 0.0026542  max_mem: 4078M
[12/30 17:56:20] d2.utils.events INFO:  eta: 0:01:36  iter: 2819  total_loss: 0.8204  loss_cls: 0.2616  loss_box_reg: 0.4598  loss_rpn_cls: 0.04402  loss_rpn_loc: 0.05676    time: 0.5360  last_time: 0.5398  data_time: 0.0488  last_data_time: 0.0522   lr: 0.0026542  max_mem: 4078M
[12/30 17:56:31] d2.utils.events INFO:  eta: 0:01:25  iter: 2839  total_loss: 0.829  loss_cls: 0.2645  loss_box_reg: 0.4645  loss_rpn_cls: 0.04404  loss_rpn_loc: 0.05989    time: 0.5360  last_time: 0.5328  data_time: 0.0441  last_data_time: 0.0460   lr: 0.0026542  max_mem: 4078M
[12/30 17:56:42] d2.utils.events INFO:  eta: 0:01:14  iter: 2859  total_loss: 0.8291  loss_cls: 0.2694  loss_box_reg: 0.4681  loss_rpn_cls: 0.04001  loss_rpn_loc: 0.05658    time: 0.5360  last_time: 0.5342  data_time: 0.0467  last_data_time: 0.0408   lr: 0.0026542  max_mem: 4078M
[12/30 17:56:52] d2.utils.events INFO:  eta: 0:01:04  iter: 2879  total_loss: 0.84  loss_cls: 0.2638  loss_box_reg: 0.4596  loss_rpn_cls: 0.04632  loss_rpn_loc: 0.06112    time: 0.5360  last_time: 0.5233  data_time: 0.0437  last_data_time: 0.0412   lr: 0.0026542  max_mem: 4078M
[12/30 17:57:03] d2.utils.events INFO:  eta: 0:00:53  iter: 2899  total_loss: 0.8075  loss_cls: 0.2582  loss_box_reg: 0.4479  loss_rpn_cls: 0.04265  loss_rpn_loc: 0.05803    time: 0.5360  last_time: 0.5431  data_time: 0.0448  last_data_time: 0.0520   lr: 0.0026542  max_mem: 4080M
[12/30 17:57:14] d2.utils.events INFO:  eta: 0:00:42  iter: 2919  total_loss: 0.8131  loss_cls: 0.2521  loss_box_reg: 0.4601  loss_rpn_cls: 0.04225  loss_rpn_loc: 0.05511    time: 0.5360  last_time: 0.5463  data_time: 0.0481  last_data_time: 0.0562   lr: 0.0026542  max_mem: 4080M
[12/30 17:57:25] d2.utils.events INFO:  eta: 0:00:32  iter: 2939  total_loss: 0.8366  loss_cls: 0.2671  loss_box_reg: 0.4653  loss_rpn_cls: 0.04488  loss_rpn_loc: 0.06011    time: 0.5360  last_time: 0.5351  data_time: 0.0474  last_data_time: 0.0427   lr: 0.0026542  max_mem: 4080M
[12/30 17:57:35] d2.utils.events INFO:  eta: 0:00:21  iter: 2959  total_loss: 0.8258  loss_cls: 0.265  loss_box_reg: 0.4665  loss_rpn_cls: 0.04371  loss_rpn_loc: 0.05942    time: 0.5360  last_time: 0.5339  data_time: 0.0442  last_data_time: 0.0469   lr: 0.0026542  max_mem: 4080M
[12/30 17:57:46] d2.utils.events INFO:  eta: 0:00:10  iter: 2979  total_loss: 0.8139  loss_cls: 0.2603  loss_box_reg: 0.4589  loss_rpn_cls: 0.0427  loss_rpn_loc: 0.05516    time: 0.5360  last_time: 0.5375  data_time: 0.0440  last_data_time: 0.0475   lr: 0.0026542  max_mem: 4080M
[12/30 17:57:57] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_0002999.pth
[12/30 17:57:58] fvcore.common.checkpoint INFO: Saving checkpoint to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_final.pth
[12/30 17:57:58] d2.utils.events INFO:  eta: 0:00:00  iter: 2999  total_loss: 0.8155  loss_cls: 0.2577  loss_box_reg: 0.4521  loss_rpn_cls: 0.04478  loss_rpn_loc: 0.06033    time: 0.5360  last_time: 0.5240  data_time: 0.0458  last_data_time: 0.0431   lr: 0.0026542  max_mem: 4080M
[12/30 17:57:58] d2.engine.hooks INFO: Overall training speed: 2998 iterations in 0:26:46 (0.5360 s / it)
[12/30 17:57:58] d2.engine.hooks INFO: Total training time: 0:30:54 (0:04:07 on hooks)
[12/30 17:57:59] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[12/30 17:57:59] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[12/30 17:57:59] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[12/30 17:57:59] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[12/30 17:57:59] d2.evaluation.evaluator INFO: Start inference on 363 batches
[12/30 17:58:00] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0007 s/iter. Inference: 0.0831 s/iter. Eval: 0.0316 s/iter. Total: 0.1155 s/iter. ETA=0:00:40
[12/30 17:58:05] d2.evaluation.evaluator INFO: Inference done 54/363. Dataloading: 0.0012 s/iter. Inference: 0.0845 s/iter. Eval: 0.0305 s/iter. Total: 0.1162 s/iter. ETA=0:00:35
[12/30 17:58:10] d2.evaluation.evaluator INFO: Inference done 97/363. Dataloading: 0.0012 s/iter. Inference: 0.0842 s/iter. Eval: 0.0320 s/iter. Total: 0.1175 s/iter. ETA=0:00:31
[12/30 17:58:15] d2.evaluation.evaluator INFO: Inference done 140/363. Dataloading: 0.0012 s/iter. Inference: 0.0841 s/iter. Eval: 0.0322 s/iter. Total: 0.1176 s/iter. ETA=0:00:26
[12/30 17:58:21] d2.evaluation.evaluator INFO: Inference done 184/363. Dataloading: 0.0012 s/iter. Inference: 0.0839 s/iter. Eval: 0.0320 s/iter. Total: 0.1172 s/iter. ETA=0:00:20
[12/30 17:58:26] d2.evaluation.evaluator INFO: Inference done 227/363. Dataloading: 0.0012 s/iter. Inference: 0.0839 s/iter. Eval: 0.0320 s/iter. Total: 0.1171 s/iter. ETA=0:00:15
[12/30 17:58:31] d2.evaluation.evaluator INFO: Inference done 270/363. Dataloading: 0.0012 s/iter. Inference: 0.0838 s/iter. Eval: 0.0320 s/iter. Total: 0.1171 s/iter. ETA=0:00:10
[12/30 17:58:36] d2.evaluation.evaluator INFO: Inference done 313/363. Dataloading: 0.0012 s/iter. Inference: 0.0838 s/iter. Eval: 0.0322 s/iter. Total: 0.1172 s/iter. ETA=0:00:05
[12/30 17:58:41] d2.evaluation.evaluator INFO: Inference done 357/363. Dataloading: 0.0012 s/iter. Inference: 0.0838 s/iter. Eval: 0.0321 s/iter. Total: 0.1171 s/iter. ETA=0:00:00
[12/30 17:58:42] d2.evaluation.evaluator INFO: Total inference time: 0:00:41.981226 (0.117266 s / iter per device, on 1 devices)
[12/30 17:58:42] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:29 (0.083767 s / iter per device, on 1 devices)
[12/30 17:58:42] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[12/30 17:58:47] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[12/30 17:58:47] d2.evaluation.testing INFO: copypaste: Task: bbox
[12/30 17:58:47] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[12/30 17:58:47] d2.evaluation.testing INFO: copypaste: 8.6446,20.1523,7.2727,7.8292,11.2575,27.2794,39.2247,41.4569,59.6104
[12/30 17:58:47] d2.evaluation.testing INFO: Results verification passed.
[03/09 03:33:53] detectron2 INFO: Rank of current process: 0. World size: 1
[03/09 03:33:54] detectron2 INFO: Environment info:
-------------------------------  ------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/home/ps/ltc/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.7
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.1+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 2080 Ti (arch=7.5)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-11.7
Pillow                           10.4.0
torchvision                      0.15.2+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[03/09 03:33:54] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/faster_rcnn_X_101_FPN_train1.yaml', resume=True, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[], GPU='3')
[03/09 03:33:54] detectron2 INFO: Contents of args.config_file=/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/faster_rcnn_X_101_FPN_train1.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m47.49[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m41.63[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m51.28[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m[38;5;15m  [39m[38;5;245m# this is a C2 model[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m16[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m24[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m32[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m48[39m[38;5;15m][39m[38;5;15m][39m[38;5;15m  [39m[38;5;245m# One size for each in feature map[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m0.5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1.0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m2.0[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mp2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(150,140,130,120)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_trainval',)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_val',)[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50.0[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(1500,2000,2500)[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáË°∞ÂáèÁÇπË∞ÉÊï¥Âà∞ÂéüÊù•ÁöÑ 2 ÂÄç[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m[38;5;15m  [39m[38;5;245m# ÁøªÂÄçÔºå‰øùËØÅÊÄªËÆ≠ÁªÉÈáè‰∏ÄËá¥[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m[38;5;15m  [39m[38;5;245m# ÂèØÈÄÇÂΩìÂ¢ûÂä†ÔºåÈÅøÂÖçËøáÂ§ßÁöÑÂàùÂßãÊ≥¢Âä®[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m[38;5;15m  [39m[38;5;245m# Âçï GPU ËÆ≠ÁªÉÔºåbatch size ÂáèÂçä[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáÂáèÂçäÔºåÈÄÇÈÖç batch size[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mbbox[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mAP[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/ps/ltc/detectron2/experiments/monuseg18_fullres/[39m[38;5;186m"[39m[38;5;15m [39m[38;5;245m#######################[39m

[03/09 03:33:54] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCLUSTER_PARAMETER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mADJUST_PARAMETER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;204mTARGET_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mBORDER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mCANVAS_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mEXPAND[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mMAX_CHILD_SIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNMM_THR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPACK_MODE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mresize[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id003[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mPRIOR_LEVEL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mPRIOR_MODE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141massign[39m
[38;5;15m    [39m[38;5;204mREGION_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id003[39m
[38;5;15m    [39m[38;5;204mROI_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mSCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSTEP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mWSI_PRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50.0[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_MODE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141munion[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_trainval[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m140[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m130[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m120[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m47.49[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m41.63[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m51.28[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id005[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id004[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id004[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFastRCNNConvFCHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id005[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/ltc/detectron2/experiments/monuseg18_fullres/[39m
[38;5;204mSAVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./results[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mbbox[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mAP[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/09 03:33:54] detectron2 INFO: Full config saved to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/config.yaml
[03/09 03:33:54] d2.utils.env INFO: Using a generated random seed 58134589
[03/09 03:33:56] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
  )
)
[03/09 03:33:58] d2.data.build INFO: Removed 12 images with no usable annotations. 6241 images left.
[03/09 03:33:58] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 91309        |
|            |              |[0m
[03/09 03:33:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(150, 140, 130, 120), max_size=150, sample_style='choice'), RandomFlip()]
[03/09 03:33:58] d2.data.build INFO: Using training sampler TrainingSampler
[03/09 03:33:58] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/09 03:33:58] d2.data.common INFO: Serializing 6241 elements to byte tensors and concatenating them all ...
[03/09 03:33:58] d2.data.common INFO: Serialized dataset takes 7.66 MiB
[03/09 03:33:58] d2.data.build INFO: Making batched data loader with batch_size=16
[03/09 03:33:58] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_final.pth ...
[03/09 03:33:58] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_final.pth ...
[03/09 03:33:58] fvcore.common.checkpoint INFO: Loading trainer from /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_final.pth ...
[03/09 03:33:58] d2.engine.hooks INFO: Loading scheduler from state_dict ...
[03/09 03:33:58] d2.engine.train_loop INFO: Starting training from iteration 3000
[03/09 03:33:58] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[03/09 03:33:59] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 17889        |
|            |              |[0m
[03/09 03:33:59] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(150, 150), max_size=150, sample_style='choice')]
[03/09 03:33:59] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/09 03:33:59] d2.data.common INFO: Serializing 1251 elements to byte tensors and concatenating them all ...
[03/09 03:33:59] d2.data.common INFO: Serialized dataset takes 1.51 MiB
[03/09 03:33:59] d2.evaluation.evaluator INFO: Start inference on 1251 batches
[03/09 03:34:00] d2.evaluation.evaluator INFO: Inference done 11/1251. Dataloading: 0.0006 s/iter. Inference: 0.0255 s/iter. Eval: 0.0039 s/iter. Total: 0.0300 s/iter. ETA=0:00:37
[03/09 03:34:05] d2.evaluation.evaluator INFO: Inference done 190/1251. Dataloading: 0.0011 s/iter. Inference: 0.0221 s/iter. Eval: 0.0048 s/iter. Total: 0.0280 s/iter. ETA=0:00:29
[03/09 03:34:10] d2.evaluation.evaluator INFO: Inference done 373/1251. Dataloading: 0.0010 s/iter. Inference: 0.0219 s/iter. Eval: 0.0047 s/iter. Total: 0.0277 s/iter. ETA=0:00:24
[03/09 03:34:15] d2.evaluation.evaluator INFO: Inference done 542/1251. Dataloading: 0.0010 s/iter. Inference: 0.0224 s/iter. Eval: 0.0049 s/iter. Total: 0.0283 s/iter. ETA=0:00:20
[03/09 03:34:20] d2.evaluation.evaluator INFO: Inference done 695/1251. Dataloading: 0.0010 s/iter. Inference: 0.0233 s/iter. Eval: 0.0050 s/iter. Total: 0.0293 s/iter. ETA=0:00:16
[03/09 03:34:25] d2.evaluation.evaluator INFO: Inference done 869/1251. Dataloading: 0.0010 s/iter. Inference: 0.0233 s/iter. Eval: 0.0049 s/iter. Total: 0.0292 s/iter. ETA=0:00:11
[03/09 03:34:25] detectron2 INFO: Rank of current process: 0. World size: 1
[03/09 03:34:26] detectron2 INFO: Environment info:
-------------------------------  ------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/home/ps/ltc/detectron2/detectron2
Compiler                         GCC 9.4
CUDA compiler                    CUDA 11.7
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.1+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA GeForce RTX 2080 Ti (arch=7.5)
Driver version                   535.183.01
CUDA_HOME                        /usr/local/cuda-11.7
Pillow                           10.4.0
torchvision                      0.15.2+cu117 @/home/ps/anaconda3/envs/nnunet/lib/python3.9/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[03/09 03:34:26] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/faster_rcnn_X_101_FPN_train2.yaml', resume=True, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[], GPU='2')
[03/09 03:34:26] detectron2 INFO: Contents of args.config_file=/home/ps/ltc/detectron2/configs/monuseg18_PascalVOC-Detection/faster_rcnn_X_101_FPN_train2.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m47.49[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m41.63[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m51.28[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m[38;5;15m  [39m[38;5;245m# this is a C2 model[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m16[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m24[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m32[39m[38;5;15m][39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m48[39m[38;5;15m][39m[38;5;15m][39m[38;5;15m  [39m[38;5;245m# One size for each in feature map[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;15m0.5[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m1.0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m2.0[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mp2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mp5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(250,200,150,100)[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m

[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_trainval',)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m('voc_2007_val',)[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50.0[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m(1500,2000,2500)[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáË°∞ÂáèÁÇπË∞ÉÊï¥Âà∞ÂéüÊù•ÁöÑ 2 ÂÄç[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m[38;5;15m  [39m[38;5;245m# ÁøªÂÄçÔºå‰øùËØÅÊÄªËÆ≠ÁªÉÈáè‰∏ÄËá¥[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m[38;5;15m  [39m[38;5;245m# ÂèØÈÄÇÂΩìÂ¢ûÂä†ÔºåÈÅøÂÖçËøáÂ§ßÁöÑÂàùÂßãÊ≥¢Âä®[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m[38;5;15m  [39m[38;5;245m# Âçï GPU ËÆ≠ÁªÉÔºåbatch size ÂáèÂçä[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m[38;5;15m  [39m[38;5;245m# Â≠¶‰π†ÁéáÂáèÂçäÔºåÈÄÇÈÖç batch size[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m

[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m[[39m[38;5;186m'[39m[38;5;186mbbox[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mAP[39m[38;5;186m'[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m0[39m[38;5;15m,[39m[38;5;15m [39m[38;5;15m100[39m[38;5;15m][39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m

[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/ps/ltc/detectron2/experiments/monuseg18_fullres/[39m[38;5;186m"[39m[38;5;15m [39m[38;5;245m#######################[39m

[03/09 03:34:26] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCLUSTER_PARAMETER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mADJUST_PARAMETER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m      [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m      [39m[38;5;204mTARGET_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mBORDER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mCANVAS_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mEXPAND[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mMAX_CHILD_SIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNMM_THR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPACK_MODE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mresize[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id003[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mPRIOR_LEVEL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mPRIOR_MODE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141massign[39m
[38;5;15m    [39m[38;5;204mREGION_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id003[39m
[38;5;15m    [39m[38;5;204mROI_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mSCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSTEP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mWSI_PRIOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mPOST_PROCESS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAREA_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50.0[39m
[38;5;15m    [39m[38;5;204mAXIS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_MODE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141munion[39m
[38;5;15m    [39m[38;5;204mFINAL_NMS_THR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mvoc_2007_trainval[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGeneralizedRCNN[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m47.49[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m41.63[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m51.28[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m101[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id005[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id004[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id004[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFastRCNNConvFCHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id005[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/ltc/detectron2/experiments/monuseg18_fullres/[39m
[38;5;204mSAVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./results[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.003[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.96[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1500[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m150[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mbbox[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mAP[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[03/09 03:34:26] detectron2 INFO: Full config saved to /home/ps/ltc/detectron2/experiments/monuseg18_fullres/config.yaml
[03/09 03:34:26] d2.utils.env INFO: Using a generated random seed 29952271
[03/09 03:34:28] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
  )
)
[03/09 03:34:30] d2.evaluation.evaluator INFO: Inference done 1047/1251. Dataloading: 0.0010 s/iter. Inference: 0.0232 s/iter. Eval: 0.0049 s/iter. Total: 0.0291 s/iter. ETA=0:00:05
[03/09 03:34:32] d2.data.build INFO: Removed 0 images with no usable annotations. 1813 images left.
[03/09 03:34:32] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 74656        |
|            |              |[0m
[03/09 03:34:32] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(250, 200, 150, 100), max_size=250, sample_style='choice'), RandomFlip()]
[03/09 03:34:32] d2.data.build INFO: Using training sampler TrainingSampler
[03/09 03:34:32] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/09 03:34:32] d2.data.common INFO: Serializing 1813 elements to byte tensors and concatenating them all ...
[03/09 03:34:32] d2.data.common INFO: Serialized dataset takes 4.70 MiB
[03/09 03:34:32] d2.data.build INFO: Making batched data loader with batch_size=16
[03/09 03:34:32] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_final.pth ...
[03/09 03:34:32] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_final.pth ...
[03/09 03:34:32] fvcore.common.checkpoint INFO: Loading trainer from /home/ps/ltc/detectron2/experiments/monuseg18_fullres/model_final.pth ...
[03/09 03:34:32] d2.engine.hooks INFO: Loading scheduler from state_dict ...
[03/09 03:34:32] d2.engine.train_loop INFO: Starting training from iteration 3000
[03/09 03:34:32] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[03/09 03:34:33] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|  nuclear   | 15059        |
|            |              |[0m
[03/09 03:34:33] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(150, 150), max_size=150, sample_style='choice')]
[03/09 03:34:33] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[03/09 03:34:33] d2.data.common INFO: Serializing 363 elements to byte tensors and concatenating them all ...
[03/09 03:34:33] d2.data.common INFO: Serialized dataset takes 0.95 MiB
[03/09 03:34:33] d2.evaluation.evaluator INFO: Start inference on 363 batches
[03/09 03:34:34] d2.evaluation.evaluator INFO: Inference done 11/363. Dataloading: 0.0006 s/iter. Inference: 0.0284 s/iter. Eval: 0.0092 s/iter. Total: 0.0382 s/iter. ETA=0:00:13
[03/09 03:34:35] d2.evaluation.evaluator INFO: Inference done 1218/1251. Dataloading: 0.0010 s/iter. Inference: 0.0232 s/iter. Eval: 0.0049 s/iter. Total: 0.0291 s/iter. ETA=0:00:00
[03/09 03:34:36] d2.evaluation.evaluator INFO: Total inference time: 0:00:36.206154 (0.029058 s / iter per device, on 1 devices)
[03/09 03:34:36] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:28 (0.023163 s / iter per device, on 1 devices)
[03/09 03:34:36] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[03/09 03:34:39] d2.evaluation.evaluator INFO: Inference done 157/363. Dataloading: 0.0010 s/iter. Inference: 0.0236 s/iter. Eval: 0.0098 s/iter. Total: 0.0344 s/iter. ETA=0:00:07
[03/09 03:34:44] d2.evaluation.evaluator INFO: Inference done 298/363. Dataloading: 0.0010 s/iter. Inference: 0.0237 s/iter. Eval: 0.0103 s/iter. Total: 0.0350 s/iter. ETA=0:00:02
[03/09 03:34:46] d2.evaluation.evaluator INFO: Total inference time: 0:00:12.505266 (0.034931 s / iter per device, on 1 devices)
[03/09 03:34:46] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:08 (0.023523 s / iter per device, on 1 devices)
[03/09 03:34:46] d2.evaluation.pascal_voc_evaluation INFO: Evaluating voc_2007_val using 2007 metric. Note that results do not use the official Matlab API.
[03/09 03:34:53] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[03/09 03:34:53] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/09 03:34:53] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[03/09 03:34:53] d2.evaluation.testing INFO: copypaste: 32.2279,60.7196,28.0569,35.4472,38.8331,69.6925,76.3495,79.7596,87.3781
[03/09 03:34:53] d2.utils.events INFO:  iter: 3001       lr: N/A  max_mem: 916M
[03/09 03:34:53] d2.evaluation.testing INFO: Results verification passed.
[03/09 03:34:55] d2.engine.defaults INFO: Evaluation results for voc_2007_val in csv format:
[03/09 03:34:55] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/09 03:34:55] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,REC75,PREC75,REC50,PREC50,REC30,PREC30
[03/09 03:34:55] d2.evaluation.testing INFO: copypaste: 40.5318,78.1564,38.2293,49.2705,41.2660,82.4920,69.0903,90.7541,76.0101
[03/09 03:34:55] d2.utils.events INFO:  iter: 3001       lr: N/A  max_mem: 916M
[03/09 03:34:55] d2.evaluation.testing INFO: Results verification passed.
